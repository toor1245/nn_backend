
/home/mhohsadze/CLionProjects/nn-backend/cmake-build-release/libnn_backend.so:	file format elf64-x86-64

Disassembly of section .note.gnu.build-id:

0000000000000238 <.note.gnu.build-id>:
     238: 04 00                        	add	al, 0
     23a: 00 00                        	add	byte ptr [rax], al
     23c: 14 00                        	adc	al, 0
     23e: 00 00                        	add	byte ptr [rax], al
     240: 03 00                        	add	eax, dword ptr [rax]
     242: 00 00                        	add	byte ptr [rax], al
     244: 47 4e                        	<unknown>
     246: 55                           	push	rbp
     247: 00 16                        	add	byte ptr [rsi], dl
     249: a9 cf cf a8 7d               	test	eax, 2108215247
     24e: 39 88 cf 72 f8 86            	cmp	dword ptr [rax - 2030538033], ecx
     254: 84 4e 25                     	test	byte ptr [rsi + 37], cl
     257: d6                           	<unknown>
     258: 83 de 3f                     	sbb	esi, 63
     25b: 5a                           	pop	rdx

Disassembly of section .gnu.hash:

0000000000000260 <.gnu.hash>:
     260: 11 00                        	adc	dword ptr [rax], eax
     262: 00 00                        	add	byte ptr [rax], al
     264: 38 00                        	cmp	byte ptr [rax], al
     266: 00 00                        	add	byte ptr [rax], al
     268: 02 00                        	add	al, byte ptr [rax]
     26a: 00 00                        	add	byte ptr [rax], al
     26c: 07                           	<unknown>
     26d: 00 00                        	add	byte ptr [rax], al
     26f: 00 73 04                     	add	byte ptr [rbx + 4], dh
     272: 21 40 2d                     	and	dword ptr [rax + 45], eax
     275: 03 8d 19 80 09 e1            	add	ecx, dword ptr [rbp - 519471079]
     27b: 48 44                        	<unknown>
     27d: 10 2a                        	adc	byte ptr [rdx], ch
     27f: 04 38                        	add	al, 56
     281: 00 00                        	add	byte ptr [rax], al
     283: 00 3b                        	add	byte ptr [rbx], bh
     285: 00 00                        	add	byte ptr [rax], al
     287: 00 3c 00                     	add	byte ptr [rax + rax], bh
     28a: 00 00                        	add	byte ptr [rax], al
     28c: 3d 00 00 00 00               	cmp	eax, 0
     291: 00 00                        	add	byte ptr [rax], al
     293: 00 3e                        	add	byte ptr [rsi], bh
     295: 00 00                        	add	byte ptr [rax], al
     297: 00 00                        	add	byte ptr [rax], al
     299: 00 00                        	add	byte ptr [rax], al
     29b: 00 3f                        	add	byte ptr [rdi], bh
     29d: 00 00                        	add	byte ptr [rax], al
     29f: 00 42 00                     	add	byte ptr [rdx], al
     2a2: 00 00                        	add	byte ptr [rax], al
     2a4: 43 00 00                     	add	byte ptr [r8], al
     2a7: 00 44 00 00                  	add	byte ptr [rax + rax], al
     2ab: 00 45 00                     	add	byte ptr [rbp], al
     2ae: 00 00                        	add	byte ptr [rax], al
     2b0: 48 00 00                     	add	byte ptr [rax], al
     2b3: 00 4a 00                     	add	byte ptr [rdx], cl
     2b6: 00 00                        	add	byte ptr [rax], al
     2b8: 00 00                        	add	byte ptr [rax], al
     2ba: 00 00                        	add	byte ptr [rax], al
     2bc: 4b 00 00                     	add	byte ptr [r8], al
     2bf: 00 4c 00 00                  	add	byte ptr [rax + rax], cl
     2c3: 00 50 7d                     	add	byte ptr [rax + 125], dl
     2c6: 36 95                        	xchg	eax, ebp
     2c8: c6 f9                        	<unknown>
     2ca: 7e 37                        	jle	0x303 <.gnu.hash+0xa3>
     2cc: e3 0a                        	jrcxz	0x2d8 <.gnu.hash+0x78>
     2ce: 7b 31                        	jnp	0x301 <.gnu.hash+0xa1>
     2d0: bd 80 7c 7a 29               	mov	ebp, 695893120
     2d5: 05 be d0 25 88               	add	eax, 2284179646
     2da: d5                           	<unknown>
     2db: 4c 23 71 51                  	and	r14, qword ptr [rcx + 81]
     2df: a8 5a                        	test	al, 90
     2e1: a4                           	movsb	byte ptr es:[rdi], byte ptr [rsi]
     2e2: 26 7a d6                     	jp	0x2bb <.gnu.hash+0x5b>
     2e5: c5 71 b3                     	<unknown>
     2e8: 29 99 d5 4c 21 1c            	sub	dword ptr [rcx + 471944405], ebx
     2ee: 22 76 15                     	and	dh, byte ptr [rsi + 21]
     2f1: 4f 79 e6                     	jns	0x2da <.gnu.hash+0x7a>
     2f4: 29 b8 27 35 6c b3            	sub	dword ptr [rax - 1284754137], edi
     2fa: 1a 6a e6                     	sbb	ch, byte ptr [rdx - 26]
     2fd: fa                           	cli
     2fe: 34 d2                        	xor	al, -46
     300: 57                           	push	rdi
     301: 8b d4                        	mov	edx, esp
     303: db b6 39 f6 df 71            	<unknown>
     309: 8f e5 9c                     	<unknown>
     30c: 91                           	xchg	eax, ecx
     30d: 91                           	xchg	eax, ecx
     30e: d6                           	<unknown>
     30f: be 87 5d a9 3d               	mov	esi, 1034509703
     314: 80 42 23 08                  	add	byte ptr [rdx + 35], 8
     318: 01 82                        	<unknown>
     31a: af                           	scasd	eax, dword ptr es:[rdi]
     31b: ed                           	in	eax, dx

Disassembly of section .dynsym:

0000000000000320 <.dynsym>:
		...
     338: 72 03                        	jb	0x33d <.dynsym+0x1d>
     33a: 00 00                        	add	byte ptr [rax], al
     33c: 12 00                        	adc	al, byte ptr [rax]
		...
     34e: 00 00                        	add	byte ptr [rax], al
     350: bd 00 00 00 12               	mov	ebp, 301989888
		...
     365: 00 00                        	add	byte ptr [rax], al
     367: 00 6b 02                     	add	byte ptr [rbx + 2], ch
     36a: 00 00                        	add	byte ptr [rax], al
     36c: 12 00                        	adc	al, byte ptr [rax]
		...
     37e: 00 00                        	add	byte ptr [rax], al
     380: f3 01 00                     	rep		add	dword ptr [rax], eax
     383: 00 12                        	add	byte ptr [rdx], dl
		...
     395: 00 00                        	add	byte ptr [rax], al
     397: 00 5b 02                     	add	byte ptr [rbx + 2], bl
     39a: 00 00                        	add	byte ptr [rax], al
     39c: 12 00                        	adc	al, byte ptr [rax]
		...
     3ae: 00 00                        	add	byte ptr [rax], al
     3b0: 10 00                        	adc	byte ptr [rax], al
     3b2: 00 00                        	add	byte ptr [rax], al
     3b4: 20 00                        	and	byte ptr [rax], al
		...
     3c6: 00 00                        	add	byte ptr [rax], al
     3c8: d5                           	<unknown>
     3c9: 02 00                        	add	al, byte ptr [rax]
     3cb: 00 12                        	add	byte ptr [rdx], dl
		...
     3dd: 00 00                        	add	byte ptr [rax], al
     3df: 00 e1                        	add	cl, ah
     3e1: 01 00                        	add	dword ptr [rax], eax
     3e3: 00 12                        	add	byte ptr [rdx], dl
		...
     3f5: 00 00                        	add	byte ptr [rax], al
     3f7: 00 0c 04                     	add	byte ptr [rsp + rax], cl
     3fa: 00 00                        	add	byte ptr [rax], al
     3fc: 12 00                        	adc	al, byte ptr [rax]
		...
     40e: 00 00                        	add	byte ptr [rax], al
     410: b7 03                        	mov	bh, 3
     412: 00 00                        	add	byte ptr [rax], al
     414: 12 00                        	adc	al, byte ptr [rax]
		...
     426: 00 00                        	add	byte ptr [rax], al
     428: db 02                        	fild	dword ptr [rdx]
     42a: 00 00                        	add	byte ptr [rax], al
     42c: 12 00                        	adc	al, byte ptr [rax]
		...
     43e: 00 00                        	add	byte ptr [rax], al
     440: 1d 05 00 00 12               	sbb	eax, 301989893
		...
     455: 00 00                        	add	byte ptr [rax], al
     457: 00 9f 01 00 00 12            	add	byte ptr [rdi + 301989889], bl
		...
     46d: 00 00                        	add	byte ptr [rax], al
     46f: 00 77 00                     	add	byte ptr [rdi], dh
     472: 00 00                        	add	byte ptr [rax], al
     474: 12 00                        	adc	al, byte ptr [rax]
		...
     486: 00 00                        	add	byte ptr [rax], al
     488: ce                           	<unknown>
     489: 02 00                        	add	al, byte ptr [rax]
     48b: 00 12                        	add	byte ptr [rdx], dl
		...
     49d: 00 00                        	add	byte ptr [rax], al
     49f: 00 a2 04 00 00 12            	add	byte ptr [rdx + 301989892], ah
		...
     4b5: 00 00                        	add	byte ptr [rax], al
     4b7: 00 e8                        	add	al, ch
     4b9: 00 00                        	add	byte ptr [rax], al
     4bb: 00 12                        	add	byte ptr [rdx], dl
		...
     4cd: 00 00                        	add	byte ptr [rax], al
     4cf: 00 3f                        	add	byte ptr [rdi], bh
     4d1: 02 00                        	add	al, byte ptr [rax]
     4d3: 00 12                        	add	byte ptr [rdx], dl
		...
     4e5: 00 00                        	add	byte ptr [rax], al
     4e7: 00 d1                        	add	cl, dl
     4e9: 04 00                        	add	al, 0
     4eb: 00 12                        	add	byte ptr [rdx], dl
		...
     4fd: 00 00                        	add	byte ptr [rax], al
     4ff: 00 fa                        	add	dl, bh
     501: 05 00 00 12 00               	add	eax, 1179648
		...
     516: 00 00                        	add	byte ptr [rax], al
     518: 4d 02 00                     	add	r8b, byte ptr [r8]
     51b: 00 12                        	add	byte ptr [rdx], dl
		...
     52d: 00 00                        	add	byte ptr [rax], al
     52f: 00 19                        	add	byte ptr [rcx], bl
     531: 02 00                        	add	al, byte ptr [rax]
     533: 00 12                        	add	byte ptr [rdx], dl
		...
     545: 00 00                        	add	byte ptr [rax], al
     547: 00 7e 00                     	add	byte ptr [rsi], bh
     54a: 00 00                        	add	byte ptr [rax], al
     54c: 12 00                        	adc	al, byte ptr [rax]
		...
     55e: 00 00                        	add	byte ptr [rax], al
     560: 45 03 00                     	add	r8d, dword ptr [r8]
     563: 00 12                        	add	byte ptr [rdx], dl
		...
     575: 00 00                        	add	byte ptr [rax], al
     577: 00 8d 05 00 00 12            	add	byte ptr [rbp + 301989893], cl
		...
     58d: 00 00                        	add	byte ptr [rax], al
     58f: 00 76 00                     	add	byte ptr [rsi], dh
     592: 00 00                        	add	byte ptr [rax], al
     594: 12 00                        	adc	al, byte ptr [rax]
		...
     5a6: 00 00                        	add	byte ptr [rax], al
     5a8: c8 02 00 00                  	enter	2, 0
     5ac: 12 00                        	adc	al, byte ptr [rax]
		...
     5be: 00 00                        	add	byte ptr [rax], al
     5c0: 74 05                        	je	0x5c7 <.dynsym+0x2a7>
     5c2: 00 00                        	add	byte ptr [rax], al
     5c4: 12 00                        	adc	al, byte ptr [rax]
		...
     5d6: 00 00                        	add	byte ptr [rax], al
     5d8: 01 00                        	add	dword ptr [rax], eax
     5da: 00 00                        	add	byte ptr [rax], al
     5dc: 20 00                        	and	byte ptr [rax], al
		...
     5ee: 00 00                        	add	byte ptr [rax], al
     5f0: 38 02                        	cmp	byte ptr [rdx], al
     5f2: 00 00                        	add	byte ptr [rax], al
     5f4: 12 00                        	adc	al, byte ptr [rax]
		...
     606: 00 00                        	add	byte ptr [rax], al
     608: 4b 04 00                     	add	al, 0
     60b: 00 12                        	add	byte ptr [rdx], dl
		...
     61d: 00 00                        	add	byte ptr [rax], al
     61f: 00 1d 01 00 00 12            	add	byte ptr [rip + 301989889], bl # 0x12000626 <completed.0+0x11ff9416>
		...
     635: 00 00                        	add	byte ptr [rax], al
     637: 00 84 00 00 00 12 00         	add	byte ptr [rax + rax + 1179648], al
		...
     64e: 00 00                        	add	byte ptr [rax], al
     650: 2c 02                        	sub	al, 2
     652: 00 00                        	add	byte ptr [rax], al
     654: 12 00                        	adc	al, byte ptr [rax]
		...
     666: 00 00                        	add	byte ptr [rax], al
     668: 6f                           	outsd	dx, dword ptr [rsi]
     669: 01 00                        	add	dword ptr [rax], eax
     66b: 00 12                        	add	byte ptr [rdx], dl
		...
     67d: 00 00                        	add	byte ptr [rax], al
     67f: 00 d9                        	add	cl, bl
     681: 00 00                        	add	byte ptr [rax], al
     683: 00 12                        	add	byte ptr [rdx], dl
		...
     695: 00 00                        	add	byte ptr [rax], al
     697: 00 41 01                     	add	byte ptr [rcx + 1], al
     69a: 00 00                        	add	byte ptr [rax], al
     69c: 12 00                        	adc	al, byte ptr [rax]
		...
     6ae: 00 00                        	add	byte ptr [rax], al
     6b0: c2 02 00                     	ret	2
     6b3: 00 12                        	add	byte ptr [rdx], dl
		...
     6c5: 00 00                        	add	byte ptr [rax], al
     6c7: 00 80 04 00 00 12            	add	byte ptr [rax + 301989892], al
		...
     6dd: 00 00                        	add	byte ptr [rax], al
     6df: 00 5f 05                     	add	byte ptr [rdi + 5], bl
     6e2: 00 00                        	add	byte ptr [rax], al
     6e4: 12 00                        	adc	al, byte ptr [rax]
		...
     6f6: 00 00                        	add	byte ptr [rax], al
     6f8: b3 01                        	mov	bl, 1
     6fa: 00 00                        	add	byte ptr [rax], al
     6fc: 12 00                        	adc	al, byte ptr [rax]
		...
     70e: 00 00                        	add	byte ptr [rax], al
     710: 0b 02                        	or	eax, dword ptr [rdx]
     712: 00 00                        	add	byte ptr [rax], al
     714: 12 00                        	adc	al, byte ptr [rax]
		...
     726: 00 00                        	add	byte ptr [rax], al
     728: 88 01                        	mov	byte ptr [rcx], al
     72a: 00 00                        	add	byte ptr [rax], al
     72c: 12 00                        	adc	al, byte ptr [rax]
		...
     73e: 00 00                        	add	byte ptr [rax], al
     740: bc 02 00 00 12               	mov	esp, 301989890
		...
     755: 00 00                        	add	byte ptr [rax], al
     757: 00 e3                        	add	bl, ah
     759: 05 00 00 12 00               	add	eax, 1179648
		...
     76e: 00 00                        	add	byte ptr [rax], al
     770: 4c 03 00                     	add	r8, qword ptr [rax]
     773: 00 12                        	add	byte ptr [rdx], dl
		...
     785: 00 00                        	add	byte ptr [rax], al
     787: 00 70 02                     	add	byte ptr [rax + 2], dh
     78a: 00 00                        	add	byte ptr [rax], al
     78c: 12 00                        	adc	al, byte ptr [rax]
		...
     79e: 00 00                        	add	byte ptr [rax], al
     7a0: 58                           	pop	rax
     7a1: 01 00                        	add	dword ptr [rax], eax
     7a3: 00 12                        	add	byte ptr [rdx], dl
		...
     7b5: 00 00                        	add	byte ptr [rax], al
     7b7: 00 f4                        	add	ah, dh
     7b9: 02 00                        	add	al, byte ptr [rax]
     7bb: 00 12                        	add	byte ptr [rdx], dl
		...
     7cd: 00 00                        	add	byte ptr [rax], al
     7cf: 00 cc                        	add	ah, cl
     7d1: 01 00                        	add	dword ptr [rax], eax
     7d3: 00 12                        	add	byte ptr [rdx], dl
		...
     7e5: 00 00                        	add	byte ptr [rax], al
     7e7: 00 22                        	add	byte ptr [rdx], ah
     7e9: 03 00                        	add	eax, dword ptr [rax]
     7eb: 00 12                        	add	byte ptr [rdx], dl
		...
     7fd: 00 00                        	add	byte ptr [rax], al
     7ff: 00 2c 00                     	add	byte ptr [rax + rax], ch
     802: 00 00                        	add	byte ptr [rax], al
     804: 20 00                        	and	byte ptr [rax], al
		...
     816: 00 00                        	add	byte ptr [rax], al
     818: 2e 01 00                     	add	dword ptr cs:[rax], eax
     81b: 00 12                        	add	byte ptr [rdx], dl
		...
     82d: 00 00                        	add	byte ptr [rax], al
     82f: 00 46 00                     	add	byte ptr [rsi], al
     832: 00 00                        	add	byte ptr [rax], al
     834: 22 00                        	and	al, byte ptr [rax]
		...
     846: 00 00                        	add	byte ptr [rax], al
     848: 6f                           	outsd	dx, dword ptr [rsi]
     849: 00 00                        	add	byte ptr [rax], al
     84b: 00 11                        	add	byte ptr [rcx], dl
		...
     85d: 00 00                        	add	byte ptr [rax], al
     85f: 00 a3 05 00 00 12            	add	byte ptr [rbx + 301989893], ah
     865: 00 0c 00                     	add	byte ptr [rax + rax], cl
     868: b0 4b                        	mov	al, 75
     86a: 00 00                        	add	byte ptr [rax], al
     86c: 00 00                        	add	byte ptr [rax], al
     86e: 00 00                        	add	byte ptr [rax], al
     870: 2c 03                        	sub	al, 3
     872: 00 00                        	add	byte ptr [rax], al
     874: 00 00                        	add	byte ptr [rax], al
     876: 00 00                        	add	byte ptr [rax], al
     878: 35 04 00 00 12               	xor	eax, 301989892
     87d: 00 0c 00                     	add	byte ptr [rax + rax], cl
     880: 00 45 00                     	add	byte ptr [rbp], al
     883: 00 00                        	add	byte ptr [rax], al
     885: 00 00                        	add	byte ptr [rax], al
     887: 00 3b                        	add	byte ptr [rbx], bh
     889: 00 00                        	add	byte ptr [rax], al
     88b: 00 00                        	add	byte ptr [rax], al
     88d: 00 00                        	add	byte ptr [rax], al
     88f: 00 dc                        	add	ah, bl
     891: 03 00                        	add	eax, dword ptr [rax]
     893: 00 12                        	add	byte ptr [rdx], dl
     895: 00 0c 00                     	add	byte ptr [rax + rax], cl
     898: d0 43 00                     	rol	byte ptr [rbx]
     89b: 00 00                        	add	byte ptr [rax], al
     89d: 00 00                        	add	byte ptr [rax], al
     89f: 00 96 00 00 00 00            	add	byte ptr [rsi], dl
     8a5: 00 00                        	add	byte ptr [rax], al
     8a7: 00 f3                        	add	bl, dh
     8a9: 03 00                        	add	eax, dword ptr [rax]
     8ab: 00 12                        	add	byte ptr [rdx], dl
     8ad: 00 0c 00                     	add	byte ptr [rax + rax], cl
     8b0: 70 44                        	jo	0x8f6 <.dynsym+0x5d6>
     8b2: 00 00                        	add	byte ptr [rax], al
     8b4: 00 00                        	add	byte ptr [rax], al
     8b6: 00 00                        	add	byte ptr [rax], al
     8b8: 89 00                        	mov	dword ptr [rax], eax
     8ba: 00 00                        	add	byte ptr [rax], al
     8bc: 00 00                        	add	byte ptr [rax], al
     8be: 00 00                        	add	byte ptr [rax], al
     8c0: 8b 00                        	mov	eax, dword ptr [rax]
     8c2: 00 00                        	add	byte ptr [rax], al
     8c4: 12 00                        	adc	al, byte ptr [rax]
     8c6: 0c 00                        	or	al, 0
     8c8: a0 47 00 00 00 00 00 00 23   	movabs	al, byte ptr [2522015791327477831]
     8d1: 00 00                        	add	byte ptr [rax], al
     8d3: 00 00                        	add	byte ptr [rax], al
     8d5: 00 00                        	add	byte ptr [rax], al
     8d7: 00 75 02                     	add	byte ptr [rbp + 2], dh
     8da: 00 00                        	add	byte ptr [rax], al
     8dc: 12 00                        	adc	al, byte ptr [rax]
     8de: 0c 00                        	or	al, 0
     8e0: d0 31                        	<unknown>
     8e2: 00 00                        	add	byte ptr [rax], al
     8e4: 00 00                        	add	byte ptr [rax], al
     8e6: 00 00                        	add	byte ptr [rax], al
     8e8: ad                           	lodsd	eax, dword ptr [rsi]
     8e9: 01 00                        	add	dword ptr [rax], eax
     8eb: 00 00                        	add	byte ptr [rax], al
     8ed: 00 00                        	add	byte ptr [rax], al
     8ef: 00 ab 02 00 00 12            	add	byte ptr [rbx + 301989890], ch
     8f5: 00 0c 00                     	add	byte ptr [rax + rax], cl
     8f8: 90                           	nop
     8f9: 3e 00 00                     	add	byte ptr ds:[rax], al
     8fc: 00 00                        	add	byte ptr [rax], al
     8fe: 00 00                        	add	byte ptr [rax], al
     900: a3 00 00 00 00 00 00 00 cd   	movabs	dword ptr [-3674937295934324736], eax
     909: 05 00 00 12 00               	add	eax, 1179648
     90e: 0c 00                        	or	al, 0
     910: e0 4e                        	loopne	0x960 <.dynsym+0x640>
     912: 00 00                        	add	byte ptr [rax], al
     914: 00 00                        	add	byte ptr [rax], al
     916: 00 00                        	add	byte ptr [rax], al
     918: ef                           	out	dx, eax
     919: 00 00                        	add	byte ptr [rax], al
     91b: 00 00                        	add	byte ptr [rax], al
     91d: 00 00                        	add	byte ptr [rax], al
     91f: 00 e7                        	add	bh, ah
     921: 04 00                        	add	al, 0
     923: 00 12                        	add	byte ptr [rdx], dl
     925: 00 0c 00                     	add	byte ptr [rax + rax], cl
     928: d0 46 00                     	rol	byte ptr [rsi]
     92b: 00 00                        	add	byte ptr [rax], al
     92d: 00 00                        	add	byte ptr [rax], al
     92f: 00 5f 00                     	add	byte ptr [rdi], bl
     932: 00 00                        	add	byte ptr [rax], al
     934: 00 00                        	add	byte ptr [rax], al
     936: 00 00                        	add	byte ptr [rax], al
     938: 90                           	nop
     939: 02 00                        	add	al, byte ptr [rax]
     93b: 00 12                        	add	byte ptr [rdx], dl
     93d: 00 0c 00                     	add	byte ptr [rax + rax], cl
     940: 80 33 00                     	xor	byte ptr [rbx], 0
     943: 00 00                        	add	byte ptr [rax], al
     945: 00 00                        	add	byte ptr [rax], al
     947: 00 02                        	add	byte ptr [rdx], al
     949: 0b 00                        	or	eax, dword ptr [rax]
     94b: 00 00                        	add	byte ptr [rax], al
     94d: 00 00                        	add	byte ptr [rax], al
     94f: 00 05 05 00 00 12            	add	byte ptr [rip + 301989893], al # 0x1200095a <completed.0+0x11ff974a>
     955: 00 0c 00                     	add	byte ptr [rax + rax], cl
     958: d0 47 00                     	rol	byte ptr [rdi]
     95b: 00 00                        	add	byte ptr [rax], al
     95d: 00 00                        	add	byte ptr [rax], al
     95f: 00 a2 00 00 00 00            	add	byte ptr [rdx], ah
     965: 00 00                        	add	byte ptr [rax], al
     967: 00 fb                        	add	bl, bh
     969: 02 00                        	add	al, byte ptr [rax]
     96b: 00 12                        	add	byte ptr [rdx], dl
     96d: 00 0c 00                     	add	byte ptr [rax + rax], cl
     970: b0 3f                        	mov	al, 63
     972: 00 00                        	add	byte ptr [rax], al
     974: 00 00                        	add	byte ptr [rax], al
     976: 00 00                        	add	byte ptr [rax], al
     978: 05 00 00 00 00               	add	eax, 0
     97d: 00 00                        	add	byte ptr [rax], al
     97f: 00 06                        	add	byte ptr [rsi], al
     981: 01 00                        	add	dword ptr [rax], eax
     983: 00 12                        	add	byte ptr [rdx], dl
     985: 00 0c 00                     	add	byte ptr [rax + rax], cl
     988: 40 45                        	<unknown>
     98a: 00 00                        	add	byte ptr [rax], al
     98c: 00 00                        	add	byte ptr [rax], al
     98e: 00 00                        	add	byte ptr [rax], al
     990: 41 00 00                     	add	byte ptr [r8], al
     993: 00 00                        	add	byte ptr [rax], al
     995: 00 00                        	add	byte ptr [rax], al
     997: 00 55 00                     	add	byte ptr [rbp], dl
     99a: 00 00                        	add	byte ptr [rax], al
     99c: 12 00                        	adc	al, byte ptr [rax]
     99e: 0c 00                        	or	al, 0
     9a0: 80 24 00 00                  	and	byte ptr [rax + rax], 0
     9a4: 00 00                        	add	byte ptr [rax], al
     9a6: 00 00                        	add	byte ptr [rax], al
     9a8: 4f 0d 00 00 00 00            	or	rax, 0
     9ae: 00 00                        	add	byte ptr [rax], al
     9b0: 6f                           	outsd	dx, dword ptr [rsi]
     9b1: 04 00                        	add	al, 0
     9b3: 00 12                        	add	byte ptr [rdx], dl
     9b5: 00 0c 00                     	add	byte ptr [rax + rax], cl
     9b8: 90                           	nop
     9b9: 45 00 00                     	add	byte ptr [r8], r8b
     9bc: 00 00                        	add	byte ptr [rax], al
     9be: 00 00                        	add	byte ptr [rax], al
     9c0: d7                           	xlatb
     9c1: 00 00                        	add	byte ptr [rax], al
     9c3: 00 00                        	add	byte ptr [rax], al
     9c5: 00 00                        	add	byte ptr [rax], al
     9c7: 00 33                        	add	byte ptr [rbx], dh
     9c9: 05 00 00 12 00               	add	eax, 1179648
     9ce: 0c 00                        	or	al, 0
     9d0: 80 48 00 00                  	or	byte ptr [rax], 0
     9d4: 00 00                        	add	byte ptr [rax], al
     9d6: 00 00                        	add	byte ptr [rax], al
     9d8: 26 03 00                     	add	eax, dword ptr es:[rax]
     9db: 00 00                        	add	byte ptr [rax], al
     9dd: 00 00                        	add	byte ptr [rax], al
     9df: 00 8f 04 00 00 12            	add	byte ptr [rdi + 301989892], cl
     9e5: 00 0c 00                     	add	byte ptr [rax + rax], cl
     9e8: 70 46                        	jo	0xa30 <.dynsym+0x710>
     9ea: 00 00                        	add	byte ptr [rax], al
     9ec: 00 00                        	add	byte ptr [rax], al
     9ee: 00 00                        	add	byte ptr [rax], al
     9f0: 11 00                        	adc	dword ptr [rax], eax
     9f2: 00 00                        	add	byte ptr [rax], al
     9f4: 00 00                        	add	byte ptr [rax], al
     9f6: 00 00                        	add	byte ptr [rax], al
     9f8: e2 02                        	loop	0x9fc <.dynsym+0x6dc>
     9fa: 00 00                        	add	byte ptr [rax], al
     9fc: 12 00                        	adc	al, byte ptr [rax]
     9fe: 0c 00                        	or	al, 0
     a00: 40 3f                        	<unknown>
     a02: 00 00                        	add	byte ptr [rax], al
     a04: 00 00                        	add	byte ptr [rax], al
     a06: 00 00                        	add	byte ptr [rax], al
     a08: 70 00                        	jo	0xa0a <.dynsym+0x6ea>
     a0a: 00 00                        	add	byte ptr [rax], al
     a0c: 00 00                        	add	byte ptr [rax], al
     a0e: 00 00                        	add	byte ptr [rax], al
     a10: 08 03                        	or	byte ptr [rbx], al
     a12: 00 00                        	add	byte ptr [rax], al
     a14: 12 00                        	adc	al, byte ptr [rax]
     a16: 0c 00                        	or	al, 0
     a18: c0 3f 00                     	sar	byte ptr [rdi], 0
     a1b: 00 00                        	add	byte ptr [rax], al
     a1d: 00 00                        	add	byte ptr [rax], al
     a1f: 00 f0                        	add	al, dh
     a21: 01 00                        	add	dword ptr [rax], eax
     a23: 00 00                        	add	byte ptr [rax], al
     a25: 00 00                        	add	byte ptr [rax], al
     a27: 00 5d 03                     	add	byte ptr [rbp + 3], bl
     a2a: 00 00                        	add	byte ptr [rax], al
     a2c: 12 00                        	adc	al, byte ptr [rax]
     a2e: 0c 00                        	or	al, 0
     a30: b0 41                        	mov	al, 65
     a32: 00 00                        	add	byte ptr [rax], al
     a34: 00 00                        	add	byte ptr [rax], al
     a36: 00 00                        	add	byte ptr [rax], al
     a38: 96                           	xchg	eax, esi
     a39: 00 00                        	add	byte ptr [rax], al
     a3b: 00 00                        	add	byte ptr [rax], al
     a3d: 00 00                        	add	byte ptr [rax], al
     a3f: 00 8d 03 00 00 12            	add	byte ptr [rbp + 301989891], cl
     a45: 00 0c 00                     	add	byte ptr [rax + rax], cl
     a48: 50                           	push	rax
     a49: 42 00 00                     	add	byte ptr [rax], al
     a4c: 00 00                        	add	byte ptr [rax], al
     a4e: 00 00                        	add	byte ptr [rax], al
     a50: 72 01                        	jb	0xa53 <.dynsym+0x733>
     a52: 00 00                        	add	byte ptr [rax], al
     a54: 00 00                        	add	byte ptr [rax], al
     a56: 00 00                        	add	byte ptr [rax], al
     a58: b3 04                        	mov	bl, 4
     a5a: 00 00                        	add	byte ptr [rax], al
     a5c: 12 00                        	adc	al, byte ptr [rax]
     a5e: 0c 00                        	or	al, 0
     a60: 90                           	nop
     a61: 46 00 00                     	add	byte ptr [rax], r8b
     a64: 00 00                        	add	byte ptr [rax], al
     a66: 00 00                        	add	byte ptr [rax], al
     a68: 35 00 00 00 00               	xor	eax, 0
     a6d: 00 00                        	add	byte ptr [rax], al
     a6f: 00                           	<unknown>

Disassembly of section .dynstr:

0000000000000a70 <.dynstr>:
     a70: 00 5f 5f                     	add	byte ptr [rdi + 95], bl
     a73: 67 6d                        	insd	dword ptr es:[edi], dx
     a75: 6f                           	outsd	dx, dword ptr [rsi]
     a76: 6e                           	outsb	dx, byte ptr [rsi]
     a77: 5f                           	pop	rdi
     a78: 73 74                        	jae	0xaee <.dynstr+0x7e>
     a7a: 61                           	<unknown>
     a7b: 72 74                        	jb	0xaf1 <.dynstr+0x81>
     a7d: 5f                           	pop	rdi
     a7e: 5f                           	pop	rdi
     a7f: 00 5f 49                     	add	byte ptr [rdi + 73], bl
     a82: 54                           	push	rsp
     a83: 4d 5f                        	pop	r15
     a85: 64 65 72 65                  	jb	0xaee <.dynstr+0x7e>
     a89: 67 69 73 74 65 72 54 4d      	imul	esi, dword ptr [ebx + 116], 1297379941
     a91: 43 6c                        	insb	byte ptr es:[rdi], dx
     a93: 6f                           	outsd	dx, dword ptr [rsi]
     a94: 6e                           	outsb	dx, byte ptr [rsi]
     a95: 65 54                        	push	rsp
     a97: 61                           	<unknown>
     a98: 62                           	<unknown>
     a99: 6c                           	insb	byte ptr es:[rdi], dx
     a9a: 65 00 5f 49                  	add	byte ptr gs:[rdi + 73], bl
     a9e: 54                           	push	rsp
     a9f: 4d 5f                        	pop	r15
     aa1: 72 65                        	jb	0xb08 <.dynstr+0x98>
     aa3: 67 69 73 74 65 72 54 4d      	imul	esi, dword ptr [ebx + 116], 1297379941
     aab: 43 6c                        	insb	byte ptr es:[rdi], dx
     aad: 6f                           	outsd	dx, dword ptr [rsi]
     aae: 6e                           	outsb	dx, byte ptr [rsi]
     aaf: 65 54                        	push	rsp
     ab1: 61                           	<unknown>
     ab2: 62                           	<unknown>
     ab3: 6c                           	insb	byte ptr es:[rdi], dx
     ab4: 65 00 5f 5f                  	add	byte ptr gs:[rdi + 95], bl
     ab8: 63 78 61                     	movsxd	edi, dword ptr [rax + 97]
     abb: 5f                           	pop	rdi
     abc: 66 69 6e 61 6c 69            	imul	bp, word ptr [rsi + 97], 26988
     ac2: 7a 65                        	jp	0xb29 <.dynstr+0xb9>
     ac4: 00 6e 6e                     	add	byte ptr [rsi + 110], ch
     ac7: 52                           	push	rdx
     ac8: 75 6e                        	jne	0xb38 <.dynstr+0xc8>
     aca: 54                           	push	rsp
     acb: 77 6f                        	ja	0xb3c <.dynstr+0xcc>
     acd: 4d 61                        	<unknown>
     acf: 74 72                        	je	0xb43 <.dynstr+0xd3>
     ad1: 69 63 65 73 41 6e 64         	imul	esp, dword ptr [rbx + 101], 1684947315
     ad8: 4f 75 74                     	jne	0xb4f <.dynstr+0xdf>
     adb: 70 75                        	jo	0xb52 <.dynstr+0xe2>
     add: 74 00                        	je	0xadf <.dynstr+0x6f>
     adf: 73 74                        	jae	0xb55 <.dynstr+0xe5>
     ae1: 64 65 72 72                  	jb	0xb57 <.dynstr+0xe7>
     ae5: 00 66 70                     	add	byte ptr [rsi + 112], ah
     ae8: 72 69                        	jb	0xb53 <.dynstr+0xe3>
     aea: 6e                           	outsb	dx, byte ptr [rsi]
     aeb: 74 66                        	je	0xb53 <.dynstr+0xe3>
     aed: 00 66 70                     	add	byte ptr [rsi + 112], ah
     af0: 75 74                        	jne	0xb66 <.dynstr+0xf6>
     af2: 63 00                        	movsxd	eax, dword ptr [rax]
     af4: 6d                           	insd	dword ptr es:[rdi], dx
     af5: 61                           	<unknown>
     af6: 6c                           	insb	byte ptr es:[rdi], dx
     af7: 6c                           	insb	byte ptr es:[rdi], dx
     af8: 6f                           	outsd	dx, dword ptr [rsi]
     af9: 63 00                        	movsxd	eax, dword ptr [rax]
     afb: 6e                           	outsb	dx, byte ptr [rsi]
     afc: 6e                           	outsb	dx, byte ptr [rsi]
     afd: 43 72 65                     	jb	0xb65 <.dynstr+0xf5>
     b00: 61                           	<unknown>
     b01: 74 65                        	je	0xb68 <.dynstr+0xf8>
     b03: 56                           	push	rsi
     b04: 6b 44 65 73 63               	imul	eax, dword ptr [rbp + 2*riz + 115], 99
     b09: 72 69                        	jb	0xb74 <.dynstr+0x104>
     b0b: 70 74                        	jo	0xb81 <.dynstr+0x111>
     b0d: 6f                           	outsd	dx, dword ptr [rsi]
     b0e: 72 53                        	jb	0xb63 <.dynstr+0xf3>
     b10: 65 74 4c                     	je	0xb5f <.dynstr+0xef>
     b13: 61                           	<unknown>
     b14: 79 6f                        	jns	0xb85 <.dynstr+0x115>
     b16: 75 74                        	jne	0xb8c <.dynstr+0x11c>
     b18: 42 69 6e 64 69 6e 67 53      	imul	ebp, dword ptr [rsi + 100], 1399287401
     b20: 74 6f                        	je	0xb91 <.dynstr+0x121>
     b22: 72 61                        	jb	0xb85 <.dynstr+0x115>
     b24: 67 65 42 75 66               	jne	0xb8f <.dynstr+0x11f>
     b29: 66 65 72 00                  	jb	0xb2d <.dynstr+0xbd>
     b2d: 76 6b                        	jbe	0xb9a <.dynstr+0x12a>
     b2f: 43 72 65                     	jb	0xb97 <.dynstr+0x127>
     b32: 61                           	<unknown>
     b33: 74 65                        	je	0xb9a <.dynstr+0x12a>
     b35: 44 65                        	gs
     b37: 73 63                        	jae	0xb9c <.dynstr+0x12c>
     b39: 72 69                        	jb	0xba4 <.dynstr+0x134>
     b3b: 70 74                        	jo	0xbb1 <.dynstr+0x141>
     b3d: 6f                           	outsd	dx, dword ptr [rsi]
     b3e: 72 53                        	jb	0xb93 <.dynstr+0x123>
     b40: 65 74 4c                     	je	0xb8f <.dynstr+0x11f>
     b43: 61                           	<unknown>
     b44: 79 6f                        	jns	0xbb5 <.dynstr+0x145>
     b46: 75 74                        	jne	0xbbc <.dynstr+0x14c>
     b48: 00 76 6b                     	add	byte ptr [rsi + 107], dh
     b4b: 43 72 65                     	jb	0xbb3 <.dynstr+0x143>
     b4e: 61                           	<unknown>
     b4f: 74 65                        	je	0xbb6 <.dynstr+0x146>
     b51: 42 75 66                     	jne	0xbba <.dynstr+0x14a>
     b54: 66 65 72 00                  	jb	0xb58 <.dynstr+0xe8>
     b58: 76 6b                        	jbe	0xbc5 <.dynstr+0x155>
     b5a: 47 65                        	gs
     b5c: 74 42                        	je	0xba0 <.dynstr+0x130>
     b5e: 75 66                        	jne	0xbc6 <.dynstr+0x156>
     b60: 66 65 72 4d                  	jb	0xbb1 <.dynstr+0x141>
     b64: 65 6d                        	insd	dword ptr es:[rdi], dx
     b66: 6f                           	outsd	dx, dword ptr [rsi]
     b67: 72 79                        	jb	0xbe2 <.dynstr+0x172>
     b69: 52                           	push	rdx
     b6a: 65 71 75                     	jno	0xbe2 <.dynstr+0x172>
     b6d: 69 72 65 6d 65 6e 74         	imul	esi, dword ptr [rdx + 101], 1953391981
     b74: 73 00                        	jae	0xb76 <.dynstr+0x106>
     b76: 6e                           	outsb	dx, byte ptr [rsi]
     b77: 6e                           	outsb	dx, byte ptr [rsi]
     b78: 46 69 6e 64 4d 65 6d 6f      	imul	r13d, dword ptr [rsi + 100], 1869440333
     b80: 72 79                        	jb	0xbfb <.dynstr+0x18b>
     b82: 50                           	push	rax
     b83: 72 6f                        	jb	0xbf4 <.dynstr+0x184>
     b85: 70 65                        	jo	0xbec <.dynstr+0x17c>
     b87: 72 74                        	jb	0xbfd <.dynstr+0x18d>
     b89: 69 65 73 00 76 6b 41         	imul	esp, dword ptr [rbp + 115], 1097561600
     b90: 6c                           	insb	byte ptr es:[rdi], dx
     b91: 6c                           	insb	byte ptr es:[rdi], dx
     b92: 6f                           	outsd	dx, dword ptr [rsi]
     b93: 63 61 74                     	movsxd	esp, dword ptr [rcx + 116]
     b96: 65 4d 65                     	gs
     b99: 6d                           	insd	dword ptr es:[rdi], dx
     b9a: 6f                           	outsd	dx, dword ptr [rsi]
     b9b: 72 79                        	jb	0xc16 <.dynstr+0x1a6>
     b9d: 00 76 6b                     	add	byte ptr [rsi + 107], dh
     ba0: 42 69 6e 64 42 75 66 66      	imul	ebp, dword ptr [rsi + 100], 1717990722
     ba8: 65 72 4d                     	jb	0xbf8 <.dynstr+0x188>
     bab: 65 6d                        	insd	dword ptr es:[rdi], dx
     bad: 6f                           	outsd	dx, dword ptr [rsi]
     bae: 72 79                        	jb	0xc29 <.dynstr+0x1b9>
     bb0: 00 76 6b                     	add	byte ptr [rsi + 107], dh
     bb3: 43 72 65                     	jb	0xc1b <.dynstr+0x1ab>
     bb6: 61                           	<unknown>
     bb7: 74 65                        	je	0xc1e <.dynstr+0x1ae>
     bb9: 50                           	push	rax
     bba: 69 70 65 6c 69 6e 65         	imul	esi, dword ptr [rax + 101], 1701734764
     bc1: 4c 61                        	<unknown>
     bc3: 79 6f                        	jns	0xc34 <.dynstr+0x1c4>
     bc5: 75 74                        	jne	0xc3b <.dynstr+0x1cb>
     bc7: 00 76 6b                     	add	byte ptr [rsi + 107], dh
     bca: 43 72 65                     	jb	0xc32 <.dynstr+0x1c2>
     bcd: 61                           	<unknown>
     bce: 74 65                        	je	0xc35 <.dynstr+0x1c5>
     bd0: 44 65                        	gs
     bd2: 73 63                        	jae	0xc37 <.dynstr+0x1c7>
     bd4: 72 69                        	jb	0xc3f <.dynstr+0x1cf>
     bd6: 70 74                        	jo	0xc4c <.dynstr+0x1dc>
     bd8: 6f                           	outsd	dx, dword ptr [rsi]
     bd9: 72 50                        	jb	0xc2b <.dynstr+0x1bb>
     bdb: 6f                           	outsd	dx, dword ptr [rsi]
     bdc: 6f                           	outsd	dx, dword ptr [rsi]
     bdd: 6c                           	insb	byte ptr es:[rdi], dx
     bde: 00 76 6b                     	add	byte ptr [rsi + 107], dh
     be1: 41 6c                        	insb	byte ptr es:[rdi], dx
     be3: 6c                           	insb	byte ptr es:[rdi], dx
     be4: 6f                           	outsd	dx, dword ptr [rsi]
     be5: 63 61 74                     	movsxd	esp, dword ptr [rcx + 116]
     be8: 65 44 65                     	gs
     beb: 73 63                        	jae	0xc50 <.dynstr+0x1e0>
     bed: 72 69                        	jb	0xc58 <.dynstr+0x1e8>
     bef: 70 74                        	jo	0xc65 <.dynstr+0x1f5>
     bf1: 6f                           	outsd	dx, dword ptr [rsi]
     bf2: 72 53                        	jb	0xc47 <.dynstr+0x1d7>
     bf4: 65 74 73                     	je	0xc6a <.dynstr+0x1fa>
     bf7: 00 76 6b                     	add	byte ptr [rsi + 107], dh
     bfa: 55                           	push	rbp
     bfb: 70 64                        	jo	0xc61 <.dynstr+0x1f1>
     bfd: 61                           	<unknown>
     bfe: 74 65                        	je	0xc65 <.dynstr+0x1f5>
     c00: 44 65                        	gs
     c02: 73 63                        	jae	0xc67 <.dynstr+0x1f7>
     c04: 72 69                        	jb	0xc6f <.dynstr+0x1ff>
     c06: 70 74                        	jo	0xc7c <.dynstr+0x20c>
     c08: 6f                           	outsd	dx, dword ptr [rsi]
     c09: 72 53                        	jb	0xc5e <.dynstr+0x1ee>
     c0b: 65 74 73                     	je	0xc81 <.dynstr+0x211>
     c0e: 00 76 6b                     	add	byte ptr [rsi + 107], dh
     c11: 43 72 65                     	jb	0xc79 <.dynstr+0x209>
     c14: 61                           	<unknown>
     c15: 74 65                        	je	0xc7c <.dynstr+0x20c>
     c17: 43 6f                        	outsd	dx, dword ptr [rsi]
     c19: 6d                           	insd	dword ptr es:[rdi], dx
     c1a: 6d                           	insd	dword ptr es:[rdi], dx
     c1b: 61                           	<unknown>
     c1c: 6e                           	outsb	dx, byte ptr [rsi]
     c1d: 64 50                        	push	rax
     c1f: 6f                           	outsd	dx, dword ptr [rsi]
     c20: 6f                           	outsd	dx, dword ptr [rsi]
     c21: 6c                           	insb	byte ptr es:[rdi], dx
     c22: 00 76 6b                     	add	byte ptr [rsi + 107], dh
     c25: 41 6c                        	insb	byte ptr es:[rdi], dx
     c27: 6c                           	insb	byte ptr es:[rdi], dx
     c28: 6f                           	outsd	dx, dword ptr [rsi]
     c29: 63 61 74                     	movsxd	esp, dword ptr [rcx + 116]
     c2c: 65 43 6f                     	outsd	dx, dword ptr gs:[rsi]
     c2f: 6d                           	insd	dword ptr es:[rdi], dx
     c30: 6d                           	insd	dword ptr es:[rdi], dx
     c31: 61                           	<unknown>
     c32: 6e                           	outsb	dx, byte ptr [rsi]
     c33: 64 42 75 66                  	jne	0xc9d <.dynstr+0x22d>
     c37: 66 65 72 73                  	jb	0xcae <.dynstr+0x23e>
     c3b: 00 76 6b                     	add	byte ptr [rsi + 107], dh
     c3e: 42 65                        	gs
     c40: 67 69 6e 43 6f 6d 6d 61      	imul	ebp, dword ptr [esi + 67], 1634561391
     c48: 6e                           	outsb	dx, byte ptr [rsi]
     c49: 64 42 75 66                  	jne	0xcb3 <.dynstr+0x243>
     c4d: 66 65 72 00                  	jb	0xc51 <.dynstr+0x1e1>
     c51: 76 6b                        	jbe	0xcbe <.dynstr+0x24e>
     c53: 43 6d                        	insd	dword ptr es:[rdi], dx
     c55: 64 42 69 6e 64 50 69 70 65   	imul	ebp, dword ptr fs:[rsi + 100], 1701865808
     c5e: 6c                           	insb	byte ptr es:[rdi], dx
     c5f: 69 6e 65 00 76 6b 43         	imul	ebp, dword ptr [rsi + 101], 1131116032
     c66: 6d                           	insd	dword ptr es:[rdi], dx
     c67: 64 42 69 6e 64 44 65 73 63   	imul	ebp, dword ptr fs:[rsi + 100], 1668506948
     c70: 72 69                        	jb	0xcdb <.dynstr+0x26b>
     c72: 70 74                        	jo	0xce8 <.dynstr+0x278>
     c74: 6f                           	outsd	dx, dword ptr [rsi]
     c75: 72 53                        	jb	0xcca <.dynstr+0x25a>
     c77: 65 74 73                     	je	0xced <.dynstr+0x27d>
     c7a: 00 76 6b                     	add	byte ptr [rsi + 107], dh
     c7d: 43 6d                        	insd	dword ptr es:[rdi], dx
     c7f: 64 44 69 73 70 61 74 63 68   	imul	r14d, dword ptr fs:[rbx + 112], 1751348321
     c88: 00 76 6b                     	add	byte ptr [rsi + 107], dh
     c8b: 45 6e                        	outsb	dx, byte ptr [rsi]
     c8d: 64 43 6f                     	outsd	dx, dword ptr fs:[rsi]
     c90: 6d                           	insd	dword ptr es:[rdi], dx
     c91: 6d                           	insd	dword ptr es:[rdi], dx
     c92: 61                           	<unknown>
     c93: 6e                           	outsb	dx, byte ptr [rsi]
     c94: 64 42 75 66                  	jne	0xcfe <.dynstr+0x28e>
     c98: 66 65 72 00                  	jb	0xc9c <.dynstr+0x22c>
     c9c: 76 6b                        	jbe	0xd09 <.dynstr+0x299>
     c9e: 4d 61                        	<unknown>
     ca0: 70 4d                        	jo	0xcef <.dynstr+0x27f>
     ca2: 65 6d                        	insd	dword ptr es:[rdi], dx
     ca4: 6f                           	outsd	dx, dword ptr [rsi]
     ca5: 72 79                        	jb	0xd20 <.dynstr+0x2b0>
     ca7: 00 6d 65                     	add	byte ptr [rbp + 101], ch
     caa: 6d                           	insd	dword ptr es:[rdi], dx
     cab: 63 70 79                     	movsxd	esi, dword ptr [rax + 121]
     cae: 00 76 6b                     	add	byte ptr [rsi + 107], dh
     cb1: 55                           	push	rbp
     cb2: 6e                           	outsb	dx, byte ptr [rsi]
     cb3: 6d                           	insd	dword ptr es:[rdi], dx
     cb4: 61                           	<unknown>
     cb5: 70 4d                        	jo	0xd04 <.dynstr+0x294>
     cb7: 65 6d                        	insd	dword ptr es:[rdi], dx
     cb9: 6f                           	outsd	dx, dword ptr [rsi]
     cba: 72 79                        	jb	0xd35 <.dynstr+0x2c5>
     cbc: 00 76 6b                     	add	byte ptr [rsi + 107], dh
     cbf: 51                           	push	rcx
     cc0: 75 65                        	jne	0xd27 <.dynstr+0x2b7>
     cc2: 75 65                        	jne	0xd29 <.dynstr+0x2b9>
     cc4: 53                           	push	rbx
     cc5: 75 62                        	jne	0xd29 <.dynstr+0x2b9>
     cc7: 6d                           	insd	dword ptr es:[rdi], dx
     cc8: 69 74 00 76 6b 51 75 65      	imul	esi, dword ptr [rax + rax + 118], 1702187371
     cd0: 75 65                        	jne	0xd37 <.dynstr+0x2c7>
     cd2: 57                           	push	rdi
     cd3: 61                           	<unknown>
     cd4: 69 74 49 64 6c 65 00 66      	imul	esi, dword ptr [rcx + 2*rcx + 100], 1711301996
     cdc: 72 65                        	jb	0xd43 <.dynstr+0x2d3>
     cde: 65 00 65 78                  	add	byte ptr gs:[rbp + 120], ah
     ce2: 69 74 00 6e 6e 56 61 6c      	imul	esi, dword ptr [rax + rax + 110], 1818318446
     cea: 69 64 43 72 6f 73 73 43      	imul	esp, dword ptr [rbx + 2*rax + 114], 1131639663
     cf2: 6f                           	outsd	dx, dword ptr [rsi]
     cf3: 72 72                        	jb	0xd67 <.dynstr+0x2f7>
     cf5: 65 6c                        	insb	byte ptr es:[rdi], dx
     cf7: 61                           	<unknown>
     cf8: 74 69                        	je	0xd63 <.dynstr+0x2f3>
     cfa: 6f                           	outsd	dx, dword ptr [rsi]
     cfb: 6e                           	outsb	dx, byte ptr [rsi]
     cfc: 43 70 75                     	jo	0xd74 <.dynstr+0x304>
     cff: 00 6e 6e                     	add	byte ptr [rsi + 110], ch
     d02: 56                           	push	rsi
     d03: 61                           	<unknown>
     d04: 6c                           	insb	byte ptr es:[rdi], dx
     d05: 69 64 43 72 6f 73 73 43      	imul	esp, dword ptr [rbx + 2*rax + 114], 1131639663
     d0d: 6f                           	outsd	dx, dword ptr [rsi]
     d0e: 72 72                        	jb	0xd82 <.dynstr+0x312>
     d10: 65 6c                        	insb	byte ptr es:[rdi], dx
     d12: 61                           	<unknown>
     d13: 74 69                        	je	0xd7e <.dynstr+0x30e>
     d15: 6f                           	outsd	dx, dword ptr [rsi]
     d16: 6e                           	outsb	dx, byte ptr [rsi]
     d17: 47 70 75                     	jo	0xd8f <.dynstr+0x31f>
     d1a: 00 6e 6e                     	add	byte ptr [rsi + 110], ch
     d1d: 52                           	push	rdx
     d1e: 65 61                        	<unknown>
     d20: 64 42 69 6e 61 72 79 46 69   	imul	ebp, dword ptr fs:[rsi + 97], 1766226290
     d29: 6c                           	insb	byte ptr es:[rdi], dx
     d2a: 65 00 66 6f                  	add	byte ptr gs:[rsi + 111], ah
     d2e: 70 65                        	jo	0xd95 <.dynstr+0x325>
     d30: 6e                           	outsb	dx, byte ptr [rsi]
     d31: 00 66 73                     	add	byte ptr [rsi + 115], ah
     d34: 65 65 6b 00 66               	imul	eax, dword ptr gs:[rax], 102
     d39: 74 65                        	je	0xda0 <.dynstr+0x330>
     d3b: 6c                           	insb	byte ptr es:[rdi], dx
     d3c: 6c                           	insb	byte ptr es:[rdi], dx
     d3d: 00 72 65                     	add	byte ptr [rdx + 101], dh
     d40: 77 69                        	ja	0xdab <.dynstr+0x33b>
     d42: 6e                           	outsb	dx, byte ptr [rsi]
     d43: 64 00 66 72                  	add	byte ptr fs:[rsi + 114], ah
     d47: 65 61                        	<unknown>
     d49: 64 00 66 63                  	add	byte ptr fs:[rsi + 99], ah
     d4d: 6c                           	insb	byte ptr es:[rdi], dx
     d4e: 6f                           	outsd	dx, dword ptr [rsi]
     d4f: 73 65                        	jae	0xdb6 <.dynstr+0x346>
     d51: 00 6e 6e                     	add	byte ptr [rsi + 110], ch
     d54: 57                           	push	rdi
     d55: 72 69                        	jb	0xdc0 <.dynstr+0x350>
     d57: 74 65                        	je	0xdbe <.dynstr+0x34e>
     d59: 42 69 6e 61 72 79 46 69      	imul	ebp, dword ptr [rsi + 97], 1766226290
     d61: 6c                           	insb	byte ptr es:[rdi], dx
     d62: 65 00 66 77                  	add	byte ptr gs:[rsi + 119], ah
     d66: 72 69                        	jb	0xdd1 <.dynstr+0x361>
     d68: 74 65                        	je	0xdcf <.dynstr+0x35f>
     d6a: 00 6e 6e                     	add	byte ptr [rsi + 110], ch
     d6d: 4d 65                        	gs
     d6f: 6d                           	insd	dword ptr es:[rdi], dx
     d70: 6f                           	outsd	dx, dword ptr [rsi]
     d71: 72 79                        	jb	0xdec <.dynstr+0x37c>
     d73: 43 6f                        	outsd	dx, dword ptr [rsi]
     d75: 70 79                        	jo	0xdf0 <.dynstr+0x380>
     d77: 00 6e 6e                     	add	byte ptr [rsi + 110], ch
     d7a: 43 72 65                     	jb	0xde2 <.dynstr+0x372>
     d7d: 61                           	<unknown>
     d7e: 74 65                        	je	0xde5 <.dynstr+0x375>
     d80: 44 65                        	gs
     d82: 66 61                        	<unknown>
     d84: 75 6c                        	jne	0xdf2 <.dynstr+0x382>
     d86: 74 56                        	je	0xdde <.dynstr+0x36e>
     d88: 6b 49 6e 73                  	imul	ecx, dword ptr [rcx + 110], 115
     d8c: 74 61                        	je	0xdef <.dynstr+0x37f>
     d8e: 6e                           	outsb	dx, byte ptr [rsi]
     d8f: 63 65 00                     	movsxd	esp, dword ptr [rbp]
     d92: 76 6b                        	jbe	0xdff <.dynstr+0x38f>
     d94: 45 6e                        	outsb	dx, byte ptr [rsi]
     d96: 75 6d                        	jne	0xe05 <.dynstr+0x395>
     d98: 65 72 61                     	jb	0xdfc <.dynstr+0x38c>
     d9b: 74 65                        	je	0xe02 <.dynstr+0x392>
     d9d: 49 6e                        	outsb	dx, byte ptr [rsi]
     d9f: 73 74                        	jae	0xe15 <.dynstr+0x3a5>
     da1: 61                           	<unknown>
     da2: 6e                           	outsb	dx, byte ptr [rsi]
     da3: 63 65 4c                     	movsxd	esp, dword ptr [rbp + 76]
     da6: 61                           	<unknown>
     da7: 79 65                        	jns	0xe0e <.dynstr+0x39e>
     da9: 72 50                        	jb	0xdfb <.dynstr+0x38b>
     dab: 72 6f                        	jb	0xe1c <.dynstr+0x3ac>
     dad: 70 65                        	jo	0xe14 <.dynstr+0x3a4>
     daf: 72 74                        	jb	0xe25 <.dynstr+0x3b5>
     db1: 69 65 73 00 73 74 72         	imul	esp, dword ptr [rbp + 115], 1920234240
     db8: 63 6d 70                     	movsxd	ebp, dword ptr [rbp + 112]
     dbb: 00 76 6b                     	add	byte ptr [rsi + 107], dh
     dbe: 43 72 65                     	jb	0xe26 <.dynstr+0x3b6>
     dc1: 61                           	<unknown>
     dc2: 74 65                        	je	0xe29 <.dynstr+0x3b9>
     dc4: 49 6e                        	outsb	dx, byte ptr [rsi]
     dc6: 73 74                        	jae	0xe3c <.dynstr+0x3cc>
     dc8: 61                           	<unknown>
     dc9: 6e                           	outsb	dx, byte ptr [rsi]
     dca: 63 65 00                     	movsxd	esp, dword ptr [rbp]
     dcd: 76 6b                        	jbe	0xe3a <.dynstr+0x3ca>
     dcf: 47 65                        	gs
     dd1: 74 50                        	je	0xe23 <.dynstr+0x3b3>
     dd3: 68 79 73 69 63               	push	1667855225
     dd8: 61                           	<unknown>
     dd9: 6c                           	insb	byte ptr es:[rdi], dx
     dda: 44 65                        	gs
     ddc: 76 69                        	jbe	0xe47 <.dynstr+0x3d7>
     dde: 63 65 73                     	movsxd	esp, dword ptr [rbp + 115]
     de1: 00 76 6b                     	add	byte ptr [rsi + 107], dh
     de4: 45 6e                        	outsb	dx, byte ptr [rsi]
     de6: 75 6d                        	jne	0xe55 <.dynstr+0x3e5>
     de8: 65 72 61                     	jb	0xe4c <.dynstr+0x3dc>
     deb: 74 65                        	je	0xe52 <.dynstr+0x3e2>
     ded: 50                           	push	rax
     dee: 68 79 73 69 63               	push	1667855225
     df3: 61                           	<unknown>
     df4: 6c                           	insb	byte ptr es:[rdi], dx
     df5: 44 65                        	gs
     df7: 76 69                        	jbe	0xe62 <.dynstr+0x3f2>
     df9: 63 65 73                     	movsxd	esp, dword ptr [rbp + 115]
     dfc: 00 6e 6e                     	add	byte ptr [rsi + 110], ch
     dff: 47 65                        	gs
     e01: 74 56                        	je	0xe59 <.dynstr+0x3e9>
     e03: 6b 50 68 79                  	imul	edx, dword ptr [rax + 104], 121
     e07: 73 69                        	jae	0xe72 <.dynstr+0x402>
     e09: 63 61 6c                     	movsxd	esp, dword ptr [rcx + 108]
     e0c: 44 65                        	gs
     e0e: 76 69                        	jbe	0xe79 <.dynstr+0x409>
     e10: 63 65 49                     	movsxd	esp, dword ptr [rbp + 73]
     e13: 6e                           	outsb	dx, byte ptr [rsi]
     e14: 64 65 78 42                  	js	0xe5a <.dynstr+0x3ea>
     e18: 79 45                        	jns	0xe5f <.dynstr+0x3ef>
     e1a: 78 74                        	js	0xe90 <.dynstr+0x420>
     e1c: 65 6e                        	outsb	dx, byte ptr gs:[rsi]
     e1e: 73 69                        	jae	0xe89 <.dynstr+0x419>
     e20: 6f                           	outsd	dx, dword ptr [rsi]
     e21: 6e                           	outsb	dx, byte ptr [rsi]
     e22: 4e 61                        	<unknown>
     e24: 6d                           	insd	dword ptr es:[rdi], dx
     e25: 65 00 76 6b                  	add	byte ptr gs:[rsi + 107], dh
     e29: 45 6e                        	outsb	dx, byte ptr [rsi]
     e2b: 75 6d                        	jne	0xe9a <.dynstr+0x42a>
     e2d: 65 72 61                     	jb	0xe91 <.dynstr+0x421>
     e30: 74 65                        	je	0xe97 <.dynstr+0x427>
     e32: 44 65                        	gs
     e34: 76 69                        	jbe	0xe9f <.dynstr+0x42f>
     e36: 63 65 45                     	movsxd	esp, dword ptr [rbp + 69]
     e39: 78 74                        	js	0xeaf <.dynstr+0x43f>
     e3b: 65 6e                        	outsb	dx, byte ptr gs:[rsi]
     e3d: 73 69                        	jae	0xea8 <.dynstr+0x438>
     e3f: 6f                           	outsd	dx, dword ptr [rsi]
     e40: 6e                           	outsb	dx, byte ptr [rsi]
     e41: 50                           	push	rax
     e42: 72 6f                        	jb	0xeb3 <.dynstr+0x443>
     e44: 70 65                        	jo	0xeab <.dynstr+0x43b>
     e46: 72 74                        	jb	0xebc <.dynstr+0x44c>
     e48: 69 65 73 00 6e 6e 47         	imul	esp, dword ptr [rbp + 115], 1198419456
     e4f: 65 74 56                     	je	0xea8 <.dynstr+0x438>
     e52: 6b 50 68 79                  	imul	edx, dword ptr [rax + 104], 121
     e56: 73 69                        	jae	0xec1 <.dynstr+0x451>
     e58: 63 61 6c                     	movsxd	esp, dword ptr [rcx + 108]
     e5b: 44 65                        	gs
     e5d: 76 69                        	jbe	0xec8 <.dynstr+0x458>
     e5f: 63 65 73                     	movsxd	esp, dword ptr [rbp + 115]
     e62: 00 6e 6e                     	add	byte ptr [rsi + 110], ch
     e65: 47 65                        	gs
     e67: 74 56                        	je	0xebf <.dynstr+0x44f>
     e69: 6b 51 75 65                  	imul	edx, dword ptr [rcx + 117], 101
     e6d: 75 65                        	jne	0xed4 <.dynstr+0x464>
     e6f: 43 6f                        	outsd	dx, dword ptr [rsi]
     e71: 6d                           	insd	dword ptr es:[rdi], dx
     e72: 70 75                        	jo	0xee9 <.dynstr+0x479>
     e74: 74 65                        	je	0xedb <.dynstr+0x46b>
     e76: 49 6e                        	outsb	dx, byte ptr [rsi]
     e78: 64 65 78 00                  	js	0xe7c <.dynstr+0x40c>
     e7c: 76 6b                        	jbe	0xee9 <.dynstr+0x479>
     e7e: 47 65                        	gs
     e80: 74 50                        	je	0xed2 <.dynstr+0x462>
     e82: 68 79 73 69 63               	push	1667855225
     e87: 61                           	<unknown>
     e88: 6c                           	insb	byte ptr es:[rdi], dx
     e89: 44 65                        	gs
     e8b: 76 69                        	jbe	0xef6 <.dynstr+0x486>
     e8d: 63 65 51                     	movsxd	esp, dword ptr [rbp + 81]
     e90: 75 65                        	jne	0xef7 <.dynstr+0x487>
     e92: 75 65                        	jne	0xef9 <.dynstr+0x489>
     e94: 46 61                        	<unknown>
     e96: 6d                           	insd	dword ptr es:[rdi], dx
     e97: 69 6c 79 50 72 6f 70 65      	imul	ebp, dword ptr [rcx + 2*rdi + 80], 1701867378
     e9f: 72 74                        	jb	0xf15 <.dynstr+0x4a5>
     ea1: 69 65 73 00 6e 6e 47         	imul	esp, dword ptr [rbp + 115], 1198419456
     ea8: 65 74 4d                     	je	0xef8 <.dynstr+0x488>
     eab: 65 6d                        	insd	dword ptr es:[rdi], dx
     ead: 6f                           	outsd	dx, dword ptr [rsi]
     eae: 72 79                        	jb	0xf29 <.dynstr+0x4b9>
     eb0: 50                           	push	rax
     eb1: 72 6f                        	jb	0xf22 <.dynstr+0x4b2>
     eb3: 70 65                        	jo	0xf1a <.dynstr+0x4aa>
     eb5: 72 74                        	jb	0xf2b <.dynstr+0x4bb>
     eb7: 69 65 73 00 76 6b 47         	imul	esp, dword ptr [rbp + 115], 1198224896
     ebe: 65 74 50                     	je	0xf11 <.dynstr+0x4a1>
     ec1: 68 79 73 69 63               	push	1667855225
     ec6: 61                           	<unknown>
     ec7: 6c                           	insb	byte ptr es:[rdi], dx
     ec8: 44 65                        	gs
     eca: 76 69                        	jbe	0xf35 <.dynstr+0x4c5>
     ecc: 63 65 4d                     	movsxd	esp, dword ptr [rbp + 77]
     ecf: 65 6d                        	insd	dword ptr es:[rdi], dx
     ed1: 6f                           	outsd	dx, dword ptr [rsi]
     ed2: 72 79                        	jb	0xf4d <.dynstr+0x4dd>
     ed4: 50                           	push	rax
     ed5: 72 6f                        	jb	0xf46 <.dynstr+0x4d6>
     ed7: 70 65                        	jo	0xf3e <.dynstr+0x4ce>
     ed9: 72 74                        	jb	0xf4f <.dynstr+0x4df>
     edb: 69 65 73 00 6e 6e 43         	imul	esp, dword ptr [rbp + 115], 1131310592
     ee2: 72 65                        	jb	0xf49 <.dynstr+0x4d9>
     ee4: 61                           	<unknown>
     ee5: 74 65                        	je	0xf4c <.dynstr+0x4dc>
     ee7: 56                           	push	rsi
     ee8: 6b 44 65 76 69               	imul	eax, dword ptr [rbp + 2*riz + 118], 105
     eed: 63 65 00                     	movsxd	esp, dword ptr [rbp]
     ef0: 76 6b                        	jbe	0xf5d <.dynstr+0x4ed>
     ef2: 43 72 65                     	jb	0xf5a <.dynstr+0x4ea>
     ef5: 61                           	<unknown>
     ef6: 74 65                        	je	0xf5d <.dynstr+0x4ed>
     ef8: 44 65                        	gs
     efa: 76 69                        	jbe	0xf65 <.dynstr+0x4f5>
     efc: 63 65 00                     	movsxd	esp, dword ptr [rbp]
     eff: 6e                           	outsb	dx, byte ptr [rsi]
     f00: 6e                           	outsb	dx, byte ptr [rsi]
     f01: 47 65                        	gs
     f03: 74 56                        	je	0xf5b <.dynstr+0x4eb>
     f05: 6b 44 65 76 69               	imul	eax, dword ptr [rbp + 2*riz + 118], 105
     f0a: 63 65 51                     	movsxd	esp, dword ptr [rbp + 81]
     f0d: 75 65                        	jne	0xf74 <.dynstr+0x504>
     f0f: 75 65                        	jne	0xf76 <.dynstr+0x506>
     f11: 00 76 6b                     	add	byte ptr [rsi + 107], dh
     f14: 47 65                        	gs
     f16: 74 44                        	je	0xf5c <.dynstr+0x4ec>
     f18: 65 76 69                     	jbe	0xf84 <.dynstr+0x514>
     f1b: 63 65 51                     	movsxd	esp, dword ptr [rbp + 81]
     f1e: 75 65                        	jne	0xf85 <.dynstr+0x515>
     f20: 75 65                        	jne	0xf87 <.dynstr+0x517>
     f22: 00 44 65 73                  	add	byte ptr [rbp + 2*riz + 115], al
     f26: 74 72                        	je	0xf9a <.dynstr+0x52a>
     f28: 6f                           	outsd	dx, dword ptr [rsi]
     f29: 79 44                        	jns	0xf6f <.dynstr+0x4ff>
     f2b: 65 62 75 67 55 74            	<unknown>
     f31: 69 6c 73 4d 65 73 73 65      	imul	ebp, dword ptr [rbx + 2*rsi + 77], 1702064997
     f39: 6e                           	outsb	dx, byte ptr [rsi]
     f3a: 67 65 72 45                  	jb	0xf83 <.dynstr+0x513>
     f3e: 58                           	pop	rax
     f3f: 54                           	push	rsp
     f40: 00 76 6b                     	add	byte ptr [rsi + 107], dh
     f43: 47 65                        	gs
     f45: 74 49                        	je	0xf90 <.dynstr+0x520>
     f47: 6e                           	outsb	dx, byte ptr [rsi]
     f48: 73 74                        	jae	0xfbe <.dynstr+0x54e>
     f4a: 61                           	<unknown>
     f4b: 6e                           	outsb	dx, byte ptr [rsi]
     f4c: 63 65 50                     	movsxd	esp, dword ptr [rbp + 80]
     f4f: 72 6f                        	jb	0xfc0 <.dynstr+0x550>
     f51: 63 41 64                     	movsxd	eax, dword ptr [rcx + 100]
     f54: 64 72 00                     	jb	0xf57 <.dynstr+0x4e7>
     f57: 6e                           	outsb	dx, byte ptr [rsi]
     f58: 6e                           	outsb	dx, byte ptr [rsi]
     f59: 43 72 65                     	jb	0xfc1 <.dynstr+0x551>
     f5c: 61                           	<unknown>
     f5d: 74 65                        	je	0xfc4 <.dynstr+0x554>
     f5f: 56                           	push	rsi
     f60: 6b 44 65 62 75               	imul	eax, dword ptr [rbp + 2*riz + 98], 117
     f65: 67 55                        	push	rbp
     f67: 74 69                        	je	0xfd2 <.dynstr+0x562>
     f69: 6c                           	insb	byte ptr es:[rdi], dx
     f6a: 73 4d                        	jae	0xfb9 <.dynstr+0x549>
     f6c: 65 73 73                     	jae	0xfe2 <.dynstr+0x572>
     f6f: 65 6e                        	outsb	dx, byte ptr gs:[rsi]
     f71: 67 65 72 00                  	jb	0xf75 <.dynstr+0x505>
     f75: 6e                           	outsb	dx, byte ptr [rsi]
     f76: 6e                           	outsb	dx, byte ptr [rsi]
     f77: 43 72 65                     	jb	0xfdf <.dynstr+0x56f>
     f7a: 61                           	<unknown>
     f7b: 74 65                        	je	0xfe2 <.dynstr+0x572>
     f7d: 56                           	push	rsi
     f7e: 6b 50 69 70                  	imul	edx, dword ptr [rax + 105], 112
     f82: 65 6c                        	insb	byte ptr es:[rdi], dx
     f84: 69 6e 65 43 61 63 68         	imul	ebp, dword ptr [rsi + 101], 1751343427
     f8b: 65 00 76 6b                  	add	byte ptr gs:[rsi + 107], dh
     f8f: 43 72 65                     	jb	0xff7 <.dynstr+0x587>
     f92: 61                           	<unknown>
     f93: 74 65                        	je	0xffa <.dynstr+0x58a>
     f95: 50                           	push	rax
     f96: 69 70 65 6c 69 6e 65         	imul	esi, dword ptr [rax + 101], 1701734764
     f9d: 43 61                        	<unknown>
     f9f: 63 68 65                     	movsxd	ebp, dword ptr [rax + 101]
     fa2: 00 6e 6e                     	add	byte ptr [rsi + 110], ch
     fa5: 43 72 65                     	jb	0x100d <.dynstr+0x59d>
     fa8: 61                           	<unknown>
     fa9: 74 65                        	je	0x1010 <.dynstr+0x5a0>
     fab: 56                           	push	rsi
     fac: 6b 43 6f 6d                  	imul	eax, dword ptr [rbx + 111], 109
     fb0: 70 75                        	jo	0x1027 <.dynstr+0x5b7>
     fb2: 74 65                        	je	0x1019 <.dynstr+0x5a9>
     fb4: 50                           	push	rax
     fb5: 69 70 65 6c 69 6e 65         	imul	esi, dword ptr [rax + 101], 1701734764
     fbc: 32 4d 61                     	xor	cl, byte ptr [rbp + 97]
     fbf: 74 72                        	je	0x1033 <.dynstr+0x5c3>
     fc1: 69 63 65 73 41 6e 64         	imul	esp, dword ptr [rbx + 101], 1684947315
     fc8: 4f 75 74                     	jne	0x103f <.dynstr+0x5cf>
     fcb: 70 75                        	jo	0x1042 <.dynstr+0x5d2>
     fcd: 74 00                        	je	0xfcf <.dynstr+0x55f>
     fcf: 76 6b                        	jbe	0x103c <.dynstr+0x5cc>
     fd1: 43 72 65                     	jb	0x1039 <.dynstr+0x5c9>
     fd4: 61                           	<unknown>
     fd5: 74 65                        	je	0x103c <.dynstr+0x5cc>
     fd7: 53                           	push	rbx
     fd8: 68 61 64 65 72               	push	1919247457
     fdd: 4d 6f                        	outsd	dx, dword ptr [rsi]
     fdf: 64 75 6c                     	jne	0x104e <.dynstr+0x5de>
     fe2: 65 00 76 6b                  	add	byte ptr gs:[rsi + 107], dh
     fe6: 43 72 65                     	jb	0x104e <.dynstr+0x5de>
     fe9: 61                           	<unknown>
     fea: 74 65                        	je	0x1051 <.dynstr+0x5e1>
     fec: 43 6f                        	outsd	dx, dword ptr [rsi]
     fee: 6d                           	insd	dword ptr es:[rdi], dx
     fef: 70 75                        	jo	0x1066 <.dynstr+0x5f6>
     ff1: 74 65                        	je	0x1058 <.dynstr+0x5e8>
     ff3: 50                           	push	rax
     ff4: 69 70 65 6c 69 6e 65         	imul	esi, dword ptr [rax + 101], 1701734764
     ffb: 73 00                        	jae	0xffd <.dynstr+0x58d>
     ffd: 76 6b                        	jbe	0x106a <.dynstr+0x5fa>
     fff: 44 65                        	gs
    1001: 73 74                        	jae	0x1077 <.dynstr+0x607>
    1003: 72 6f                        	jb	0x1074 <.dynstr+0x604>
    1005: 79 53                        	jns	0x105a <.dynstr+0x5ea>
    1007: 68 61 64 65 72               	push	1919247457
    100c: 4d 6f                        	outsd	dx, dword ptr [rsi]
    100e: 64 75 6c                     	jne	0x107d <.dynstr+0x60d>
    1011: 65 00 6e 6e                  	add	byte ptr gs:[rsi + 110], ch
    1015: 43 72 65                     	jb	0x107d <.dynstr+0x60d>
    1018: 61                           	<unknown>
    1019: 74 65                        	je	0x1080 <.dynstr+0x610>
    101b: 56                           	push	rsi
    101c: 6b 43 6f 6d                  	imul	eax, dword ptr [rbx + 111], 109
    1020: 70 75                        	jo	0x1097 <.dynstr+0x627>
    1022: 74 65                        	je	0x1089 <.dynstr+0x619>
    1024: 50                           	push	rax
    1025: 69 70 65 6c 69 6e 65         	imul	esi, dword ptr [rax + 101], 1701734764
    102c: 43 6f                        	outsd	dx, dword ptr [rsi]
    102e: 72 72                        	jb	0x10a2 <.dynstr+0x632>
    1030: 65 6c                        	insb	byte ptr es:[rdi], dx
    1032: 61                           	<unknown>
    1033: 74 65                        	je	0x109a <.dynstr+0x62a>
    1035: 32 64 56 61                  	xor	ah, byte ptr [rsi + 2*rdx + 97]
    1039: 6c                           	insb	byte ptr es:[rdi], dx
    103a: 69 64 00 6e 6e 53 61 76      	imul	esp, dword ptr [rax + rax + 110], 1986089838
    1042: 65 56                        	push	rsi
    1044: 6b 50 69 70                  	imul	edx, dword ptr [rax + 105], 112
    1048: 65 6c                        	insb	byte ptr es:[rdi], dx
    104a: 69 6e 65 43 61 63 68         	imul	ebp, dword ptr [rsi + 101], 1751343427
    1051: 65 00 76 6b                  	add	byte ptr gs:[rsi + 107], dh
    1055: 47 65                        	gs
    1057: 74 50                        	je	0x10a9 <.dynstr+0x639>
    1059: 69 70 65 6c 69 6e 65         	imul	esi, dword ptr [rax + 101], 1701734764
    1060: 43 61                        	<unknown>
    1062: 63 68 65                     	movsxd	ebp, dword ptr [rax + 101]
    1065: 44 61                        	<unknown>
    1067: 74 61                        	je	0x10ca <.dynstr+0x65a>
    1069: 00 76 6b                     	add	byte ptr [rsi + 107], dh
    106c: 44 65                        	gs
    106e: 73 74                        	jae	0x10e4 <vkUpdateDescriptorSets+0x10e4>
    1070: 72 6f                        	jb	0x10e1 <vkUpdateDescriptorSets+0x10e1>
    1072: 79 50                        	jns	0x10c4 <.dynstr+0x654>
    1074: 69 70 65 6c 69 6e 65         	imul	esi, dword ptr [rax + 101], 1701734764
    107b: 43 61                        	<unknown>
    107d: 63 68 65                     	movsxd	ebp, dword ptr [rax + 101]
    1080: 00 6c 69 62                  	add	byte ptr [rcx + 2*rbp + 98], ch
    1084: 67 6c                        	insb	byte ptr es:[edi], dx
    1086: 66 77 2e                     	ja	0x10b7 <.dynstr+0x647>
    1089: 73 6f                        	jae	0x10fa <vkUpdateDescriptorSets+0x10fa>
    108b: 2e 33 00                     	xor	eax, dword ptr cs:[rax]
    108e: 6c                           	insb	byte ptr es:[rdi], dx
    108f: 69 62 76 75 6c 6b 61         	imul	esp, dword ptr [rdx + 118], 1634430069
    1096: 6e                           	outsb	dx, byte ptr [rsi]
    1097: 2e 73 6f                     	jae	0x1109 <vkUpdateDescriptorSets+0x1109>
    109a: 2e 31 00                     	xor	dword ptr cs:[rax], eax
    109d: 6c                           	insb	byte ptr es:[rdi], dx
    109e: 69 62 63 2e 73 6f 2e         	imul	esp, dword ptr [rdx + 99], 779055918
    10a5: 36 00 6c 69 62               	add	byte ptr ss:[rcx + 2*rbp + 98], ch
    10aa: 6e                           	outsb	dx, byte ptr [rsi]
    10ab: 6e                           	outsb	dx, byte ptr [rsi]
    10ac: 5f                           	pop	rdi
    10ad: 62                           	<unknown>
    10ae: 61                           	<unknown>
    10af: 63 6b 65                     	movsxd	ebp, dword ptr [rbx + 101]
    10b2: 6e                           	outsb	dx, byte ptr [rsi]
    10b3: 64 2e 73 6f                  	jae	0x1126 <vkUpdateDescriptorSets+0x1126>
    10b7: 00 47 4c                     	add	byte ptr [rdi + 76], al
    10ba: 49 42                        	<unknown>
    10bc: 43 5f                        	pop	r15
    10be: 32 2e                        	xor	ch, byte ptr [rsi]
    10c0: 31 34 00                     	xor	dword ptr [rax + rax], esi
    10c3: 47 4c                        	<unknown>
    10c5: 49 42                        	<unknown>
    10c7: 43 5f                        	pop	r15
    10c9: 32 2e                        	xor	ch, byte ptr [rsi]
    10cb: 32 2e                        	xor	ch, byte ptr [rsi]
    10cd: 35                           	<unknown>
    10ce: 00                           	<unknown>

Disassembly of section .gnu.version:

00000000000010d0 <.gnu.version>:
    10d0: 00 00                        	add	byte ptr [rax], al
    10d2: 01 00                        	add	dword ptr [rax], eax
    10d4: 01 00                        	add	dword ptr [rax], eax
    10d6: 02 00                        	add	al, byte ptr [rax]
    10d8: 01 00                        	add	dword ptr [rax], eax
    10da: 01 00                        	add	dword ptr [rax], eax
    10dc: 01 00                        	add	dword ptr [rax], eax
    10de: 02 00                        	add	al, byte ptr [rax]
    10e0: 01 00                        	add	dword ptr [rax], eax
    10e2: 01 00                        	add	dword ptr [rax], eax
    10e4: 01 00                        	add	dword ptr [rax], eax
    10e6: 02 00                        	add	al, byte ptr [rax]
    10e8: 01 00                        	add	dword ptr [rax], eax
    10ea: 01 00                        	add	dword ptr [rax], eax
    10ec: 02 00                        	add	al, byte ptr [rax]
    10ee: 02 00                        	add	al, byte ptr [rax]
    10f0: 01 00                        	add	dword ptr [rax], eax
    10f2: 01 00                        	add	dword ptr [rax], eax
    10f4: 01 00                        	add	dword ptr [rax], eax
    10f6: 01 00                        	add	dword ptr [rax], eax
    10f8: 01 00                        	add	dword ptr [rax], eax
    10fa: 01 00                        	add	dword ptr [rax], eax
    10fc: 01 00                        	add	dword ptr [rax], eax
    10fe: 02 00                        	add	al, byte ptr [rax]
    1100: 02 00                        	add	al, byte ptr [rax]
    1102: 01 00                        	add	dword ptr [rax], eax
    1104: 02 00                        	add	al, byte ptr [rax]
    1106: 02 00                        	add	al, byte ptr [rax]
    1108: 01 00                        	add	dword ptr [rax], eax
    110a: 01 00                        	add	dword ptr [rax], eax
    110c: 03 00                        	add	eax, dword ptr [rax]
    110e: 01 00                        	add	dword ptr [rax], eax
    1110: 01 00                        	add	dword ptr [rax], eax
    1112: 02 00                        	add	al, byte ptr [rax]
    1114: 01 00                        	add	dword ptr [rax], eax
    1116: 01 00                        	add	dword ptr [rax], eax
    1118: 01 00                        	add	dword ptr [rax], eax
    111a: 01 00                        	add	dword ptr [rax], eax
    111c: 02 00                        	add	al, byte ptr [rax]
    111e: 01 00                        	add	dword ptr [rax], eax
    1120: 01 00                        	add	dword ptr [rax], eax
    1122: 01 00                        	add	dword ptr [rax], eax
    1124: 01 00                        	add	dword ptr [rax], eax
    1126: 01 00                        	add	dword ptr [rax], eax
    1128: 02 00                        	add	al, byte ptr [rax]
    112a: 01 00                        	add	dword ptr [rax], eax
    112c: 01 00                        	add	dword ptr [rax], eax
    112e: 02 00                        	add	al, byte ptr [rax]
    1130: 01 00                        	add	dword ptr [rax], eax
    1132: 02 00                        	add	al, byte ptr [rax]
    1134: 01 00                        	add	dword ptr [rax], eax
    1136: 01 00                        	add	dword ptr [rax], eax
    1138: 01 00                        	add	dword ptr [rax], eax
    113a: 01 00                        	add	dword ptr [rax], eax
    113c: 02 00                        	add	al, byte ptr [rax]
    113e: 02 00                        	add	al, byte ptr [rax]
    1140: 01 00                        	add	dword ptr [rax], eax
    1142: 01 00                        	add	dword ptr [rax], eax
    1144: 01 00                        	add	dword ptr [rax], eax
    1146: 01 00                        	add	dword ptr [rax], eax
    1148: 01 00                        	add	dword ptr [rax], eax
    114a: 01 00                        	add	dword ptr [rax], eax
    114c: 01 00                        	add	dword ptr [rax], eax
    114e: 01 00                        	add	dword ptr [rax], eax
    1150: 01 00                        	add	dword ptr [rax], eax
    1152: 01 00                        	add	dword ptr [rax], eax
    1154: 01 00                        	add	dword ptr [rax], eax
    1156: 01 00                        	add	dword ptr [rax], eax
    1158: 01 00                        	add	dword ptr [rax], eax
    115a: 01 00                        	add	dword ptr [rax], eax
    115c: 01 00                        	add	dword ptr [rax], eax
    115e: 01 00                        	add	dword ptr [rax], eax
    1160: 01 00                        	add	dword ptr [rax], eax
    1162: 01 00                        	add	dword ptr [rax], eax
    1164: 01 00                        	add	dword ptr [rax], eax
    1166: 01 00                        	add	dword ptr [rax], eax
    1168: 01 00                        	add	dword ptr [rax], eax
    116a: 01 00                        	add	dword ptr [rax], eax

Disassembly of section .gnu.version_r:

0000000000001170 <.gnu.version_r>:
    1170: 01 00                        	add	dword ptr [rax], eax
    1172: 02 00                        	add	al, byte ptr [rax]
    1174: 2d 06 00 00 10               	sub	eax, 268435462
    1179: 00 00                        	add	byte ptr [rax], al
    117b: 00 00                        	add	byte ptr [rax], al
    117d: 00 00                        	add	byte ptr [rax], al
    117f: 00 94 91 96 06 00 00         	add	byte ptr [rcx + 4*rdx + 1686], dl
    1186: 03 00                        	add	eax, dword ptr [rax]
    1188: 48 06                        	<unknown>
    118a: 00 00                        	add	byte ptr [rax], al
    118c: 10 00                        	adc	byte ptr [rax], al
    118e: 00 00                        	add	byte ptr [rax], al
    1190: 75 1a                        	jne	0x11ac <vkUpdateDescriptorSets+0x11ac>
    1192: 69 09 00 00 02 00            	imul	ecx, dword ptr [rcx], 131072
    1198: 53                           	push	rbx
    1199: 06                           	<unknown>
    119a: 00 00                        	add	byte ptr [rax], al
    119c: 00 00                        	add	byte ptr [rax], al
    119e: 00 00                        	add	byte ptr [rax], al

Disassembly of section .rela.dyn:

00000000000011a0 <.rela.dyn>:
    11a0: a0 6d 00 00 00 00 00 00 08   	movabs	al, byte ptr [576460752303423597]
    11a9: 00 00                        	add	byte ptr [rax], al
    11ab: 00 00                        	add	byte ptr [rax], al
    11ad: 00 00                        	add	byte ptr [rax], al
    11af: 00 70 24                     	add	byte ptr [rax + 36], dh
    11b2: 00 00                        	add	byte ptr [rax], al
    11b4: 00 00                        	add	byte ptr [rax], al
    11b6: 00 00                        	add	byte ptr [rax], al
    11b8: a8 6d                        	test	al, 109
    11ba: 00 00                        	add	byte ptr [rax], al
    11bc: 00 00                        	add	byte ptr [rax], al
    11be: 00 00                        	add	byte ptr [rax], al
    11c0: 08 00                        	or	byte ptr [rax], al
    11c2: 00 00                        	add	byte ptr [rax], al
    11c4: 00 00                        	add	byte ptr [rax], al
    11c6: 00 00                        	add	byte ptr [rax], al
    11c8: a0 23 00 00 00 00 00 00 b0   	movabs	al, byte ptr [-5764607523034234845]
    11d1: 6d                           	insd	dword ptr es:[rdi], dx
    11d2: 00 00                        	add	byte ptr [rax], al
    11d4: 00 00                        	add	byte ptr [rax], al
    11d6: 00 00                        	add	byte ptr [rax], al
    11d8: 08 00                        	or	byte ptr [rax], al
    11da: 00 00                        	add	byte ptr [rax], al
    11dc: 00 00                        	add	byte ptr [rax], al
    11de: 00 00                        	add	byte ptr [rax], al
    11e0: 30 24 00                     	xor	byte ptr [rax + rax], ah
    11e3: 00 00                        	add	byte ptr [rax], al
    11e5: 00 00                        	add	byte ptr [rax], al
    11e7: 00 d8                        	add	al, bl
    11e9: 6d                           	insd	dword ptr es:[rdi], dx
    11ea: 00 00                        	add	byte ptr [rax], al
    11ec: 00 00                        	add	byte ptr [rax], al
    11ee: 00 00                        	add	byte ptr [rax], al
    11f0: 08 00                        	or	byte ptr [rax], al
    11f2: 00 00                        	add	byte ptr [rax], al
    11f4: 00 00                        	add	byte ptr [rax], al
    11f6: 00 00                        	add	byte ptr [rax], al
    11f8: 30 47 00                     	xor	byte ptr [rdi], al
    11fb: 00 00                        	add	byte ptr [rax], al
    11fd: 00 00                        	add	byte ptr [rax], al
    11ff: 00 d0                        	add	al, dl
    1201: 71 00                        	jno	0x1203 <.rela.dyn+0x63>
    1203: 00 00                        	add	byte ptr [rax], al
    1205: 00 00                        	add	byte ptr [rax], al
    1207: 00 08                        	add	byte ptr [rax], cl
    1209: 00 00                        	add	byte ptr [rax], al
    120b: 00 00                        	add	byte ptr [rax], al
    120d: 00 00                        	add	byte ptr [rax], al
    120f: 00 d0                        	add	al, dl
    1211: 71 00                        	jno	0x1213 <.rela.dyn+0x73>
    1213: 00 00                        	add	byte ptr [rax], al
    1215: 00 00                        	add	byte ptr [rax], al
    1217: 00 e0                        	add	al, ah
    1219: 71 00                        	jno	0x121b <.rela.dyn+0x7b>
    121b: 00 00                        	add	byte ptr [rax], al
    121d: 00 00                        	add	byte ptr [rax], al
    121f: 00 08                        	add	byte ptr [rax], cl
    1221: 00 00                        	add	byte ptr [rax], al
    1223: 00 00                        	add	byte ptr [rax], al
    1225: 00 00                        	add	byte ptr [rax], al
    1227: 00 1b                        	add	byte ptr [rbx], bl
    1229: 51                           	push	rcx
    122a: 00 00                        	add	byte ptr [rax], al
    122c: 00 00                        	add	byte ptr [rax], al
    122e: 00 00                        	add	byte ptr [rax], al
    1230: f0                           	lock
    1231: 71 00                        	jno	0x1233 <.rela.dyn+0x93>
    1233: 00 00                        	add	byte ptr [rax], al
    1235: 00 00                        	add	byte ptr [rax], al
    1237: 00 08                        	add	byte ptr [rax], cl
    1239: 00 00                        	add	byte ptr [rax], al
    123b: 00 00                        	add	byte ptr [rax], al
    123d: 00 00                        	add	byte ptr [rax], al
    123f: 00 37                        	add	byte ptr [rdi], dh
    1241: 51                           	push	rcx
    1242: 00 00                        	add	byte ptr [rax], al
    1244: 00 00                        	add	byte ptr [rax], al
    1246: 00 00                        	add	byte ptr [rax], al
    1248: f8                           	clc
    1249: 71 00                        	jno	0x124b <.rela.dyn+0xab>
    124b: 00 00                        	add	byte ptr [rax], al
    124d: 00 00                        	add	byte ptr [rax], al
    124f: 00 08                        	add	byte ptr [rax], cl
    1251: 00 00                        	add	byte ptr [rax], al
    1253: 00 00                        	add	byte ptr [rax], al
    1255: 00 00                        	add	byte ptr [rax], al
    1257: 00 5e 51                     	add	byte ptr [rsi + 81], bl
    125a: 00 00                        	add	byte ptr [rax], al
    125c: 00 00                        	add	byte ptr [rax], al
    125e: 00 00                        	add	byte ptr [rax], al
    1260: 00 72 00                     	add	byte ptr [rdx], dh
    1263: 00 00                        	add	byte ptr [rax], al
    1265: 00 00                        	add	byte ptr [rax], al
    1267: 00 08                        	add	byte ptr [rax], cl
    1269: 00 00                        	add	byte ptr [rax], al
    126b: 00 00                        	add	byte ptr [rax], al
    126d: 00 00                        	add	byte ptr [rax], al
    126f: 00 71 51                     	add	byte ptr [rcx + 81], dh
    1272: 00 00                        	add	byte ptr [rax], al
    1274: 00 00                        	add	byte ptr [rax], al
    1276: 00 00                        	add	byte ptr [rax], al
    1278: 08 72 00                     	or	byte ptr [rdx], dh
    127b: 00 00                        	add	byte ptr [rax], al
    127d: 00 00                        	add	byte ptr [rax], al
    127f: 00 08                        	add	byte ptr [rax], cl
    1281: 00 00                        	add	byte ptr [rax], al
    1283: 00 00                        	add	byte ptr [rax], al
    1285: 00 00                        	add	byte ptr [rax], al
    1287: 00 91 51 00 00 00            	add	byte ptr [rcx + 81], dl
    128d: 00 00                        	add	byte ptr [rax], al
    128f: 00 d8                        	add	al, bl
    1291: 6f                           	outsd	dx, dword ptr [rsi]
    1292: 00 00                        	add	byte ptr [rax], al
    1294: 00 00                        	add	byte ptr [rax], al
    1296: 00 00                        	add	byte ptr [rax], al
    1298: 06                           	<unknown>
    1299: 00 00                        	add	byte ptr [rax], al
    129b: 00 06                        	add	byte ptr [rsi], al
		...
    12a5: 00 00                        	add	byte ptr [rax], al
    12a7: 00 e0                        	add	al, ah
    12a9: 6f                           	outsd	dx, dword ptr [rsi]
    12aa: 00 00                        	add	byte ptr [rax], al
    12ac: 00 00                        	add	byte ptr [rax], al
    12ae: 00 00                        	add	byte ptr [rax], al
    12b0: 06                           	<unknown>
    12b1: 00 00                        	add	byte ptr [rax], al
    12b3: 00 1d 00 00 00 00            	add	byte ptr [rip], bl      # 0x12b9 <.rela.dyn+0x119>
    12b9: 00 00                        	add	byte ptr [rax], al
    12bb: 00 00                        	add	byte ptr [rax], al
    12bd: 00 00                        	add	byte ptr [rax], al
    12bf: 00 e8                        	add	al, ch
    12c1: 6f                           	outsd	dx, dword ptr [rsi]
    12c2: 00 00                        	add	byte ptr [rax], al
    12c4: 00 00                        	add	byte ptr [rax], al
    12c6: 00 00                        	add	byte ptr [rax], al
    12c8: 06                           	<unknown>
    12c9: 00 00                        	add	byte ptr [rax], al
    12cb: 00 34 00                     	add	byte ptr [rax + rax], dh
		...
    12d6: 00 00                        	add	byte ptr [rax], al
    12d8: f0                           	lock
    12d9: 6f                           	outsd	dx, dword ptr [rsi]
    12da: 00 00                        	add	byte ptr [rax], al
    12dc: 00 00                        	add	byte ptr [rax], al
    12de: 00 00                        	add	byte ptr [rax], al
    12e0: 06                           	<unknown>
    12e1: 00 00                        	add	byte ptr [rax], al
    12e3: 00 36                        	add	byte ptr [rsi], dh
		...
    12ed: 00 00                        	add	byte ptr [rax], al
    12ef: 00 f8                        	add	al, bh
    12f1: 6f                           	outsd	dx, dword ptr [rsi]
    12f2: 00 00                        	add	byte ptr [rax], al
    12f4: 00 00                        	add	byte ptr [rax], al
    12f6: 00 00                        	add	byte ptr [rax], al
    12f8: 06                           	<unknown>
    12f9: 00 00                        	add	byte ptr [rax], al
    12fb: 00 37                        	add	byte ptr [rdi], dh
		...
    1305: 00 00                        	add	byte ptr [rax], al
    1307: 00                           	<unknown>

Disassembly of section .rela.plt:

0000000000001308 <.rela.plt>:
    1308: 18 70 00                     	sbb	byte ptr [rax], dh
    130b: 00 00                        	add	byte ptr [rax], al
    130d: 00 00                        	add	byte ptr [rax], al
    130f: 00 07                        	add	byte ptr [rdi], al
    1311: 00 00                        	add	byte ptr [rax], al
    1313: 00 01                        	add	byte ptr [rcx], al
		...
    131d: 00 00                        	add	byte ptr [rax], al
    131f: 00 20                        	add	byte ptr [rax], ah
    1321: 70 00                        	jo	0x1323 <.rela.plt+0x1b>
    1323: 00 00                        	add	byte ptr [rax], al
    1325: 00 00                        	add	byte ptr [rax], al
    1327: 00 07                        	add	byte ptr [rdi], al
    1329: 00 00                        	add	byte ptr [rax], al
    132b: 00 02                        	add	byte ptr [rdx], al
		...
    1335: 00 00                        	add	byte ptr [rax], al
    1337: 00 28                        	add	byte ptr [rax], ch
    1339: 70 00                        	jo	0x133b <.rela.plt+0x33>
    133b: 00 00                        	add	byte ptr [rax], al
    133d: 00 00                        	add	byte ptr [rax], al
    133f: 00 07                        	add	byte ptr [rdi], al
    1341: 00 00                        	add	byte ptr [rax], al
    1343: 00 03                        	add	byte ptr [rbx], al
		...
    134d: 00 00                        	add	byte ptr [rax], al
    134f: 00 30                        	add	byte ptr [rax], dh
    1351: 70 00                        	jo	0x1353 <.rela.plt+0x4b>
    1353: 00 00                        	add	byte ptr [rax], al
    1355: 00 00                        	add	byte ptr [rax], al
    1357: 00 07                        	add	byte ptr [rdi], al
    1359: 00 00                        	add	byte ptr [rax], al
    135b: 00 04 00                     	add	byte ptr [rax + rax], al
		...
    1366: 00 00                        	add	byte ptr [rax], al
    1368: 38 70 00                     	cmp	byte ptr [rax], dh
    136b: 00 00                        	add	byte ptr [rax], al
    136d: 00 00                        	add	byte ptr [rax], al
    136f: 00 07                        	add	byte ptr [rdi], al
    1371: 00 00                        	add	byte ptr [rax], al
    1373: 00 05 00 00 00 00            	add	byte ptr [rip], al      # 0x1379 <.rela.plt+0x71>
    1379: 00 00                        	add	byte ptr [rax], al
    137b: 00 00                        	add	byte ptr [rax], al
    137d: 00 00                        	add	byte ptr [rax], al
    137f: 00 40 70                     	add	byte ptr [rax + 112], al
    1382: 00 00                        	add	byte ptr [rax], al
    1384: 00 00                        	add	byte ptr [rax], al
    1386: 00 00                        	add	byte ptr [rax], al
    1388: 07                           	<unknown>
    1389: 00 00                        	add	byte ptr [rax], al
    138b: 00 44 00 00                  	add	byte ptr [rax + rax], al
		...
    1397: 00 48 70                     	add	byte ptr [rax + 112], cl
    139a: 00 00                        	add	byte ptr [rax], al
    139c: 00 00                        	add	byte ptr [rax], al
    139e: 00 00                        	add	byte ptr [rax], al
    13a0: 07                           	<unknown>
    13a1: 00 00                        	add	byte ptr [rax], al
    13a3: 00 07                        	add	byte ptr [rdi], al
		...
    13ad: 00 00                        	add	byte ptr [rax], al
    13af: 00 50 70                     	add	byte ptr [rax + 112], dl
    13b2: 00 00                        	add	byte ptr [rax], al
    13b4: 00 00                        	add	byte ptr [rax], al
    13b6: 00 00                        	add	byte ptr [rax], al
    13b8: 07                           	<unknown>
    13b9: 00 00                        	add	byte ptr [rax], al
    13bb: 00 08                        	add	byte ptr [rax], cl
		...
    13c5: 00 00                        	add	byte ptr [rax], al
    13c7: 00 58 70                     	add	byte ptr [rax + 112], bl
    13ca: 00 00                        	add	byte ptr [rax], al
    13cc: 00 00                        	add	byte ptr [rax], al
    13ce: 00 00                        	add	byte ptr [rax], al
    13d0: 07                           	<unknown>
    13d1: 00 00                        	add	byte ptr [rax], al
    13d3: 00 09                        	add	byte ptr [rcx], cl
		...
    13dd: 00 00                        	add	byte ptr [rax], al
    13df: 00 60 70                     	add	byte ptr [rax + 112], ah
    13e2: 00 00                        	add	byte ptr [rax], al
    13e4: 00 00                        	add	byte ptr [rax], al
    13e6: 00 00                        	add	byte ptr [rax], al
    13e8: 07                           	<unknown>
    13e9: 00 00                        	add	byte ptr [rax], al
    13eb: 00 0a                        	add	byte ptr [rdx], cl
		...
    13f5: 00 00                        	add	byte ptr [rax], al
    13f7: 00 68 70                     	add	byte ptr [rax + 112], ch
    13fa: 00 00                        	add	byte ptr [rax], al
    13fc: 00 00                        	add	byte ptr [rax], al
    13fe: 00 00                        	add	byte ptr [rax], al
    1400: 07                           	<unknown>
    1401: 00 00                        	add	byte ptr [rax], al
    1403: 00 0b                        	add	byte ptr [rbx], cl
		...
    140d: 00 00                        	add	byte ptr [rax], al
    140f: 00 70 70                     	add	byte ptr [rax + 112], dh
    1412: 00 00                        	add	byte ptr [rax], al
    1414: 00 00                        	add	byte ptr [rax], al
    1416: 00 00                        	add	byte ptr [rax], al
    1418: 07                           	<unknown>
    1419: 00 00                        	add	byte ptr [rax], al
    141b: 00 0c 00                     	add	byte ptr [rax + rax], cl
		...
    1426: 00 00                        	add	byte ptr [rax], al
    1428: 78 70                        	js	0x149a <.rela.plt+0x192>
    142a: 00 00                        	add	byte ptr [rax], al
    142c: 00 00                        	add	byte ptr [rax], al
    142e: 00 00                        	add	byte ptr [rax], al
    1430: 07                           	<unknown>
    1431: 00 00                        	add	byte ptr [rax], al
    1433: 00 0d 00 00 00 00            	add	byte ptr [rip], cl      # 0x1439 <.rela.plt+0x131>
    1439: 00 00                        	add	byte ptr [rax], al
    143b: 00 00                        	add	byte ptr [rax], al
    143d: 00 00                        	add	byte ptr [rax], al
    143f: 00 80 70 00 00 00            	add	byte ptr [rax + 112], al
    1445: 00 00                        	add	byte ptr [rax], al
    1447: 00 07                        	add	byte ptr [rdi], al
    1449: 00 00                        	add	byte ptr [rax], al
    144b: 00 0e                        	add	byte ptr [rsi], cl
		...
    1455: 00 00                        	add	byte ptr [rax], al
    1457: 00 88 70 00 00 00            	add	byte ptr [rax + 112], cl
    145d: 00 00                        	add	byte ptr [rax], al
    145f: 00 07                        	add	byte ptr [rdi], al
    1461: 00 00                        	add	byte ptr [rax], al
    1463: 00 0f                        	add	byte ptr [rdi], cl
		...
    146d: 00 00                        	add	byte ptr [rax], al
    146f: 00 90 70 00 00 00            	add	byte ptr [rax + 112], dl
    1475: 00 00                        	add	byte ptr [rax], al
    1477: 00 07                        	add	byte ptr [rdi], al
    1479: 00 00                        	add	byte ptr [rax], al
    147b: 00 10                        	add	byte ptr [rax], dl
		...
    1485: 00 00                        	add	byte ptr [rax], al
    1487: 00 98 70 00 00 00            	add	byte ptr [rax + 112], bl
    148d: 00 00                        	add	byte ptr [rax], al
    148f: 00 07                        	add	byte ptr [rdi], al
    1491: 00 00                        	add	byte ptr [rax], al
    1493: 00 11                        	add	byte ptr [rcx], dl
		...
    149d: 00 00                        	add	byte ptr [rax], al
    149f: 00 a0 70 00 00 00            	add	byte ptr [rax + 112], ah
    14a5: 00 00                        	add	byte ptr [rax], al
    14a7: 00 07                        	add	byte ptr [rdi], al
    14a9: 00 00                        	add	byte ptr [rax], al
    14ab: 00 12                        	add	byte ptr [rdx], dl
		...
    14b5: 00 00                        	add	byte ptr [rax], al
    14b7: 00 a8 70 00 00 00            	add	byte ptr [rax + 112], ch
    14bd: 00 00                        	add	byte ptr [rax], al
    14bf: 00 07                        	add	byte ptr [rdi], al
    14c1: 00 00                        	add	byte ptr [rax], al
    14c3: 00 3c 00                     	add	byte ptr [rax + rax], bh
		...
    14ce: 00 00                        	add	byte ptr [rax], al
    14d0: b0 70                        	mov	al, 112
    14d2: 00 00                        	add	byte ptr [rax], al
    14d4: 00 00                        	add	byte ptr [rax], al
    14d6: 00 00                        	add	byte ptr [rax], al
    14d8: 07                           	<unknown>
    14d9: 00 00                        	add	byte ptr [rax], al
    14db: 00 13                        	add	byte ptr [rbx], dl
		...
    14e5: 00 00                        	add	byte ptr [rax], al
    14e7: 00 b8 70 00 00 00            	add	byte ptr [rax + 112], bh
    14ed: 00 00                        	add	byte ptr [rax], al
    14ef: 00 07                        	add	byte ptr [rdi], al
    14f1: 00 00                        	add	byte ptr [rax], al
    14f3: 00 14 00                     	add	byte ptr [rax + rax], dl
		...
    14fe: 00 00                        	add	byte ptr [rax], al
    1500: c0 70 00                     	<unknown>
    1503: 00 00                        	add	byte ptr [rax], al
    1505: 00 00                        	add	byte ptr [rax], al
    1507: 00 07                        	add	byte ptr [rdi], al
    1509: 00 00                        	add	byte ptr [rax], al
    150b: 00 15 00 00 00 00            	add	byte ptr [rip], dl      # 0x1511 <.rela.plt+0x209>
    1511: 00 00                        	add	byte ptr [rax], al
    1513: 00 00                        	add	byte ptr [rax], al
    1515: 00 00                        	add	byte ptr [rax], al
    1517: 00 c8                        	add	al, cl
    1519: 70 00                        	jo	0x151b <.rela.plt+0x213>
    151b: 00 00                        	add	byte ptr [rax], al
    151d: 00 00                        	add	byte ptr [rax], al
    151f: 00 07                        	add	byte ptr [rdi], al
    1521: 00 00                        	add	byte ptr [rax], al
    1523: 00 16                        	add	byte ptr [rsi], dl
		...
    152d: 00 00                        	add	byte ptr [rax], al
    152f: 00 d0                        	add	al, dl
    1531: 70 00                        	jo	0x1533 <.rela.plt+0x22b>
    1533: 00 00                        	add	byte ptr [rax], al
    1535: 00 00                        	add	byte ptr [rax], al
    1537: 00 07                        	add	byte ptr [rdi], al
    1539: 00 00                        	add	byte ptr [rax], al
    153b: 00 17                        	add	byte ptr [rdi], dl
		...
    1545: 00 00                        	add	byte ptr [rax], al
    1547: 00 d8                        	add	al, bl
    1549: 70 00                        	jo	0x154b <.rela.plt+0x243>
    154b: 00 00                        	add	byte ptr [rax], al
    154d: 00 00                        	add	byte ptr [rax], al
    154f: 00 07                        	add	byte ptr [rdi], al
    1551: 00 00                        	add	byte ptr [rax], al
    1553: 00 3e                        	add	byte ptr [rsi], bh
		...
    155d: 00 00                        	add	byte ptr [rax], al
    155f: 00 e0                        	add	al, ah
    1561: 70 00                        	jo	0x1563 <.rela.plt+0x25b>
    1563: 00 00                        	add	byte ptr [rax], al
    1565: 00 00                        	add	byte ptr [rax], al
    1567: 00 07                        	add	byte ptr [rdi], al
    1569: 00 00                        	add	byte ptr [rax], al
    156b: 00 18                        	add	byte ptr [rax], bl
		...
    1575: 00 00                        	add	byte ptr [rax], al
    1577: 00 e8                        	add	al, ch
    1579: 70 00                        	jo	0x157b <.rela.plt+0x273>
    157b: 00 00                        	add	byte ptr [rax], al
    157d: 00 00                        	add	byte ptr [rax], al
    157f: 00 07                        	add	byte ptr [rdi], al
    1581: 00 00                        	add	byte ptr [rax], al
    1583: 00 19                        	add	byte ptr [rcx], bl
		...
    158d: 00 00                        	add	byte ptr [rax], al
    158f: 00 f0                        	add	al, dh
    1591: 70 00                        	jo	0x1593 <.rela.plt+0x28b>
    1593: 00 00                        	add	byte ptr [rax], al
    1595: 00 00                        	add	byte ptr [rax], al
    1597: 00 07                        	add	byte ptr [rdi], al
    1599: 00 00                        	add	byte ptr [rax], al
    159b: 00 1a                        	add	byte ptr [rdx], bl
		...
    15a5: 00 00                        	add	byte ptr [rax], al
    15a7: 00 f8                        	add	al, bh
    15a9: 70 00                        	jo	0x15ab <.rela.plt+0x2a3>
    15ab: 00 00                        	add	byte ptr [rax], al
    15ad: 00 00                        	add	byte ptr [rax], al
    15af: 00 07                        	add	byte ptr [rdi], al
    15b1: 00 00                        	add	byte ptr [rax], al
    15b3: 00 1b                        	add	byte ptr [rbx], bl
		...
    15c1: 71 00                        	jno	0x15c3 <.rela.plt+0x2bb>
    15c3: 00 00                        	add	byte ptr [rax], al
    15c5: 00 00                        	add	byte ptr [rax], al
    15c7: 00 07                        	add	byte ptr [rdi], al
    15c9: 00 00                        	add	byte ptr [rax], al
    15cb: 00 1c 00                     	add	byte ptr [rax + rax], bl
		...
    15d6: 00 00                        	add	byte ptr [rax], al
    15d8: 08 71 00                     	or	byte ptr [rcx], dh
    15db: 00 00                        	add	byte ptr [rax], al
    15dd: 00 00                        	add	byte ptr [rax], al
    15df: 00 07                        	add	byte ptr [rdi], al
    15e1: 00 00                        	add	byte ptr [rax], al
    15e3: 00 1e                        	add	byte ptr [rsi], bl
		...
    15ed: 00 00                        	add	byte ptr [rax], al
    15ef: 00 10                        	add	byte ptr [rax], dl
    15f1: 71 00                        	jno	0x15f3 <.rela.plt+0x2eb>
    15f3: 00 00                        	add	byte ptr [rax], al
    15f5: 00 00                        	add	byte ptr [rax], al
    15f7: 00 07                        	add	byte ptr [rdi], al
    15f9: 00 00                        	add	byte ptr [rax], al
    15fb: 00 1f                        	add	byte ptr [rdi], bl
		...
    1605: 00 00                        	add	byte ptr [rax], al
    1607: 00 18                        	add	byte ptr [rax], bl
    1609: 71 00                        	jno	0x160b <.rela.plt+0x303>
    160b: 00 00                        	add	byte ptr [rax], al
    160d: 00 00                        	add	byte ptr [rax], al
    160f: 00 07                        	add	byte ptr [rdi], al
    1611: 00 00                        	add	byte ptr [rax], al
    1613: 00 20                        	add	byte ptr [rax], ah
		...
    161d: 00 00                        	add	byte ptr [rax], al
    161f: 00 20                        	add	byte ptr [rax], ah
    1621: 71 00                        	jno	0x1623 <.rela.plt+0x31b>
    1623: 00 00                        	add	byte ptr [rax], al
    1625: 00 00                        	add	byte ptr [rax], al
    1627: 00 07                        	add	byte ptr [rdi], al
    1629: 00 00                        	add	byte ptr [rax], al
    162b: 00 21                        	add	byte ptr [rcx], ah
		...
    1635: 00 00                        	add	byte ptr [rax], al
    1637: 00 28                        	add	byte ptr [rax], ch
    1639: 71 00                        	jno	0x163b <.rela.plt+0x333>
    163b: 00 00                        	add	byte ptr [rax], al
    163d: 00 00                        	add	byte ptr [rax], al
    163f: 00 07                        	add	byte ptr [rdi], al
    1641: 00 00                        	add	byte ptr [rax], al
    1643: 00 22                        	add	byte ptr [rdx], ah
		...
    164d: 00 00                        	add	byte ptr [rax], al
    164f: 00 30                        	add	byte ptr [rax], dh
    1651: 71 00                        	jno	0x1653 <.rela.plt+0x34b>
    1653: 00 00                        	add	byte ptr [rax], al
    1655: 00 00                        	add	byte ptr [rax], al
    1657: 00 07                        	add	byte ptr [rdi], al
    1659: 00 00                        	add	byte ptr [rax], al
    165b: 00 23                        	add	byte ptr [rbx], ah
		...
    1665: 00 00                        	add	byte ptr [rax], al
    1667: 00 38                        	add	byte ptr [rax], bh
    1669: 71 00                        	jno	0x166b <.rela.plt+0x363>
    166b: 00 00                        	add	byte ptr [rax], al
    166d: 00 00                        	add	byte ptr [rax], al
    166f: 00 07                        	add	byte ptr [rdi], al
    1671: 00 00                        	add	byte ptr [rax], al
    1673: 00 24 00                     	add	byte ptr [rax + rax], ah
		...
    167e: 00 00                        	add	byte ptr [rax], al
    1680: 40 71 00                     	jno	0x1683 <.rela.plt+0x37b>
    1683: 00 00                        	add	byte ptr [rax], al
    1685: 00 00                        	add	byte ptr [rax], al
    1687: 00 07                        	add	byte ptr [rdi], al
    1689: 00 00                        	add	byte ptr [rax], al
    168b: 00 25 00 00 00 00            	add	byte ptr [rip], ah      # 0x1691 <.rela.plt+0x389>
    1691: 00 00                        	add	byte ptr [rax], al
    1693: 00 00                        	add	byte ptr [rax], al
    1695: 00 00                        	add	byte ptr [rax], al
    1697: 00 48 71                     	add	byte ptr [rax + 113], cl
    169a: 00 00                        	add	byte ptr [rax], al
    169c: 00 00                        	add	byte ptr [rax], al
    169e: 00 00                        	add	byte ptr [rax], al
    16a0: 07                           	<unknown>
    16a1: 00 00                        	add	byte ptr [rax], al
    16a3: 00 26                        	add	byte ptr [rsi], ah
		...
    16ad: 00 00                        	add	byte ptr [rax], al
    16af: 00 50 71                     	add	byte ptr [rax + 113], dl
    16b2: 00 00                        	add	byte ptr [rax], al
    16b4: 00 00                        	add	byte ptr [rax], al
    16b6: 00 00                        	add	byte ptr [rax], al
    16b8: 07                           	<unknown>
    16b9: 00 00                        	add	byte ptr [rax], al
    16bb: 00 27                        	add	byte ptr [rdi], ah
		...
    16c5: 00 00                        	add	byte ptr [rax], al
    16c7: 00 58 71                     	add	byte ptr [rax + 113], bl
    16ca: 00 00                        	add	byte ptr [rax], al
    16cc: 00 00                        	add	byte ptr [rax], al
    16ce: 00 00                        	add	byte ptr [rax], al
    16d0: 07                           	<unknown>
    16d1: 00 00                        	add	byte ptr [rax], al
    16d3: 00 28                        	add	byte ptr [rax], ch
		...
    16dd: 00 00                        	add	byte ptr [rax], al
    16df: 00 60 71                     	add	byte ptr [rax + 113], ah
    16e2: 00 00                        	add	byte ptr [rax], al
    16e4: 00 00                        	add	byte ptr [rax], al
    16e6: 00 00                        	add	byte ptr [rax], al
    16e8: 07                           	<unknown>
    16e9: 00 00                        	add	byte ptr [rax], al
    16eb: 00 29                        	add	byte ptr [rcx], ch
		...
    16f5: 00 00                        	add	byte ptr [rax], al
    16f7: 00 68 71                     	add	byte ptr [rax + 113], ch
    16fa: 00 00                        	add	byte ptr [rax], al
    16fc: 00 00                        	add	byte ptr [rax], al
    16fe: 00 00                        	add	byte ptr [rax], al
    1700: 07                           	<unknown>
    1701: 00 00                        	add	byte ptr [rax], al
    1703: 00 2a                        	add	byte ptr [rdx], ch
		...
    170d: 00 00                        	add	byte ptr [rax], al
    170f: 00 70 71                     	add	byte ptr [rax + 113], dh
    1712: 00 00                        	add	byte ptr [rax], al
    1714: 00 00                        	add	byte ptr [rax], al
    1716: 00 00                        	add	byte ptr [rax], al
    1718: 07                           	<unknown>
    1719: 00 00                        	add	byte ptr [rax], al
    171b: 00 2b                        	add	byte ptr [rbx], ch
		...
    1725: 00 00                        	add	byte ptr [rax], al
    1727: 00 78 71                     	add	byte ptr [rax + 113], bh
    172a: 00 00                        	add	byte ptr [rax], al
    172c: 00 00                        	add	byte ptr [rax], al
    172e: 00 00                        	add	byte ptr [rax], al
    1730: 07                           	<unknown>
    1731: 00 00                        	add	byte ptr [rax], al
    1733: 00 2c 00                     	add	byte ptr [rax + rax], ch
		...
    173e: 00 00                        	add	byte ptr [rax], al
    1740: 80 71 00 00                  	xor	byte ptr [rcx], 0
    1744: 00 00                        	add	byte ptr [rax], al
    1746: 00 00                        	add	byte ptr [rax], al
    1748: 07                           	<unknown>
    1749: 00 00                        	add	byte ptr [rax], al
    174b: 00 2d 00 00 00 00            	add	byte ptr [rip], ch      # 0x1751 <.rela.plt+0x449>
    1751: 00 00                        	add	byte ptr [rax], al
    1753: 00 00                        	add	byte ptr [rax], al
    1755: 00 00                        	add	byte ptr [rax], al
    1757: 00 88 71 00 00 00            	add	byte ptr [rax + 113], cl
    175d: 00 00                        	add	byte ptr [rax], al
    175f: 00 07                        	add	byte ptr [rdi], al
    1761: 00 00                        	add	byte ptr [rax], al
    1763: 00 49 00                     	add	byte ptr [rcx], cl
		...
    176e: 00 00                        	add	byte ptr [rax], al
    1770: 90                           	nop
    1771: 71 00                        	jno	0x1773 <.rela.plt+0x46b>
    1773: 00 00                        	add	byte ptr [rax], al
    1775: 00 00                        	add	byte ptr [rax], al
    1777: 00 07                        	add	byte ptr [rdi], al
    1779: 00 00                        	add	byte ptr [rax], al
    177b: 00 2e                        	add	byte ptr [rsi], ch
		...
    1785: 00 00                        	add	byte ptr [rax], al
    1787: 00 98 71 00 00 00            	add	byte ptr [rax + 113], bl
    178d: 00 00                        	add	byte ptr [rax], al
    178f: 00 07                        	add	byte ptr [rdi], al
    1791: 00 00                        	add	byte ptr [rax], al
    1793: 00 2f                        	add	byte ptr [rdi], ch
		...
    179d: 00 00                        	add	byte ptr [rax], al
    179f: 00 a0 71 00 00 00            	add	byte ptr [rax + 113], ah
    17a5: 00 00                        	add	byte ptr [rax], al
    17a7: 00 07                        	add	byte ptr [rdi], al
    17a9: 00 00                        	add	byte ptr [rax], al
    17ab: 00 30                        	add	byte ptr [rax], dh
		...
    17b5: 00 00                        	add	byte ptr [rax], al
    17b7: 00 a8 71 00 00 00            	add	byte ptr [rax + 113], ch
    17bd: 00 00                        	add	byte ptr [rax], al
    17bf: 00 07                        	add	byte ptr [rdi], al
    17c1: 00 00                        	add	byte ptr [rax], al
    17c3: 00 31                        	add	byte ptr [rcx], dh
		...
    17cd: 00 00                        	add	byte ptr [rax], al
    17cf: 00 b0 71 00 00 00            	add	byte ptr [rax + 113], dh
    17d5: 00 00                        	add	byte ptr [rax], al
    17d7: 00 07                        	add	byte ptr [rdi], al
    17d9: 00 00                        	add	byte ptr [rax], al
    17db: 00 32                        	add	byte ptr [rdx], dh
		...
    17e5: 00 00                        	add	byte ptr [rax], al
    17e7: 00 b8 71 00 00 00            	add	byte ptr [rax + 113], bh
    17ed: 00 00                        	add	byte ptr [rax], al
    17ef: 00 07                        	add	byte ptr [rdi], al
    17f1: 00 00                        	add	byte ptr [rax], al
    17f3: 00 33                        	add	byte ptr [rbx], dh
		...
    17fd: 00 00                        	add	byte ptr [rax], al
    17ff: 00 c0                        	add	al, al
    1801: 71 00                        	jno	0x1803 <.rela.plt+0x4fb>
    1803: 00 00                        	add	byte ptr [rax], al
    1805: 00 00                        	add	byte ptr [rax], al
    1807: 00 07                        	add	byte ptr [rdi], al
    1809: 00 00                        	add	byte ptr [rax], al
    180b: 00 35 00 00 00 00            	add	byte ptr [rip], dh      # 0x1811 <.rela.plt+0x509>
    1811: 00 00                        	add	byte ptr [rax], al
    1813: 00 00                        	add	byte ptr [rax], al
    1815: 00 00                        	add	byte ptr [rax], al
    1817: 00                           	<unknown>

Disassembly of section .init:

0000000000002000 <_init>:
    2000: f3 0f 1e fa                  	endbr64
    2004: 48 83 ec 08                  	sub	rsp, 8
    2008: 48 8b 05 d1 4f 00 00         	mov	rax, qword ptr [rip + 20433] # 0x6fe0 <vkUpdateDescriptorSets+0x6fe0>
    200f: 48 85 c0                     	test	rax, rax
    2012: 74 02                        	je	0x2016 <_init+0x16>
    2014: ff d0                        	call	rax
    2016: 48 83 c4 08                  	add	rsp, 8
    201a: c3                           	ret

Disassembly of section .plt:

0000000000002020 <.plt>:
    2020: ff 35 e2 4f 00 00            	push	qword ptr [rip + 20450] # 0x7008 <_GLOBAL_OFFSET_TABLE_+0x8>
    2026: ff 25 e4 4f 00 00            	jmp	qword ptr [rip + 20452] # 0x7010 <_GLOBAL_OFFSET_TABLE_+0x10>
    202c: 0f 1f 40 00                  	nop	dword ptr [rax]

0000000000002030 <vkEnumeratePhysicalDevices@plt>:
    2030: ff 25 e2 4f 00 00            	jmp	qword ptr [rip + 20450] # 0x7018 <_GLOBAL_OFFSET_TABLE_+0x18>
    2036: 68 00 00 00 00               	push	0
    203b: e9 e0 ff ff ff               	jmp	0x2020 <.plt>

0000000000002040 <vkCreateDescriptorSetLayout@plt>:
    2040: ff 25 da 4f 00 00            	jmp	qword ptr [rip + 20442] # 0x7020 <_GLOBAL_OFFSET_TABLE_+0x20>
    2046: 68 01 00 00 00               	push	1
    204b: e9 d0 ff ff ff               	jmp	0x2020 <.plt>

0000000000002050 <free@plt>:
    2050: ff 25 d2 4f 00 00            	jmp	qword ptr [rip + 20434] # 0x7028 <_GLOBAL_OFFSET_TABLE_+0x28>
    2056: 68 02 00 00 00               	push	2
    205b: e9 c0 ff ff ff               	jmp	0x2020 <.plt>

0000000000002060 <vkCmdBindDescriptorSets@plt>:
    2060: ff 25 ca 4f 00 00            	jmp	qword ptr [rip + 20426] # 0x7030 <_GLOBAL_OFFSET_TABLE_+0x30>
    2066: 68 03 00 00 00               	push	3
    206b: e9 b0 ff ff ff               	jmp	0x2020 <.plt>

0000000000002070 <vkQueueWaitIdle@plt>:
    2070: ff 25 c2 4f 00 00            	jmp	qword ptr [rip + 20418] # 0x7038 <_GLOBAL_OFFSET_TABLE_+0x38>
    2076: 68 04 00 00 00               	push	4
    207b: e9 a0 ff ff ff               	jmp	0x2020 <.plt>

0000000000002080 <nnFindMemoryProperties@plt>:
    2080: ff 25 ba 4f 00 00            	jmp	qword ptr [rip + 20410] # 0x7040 <_GLOBAL_OFFSET_TABLE_+0x40>
    2086: 68 05 00 00 00               	push	5
    208b: e9 90 ff ff ff               	jmp	0x2020 <.plt>

0000000000002090 <fread@plt>:
    2090: ff 25 b2 4f 00 00            	jmp	qword ptr [rip + 20402] # 0x7048 <_GLOBAL_OFFSET_TABLE_+0x48>
    2096: 68 06 00 00 00               	push	6
    209b: e9 80 ff ff ff               	jmp	0x2020 <.plt>

00000000000020a0 <vkCmdBindPipeline@plt>:
    20a0: ff 25 aa 4f 00 00            	jmp	qword ptr [rip + 20394] # 0x7050 <_GLOBAL_OFFSET_TABLE_+0x50>
    20a6: 68 07 00 00 00               	push	7
    20ab: e9 70 ff ff ff               	jmp	0x2020 <.plt>

00000000000020b0 <vkGetPhysicalDeviceQueueFamilyProperties@plt>:
    20b0: ff 25 a2 4f 00 00            	jmp	qword ptr [rip + 20386] # 0x7058 <_GLOBAL_OFFSET_TABLE_+0x58>
    20b6: 68 08 00 00 00               	push	8
    20bb: e9 60 ff ff ff               	jmp	0x2020 <.plt>

00000000000020c0 <vkEnumerateDeviceExtensionProperties@plt>:
    20c0: ff 25 9a 4f 00 00            	jmp	qword ptr [rip + 20378] # 0x7060 <_GLOBAL_OFFSET_TABLE_+0x60>
    20c6: 68 09 00 00 00               	push	9
    20cb: e9 50 ff ff ff               	jmp	0x2020 <.plt>

00000000000020d0 <fclose@plt>:
    20d0: ff 25 92 4f 00 00            	jmp	qword ptr [rip + 20370] # 0x7068 <_GLOBAL_OFFSET_TABLE_+0x68>
    20d6: 68 0a 00 00 00               	push	10
    20db: e9 40 ff ff ff               	jmp	0x2020 <.plt>

00000000000020e0 <vkCreatePipelineCache@plt>:
    20e0: ff 25 8a 4f 00 00            	jmp	qword ptr [rip + 20362] # 0x7070 <_GLOBAL_OFFSET_TABLE_+0x70>
    20e6: 68 0b 00 00 00               	push	11
    20eb: e9 30 ff ff ff               	jmp	0x2020 <.plt>

00000000000020f0 <vkCreateCommandPool@plt>:
    20f0: ff 25 82 4f 00 00            	jmp	qword ptr [rip + 20354] # 0x7078 <_GLOBAL_OFFSET_TABLE_+0x78>
    20f6: 68 0c 00 00 00               	push	12
    20fb: e9 20 ff ff ff               	jmp	0x2020 <.plt>

0000000000002100 <printf@plt>:
    2100: ff 25 7a 4f 00 00            	jmp	qword ptr [rip + 20346] # 0x7080 <_GLOBAL_OFFSET_TABLE_+0x80>
    2106: 68 0d 00 00 00               	push	13
    210b: e9 10 ff ff ff               	jmp	0x2020 <.plt>

0000000000002110 <rewind@plt>:
    2110: ff 25 72 4f 00 00            	jmp	qword ptr [rip + 20338] # 0x7088 <_GLOBAL_OFFSET_TABLE_+0x88>
    2116: 68 0e 00 00 00               	push	14
    211b: e9 00 ff ff ff               	jmp	0x2020 <.plt>

0000000000002120 <vkGetDeviceQueue@plt>:
    2120: ff 25 6a 4f 00 00            	jmp	qword ptr [rip + 20330] # 0x7090 <_GLOBAL_OFFSET_TABLE_+0x90>
    2126: 68 0f 00 00 00               	push	15
    212b: e9 f0 fe ff ff               	jmp	0x2020 <.plt>

0000000000002130 <vkGetBufferMemoryRequirements@plt>:
    2130: ff 25 62 4f 00 00            	jmp	qword ptr [rip + 20322] # 0x7098 <_GLOBAL_OFFSET_TABLE_+0x98>
    2136: 68 10 00 00 00               	push	16
    213b: e9 e0 fe ff ff               	jmp	0x2020 <.plt>

0000000000002140 <vkUnmapMemory@plt>:
    2140: ff 25 5a 4f 00 00            	jmp	qword ptr [rip + 20314] # 0x70a0 <_GLOBAL_OFFSET_TABLE_+0xa0>
    2146: 68 11 00 00 00               	push	17
    214b: e9 d0 fe ff ff               	jmp	0x2020 <.plt>

0000000000002150 <nnCreateVkDescriptorSetLayoutBindingStorageBuffer@plt>:
    2150: ff 25 52 4f 00 00            	jmp	qword ptr [rip + 20306] # 0x70a8 <_GLOBAL_OFFSET_TABLE_+0xa8>
    2156: 68 12 00 00 00               	push	18
    215b: e9 c0 fe ff ff               	jmp	0x2020 <.plt>

0000000000002160 <vkGetInstanceProcAddr@plt>:
    2160: ff 25 4a 4f 00 00            	jmp	qword ptr [rip + 20298] # 0x70b0 <_GLOBAL_OFFSET_TABLE_+0xb0>
    2166: 68 13 00 00 00               	push	19
    216b: e9 b0 fe ff ff               	jmp	0x2020 <.plt>

0000000000002170 <vkDestroyPipelineCache@plt>:
    2170: ff 25 42 4f 00 00            	jmp	qword ptr [rip + 20290] # 0x70b8 <_GLOBAL_OFFSET_TABLE_+0xb8>
    2176: 68 14 00 00 00               	push	20
    217b: e9 a0 fe ff ff               	jmp	0x2020 <.plt>

0000000000002180 <vkQueueSubmit@plt>:
    2180: ff 25 3a 4f 00 00            	jmp	qword ptr [rip + 20282] # 0x70c0 <_GLOBAL_OFFSET_TABLE_+0xc0>
    2186: 68 15 00 00 00               	push	21
    218b: e9 90 fe ff ff               	jmp	0x2020 <.plt>

0000000000002190 <vkEndCommandBuffer@plt>:
    2190: ff 25 32 4f 00 00            	jmp	qword ptr [rip + 20274] # 0x70c8 <_GLOBAL_OFFSET_TABLE_+0xc8>
    2196: 68 16 00 00 00               	push	22
    219b: e9 80 fe ff ff               	jmp	0x2020 <.plt>

00000000000021a0 <fputc@plt>:
    21a0: ff 25 2a 4f 00 00            	jmp	qword ptr [rip + 20266] # 0x70d0 <_GLOBAL_OFFSET_TABLE_+0xd0>
    21a6: 68 17 00 00 00               	push	23
    21ab: e9 70 fe ff ff               	jmp	0x2020 <.plt>

00000000000021b0 <nnReadBinaryFile@plt>:
    21b0: ff 25 22 4f 00 00            	jmp	qword ptr [rip + 20258] # 0x70d8 <_GLOBAL_OFFSET_TABLE_+0xd8>
    21b6: 68 18 00 00 00               	push	24
    21bb: e9 60 fe ff ff               	jmp	0x2020 <.plt>

00000000000021c0 <strcmp@plt>:
    21c0: ff 25 1a 4f 00 00            	jmp	qword ptr [rip + 20250] # 0x70e0 <_GLOBAL_OFFSET_TABLE_+0xe0>
    21c6: 68 19 00 00 00               	push	25
    21cb: e9 50 fe ff ff               	jmp	0x2020 <.plt>

00000000000021d0 <vkDestroyShaderModule@plt>:
    21d0: ff 25 12 4f 00 00            	jmp	qword ptr [rip + 20242] # 0x70e8 <_GLOBAL_OFFSET_TABLE_+0xe8>
    21d6: 68 1a 00 00 00               	push	26
    21db: e9 40 fe ff ff               	jmp	0x2020 <.plt>

00000000000021e0 <fprintf@plt>:
    21e0: ff 25 0a 4f 00 00            	jmp	qword ptr [rip + 20234] # 0x70f0 <_GLOBAL_OFFSET_TABLE_+0xf0>
    21e6: 68 1b 00 00 00               	push	27
    21eb: e9 30 fe ff ff               	jmp	0x2020 <.plt>

00000000000021f0 <ftell@plt>:
    21f0: ff 25 02 4f 00 00            	jmp	qword ptr [rip + 20226] # 0x70f8 <_GLOBAL_OFFSET_TABLE_+0xf8>
    21f6: 68 1c 00 00 00               	push	28
    21fb: e9 20 fe ff ff               	jmp	0x2020 <.plt>

0000000000002200 <vkCreateComputePipelines@plt>:
    2200: ff 25 fa 4e 00 00            	jmp	qword ptr [rip + 20218] # 0x7100 <_GLOBAL_OFFSET_TABLE_+0x100>
    2206: 68 1d 00 00 00               	push	29
    220b: e9 10 fe ff ff               	jmp	0x2020 <.plt>

0000000000002210 <memcpy@plt>:
    2210: ff 25 f2 4e 00 00            	jmp	qword ptr [rip + 20210] # 0x7108 <_GLOBAL_OFFSET_TABLE_+0x108>
    2216: 68 1e 00 00 00               	push	30
    221b: e9 00 fe ff ff               	jmp	0x2020 <.plt>

0000000000002220 <vkGetPhysicalDeviceMemoryProperties@plt>:
    2220: ff 25 ea 4e 00 00            	jmp	qword ptr [rip + 20202] # 0x7110 <_GLOBAL_OFFSET_TABLE_+0x110>
    2226: 68 1f 00 00 00               	push	31
    222b: e9 f0 fd ff ff               	jmp	0x2020 <.plt>

0000000000002230 <vkAllocateMemory@plt>:
    2230: ff 25 e2 4e 00 00            	jmp	qword ptr [rip + 20194] # 0x7118 <_GLOBAL_OFFSET_TABLE_+0x118>
    2236: 68 20 00 00 00               	push	32
    223b: e9 e0 fd ff ff               	jmp	0x2020 <.plt>

0000000000002240 <malloc@plt>:
    2240: ff 25 da 4e 00 00            	jmp	qword ptr [rip + 20186] # 0x7120 <_GLOBAL_OFFSET_TABLE_+0x120>
    2246: 68 21 00 00 00               	push	33
    224b: e9 d0 fd ff ff               	jmp	0x2020 <.plt>

0000000000002250 <vkMapMemory@plt>:
    2250: ff 25 d2 4e 00 00            	jmp	qword ptr [rip + 20178] # 0x7128 <_GLOBAL_OFFSET_TABLE_+0x128>
    2256: 68 22 00 00 00               	push	34
    225b: e9 c0 fd ff ff               	jmp	0x2020 <.plt>

0000000000002260 <vkAllocateDescriptorSets@plt>:
    2260: ff 25 ca 4e 00 00            	jmp	qword ptr [rip + 20170] # 0x7130 <_GLOBAL_OFFSET_TABLE_+0x130>
    2266: 68 23 00 00 00               	push	35
    226b: e9 b0 fd ff ff               	jmp	0x2020 <.plt>

0000000000002270 <vkCreateBuffer@plt>:
    2270: ff 25 c2 4e 00 00            	jmp	qword ptr [rip + 20162] # 0x7138 <_GLOBAL_OFFSET_TABLE_+0x138>
    2276: 68 24 00 00 00               	push	36
    227b: e9 a0 fd ff ff               	jmp	0x2020 <.plt>

0000000000002280 <vkCreatePipelineLayout@plt>:
    2280: ff 25 ba 4e 00 00            	jmp	qword ptr [rip + 20154] # 0x7140 <_GLOBAL_OFFSET_TABLE_+0x140>
    2286: 68 25 00 00 00               	push	37
    228b: e9 90 fd ff ff               	jmp	0x2020 <.plt>

0000000000002290 <fseek@plt>:
    2290: ff 25 b2 4e 00 00            	jmp	qword ptr [rip + 20146] # 0x7148 <_GLOBAL_OFFSET_TABLE_+0x148>
    2296: 68 26 00 00 00               	push	38
    229b: e9 80 fd ff ff               	jmp	0x2020 <.plt>

00000000000022a0 <vkCreateDevice@plt>:
    22a0: ff 25 aa 4e 00 00            	jmp	qword ptr [rip + 20138] # 0x7150 <_GLOBAL_OFFSET_TABLE_+0x150>
    22a6: 68 27 00 00 00               	push	39
    22ab: e9 70 fd ff ff               	jmp	0x2020 <.plt>

00000000000022b0 <vkCreateShaderModule@plt>:
    22b0: ff 25 a2 4e 00 00            	jmp	qword ptr [rip + 20130] # 0x7158 <_GLOBAL_OFFSET_TABLE_+0x158>
    22b6: 68 28 00 00 00               	push	40
    22bb: e9 60 fd ff ff               	jmp	0x2020 <.plt>

00000000000022c0 <vkAllocateCommandBuffers@plt>:
    22c0: ff 25 9a 4e 00 00            	jmp	qword ptr [rip + 20122] # 0x7160 <_GLOBAL_OFFSET_TABLE_+0x160>
    22c6: 68 29 00 00 00               	push	41
    22cb: e9 50 fd ff ff               	jmp	0x2020 <.plt>

00000000000022d0 <vkCmdDispatch@plt>:
    22d0: ff 25 92 4e 00 00            	jmp	qword ptr [rip + 20114] # 0x7168 <_GLOBAL_OFFSET_TABLE_+0x168>
    22d6: 68 2a 00 00 00               	push	42
    22db: e9 40 fd ff ff               	jmp	0x2020 <.plt>

00000000000022e0 <vkUpdateDescriptorSets@plt>:
    22e0: ff 25 8a 4e 00 00            	jmp	qword ptr [rip + 20106] # 0x7170 <_GLOBAL_OFFSET_TABLE_+0x170>
    22e6: 68 2b 00 00 00               	push	43
    22eb: e9 30 fd ff ff               	jmp	0x2020 <.plt>

00000000000022f0 <fopen@plt>:
    22f0: ff 25 82 4e 00 00            	jmp	qword ptr [rip + 20098] # 0x7178 <_GLOBAL_OFFSET_TABLE_+0x178>
    22f6: 68 2c 00 00 00               	push	44
    22fb: e9 20 fd ff ff               	jmp	0x2020 <.plt>

0000000000002300 <vkGetPipelineCacheData@plt>:
    2300: ff 25 7a 4e 00 00            	jmp	qword ptr [rip + 20090] # 0x7180 <_GLOBAL_OFFSET_TABLE_+0x180>
    2306: 68 2d 00 00 00               	push	45
    230b: e9 10 fd ff ff               	jmp	0x2020 <.plt>

0000000000002310 <nnWriteBinaryFile@plt>:
    2310: ff 25 72 4e 00 00            	jmp	qword ptr [rip + 20082] # 0x7188 <_GLOBAL_OFFSET_TABLE_+0x188>
    2316: 68 2e 00 00 00               	push	46
    231b: e9 00 fd ff ff               	jmp	0x2020 <.plt>

0000000000002320 <vkCreateInstance@plt>:
    2320: ff 25 6a 4e 00 00            	jmp	qword ptr [rip + 20074] # 0x7190 <_GLOBAL_OFFSET_TABLE_+0x190>
    2326: 68 2f 00 00 00               	push	47
    232b: e9 f0 fc ff ff               	jmp	0x2020 <.plt>

0000000000002330 <exit@plt>:
    2330: ff 25 62 4e 00 00            	jmp	qword ptr [rip + 20066] # 0x7198 <_GLOBAL_OFFSET_TABLE_+0x198>
    2336: 68 30 00 00 00               	push	48
    233b: e9 e0 fc ff ff               	jmp	0x2020 <.plt>

0000000000002340 <vkCreateDescriptorPool@plt>:
    2340: ff 25 5a 4e 00 00            	jmp	qword ptr [rip + 20058] # 0x71a0 <_GLOBAL_OFFSET_TABLE_+0x1a0>
    2346: 68 31 00 00 00               	push	49
    234b: e9 d0 fc ff ff               	jmp	0x2020 <.plt>

0000000000002350 <fwrite@plt>:
    2350: ff 25 52 4e 00 00            	jmp	qword ptr [rip + 20050] # 0x71a8 <_GLOBAL_OFFSET_TABLE_+0x1a8>
    2356: 68 32 00 00 00               	push	50
    235b: e9 c0 fc ff ff               	jmp	0x2020 <.plt>

0000000000002360 <vkBeginCommandBuffer@plt>:
    2360: ff 25 4a 4e 00 00            	jmp	qword ptr [rip + 20042] # 0x71b0 <_GLOBAL_OFFSET_TABLE_+0x1b0>
    2366: 68 33 00 00 00               	push	51
    236b: e9 b0 fc ff ff               	jmp	0x2020 <.plt>

0000000000002370 <vkEnumerateInstanceLayerProperties@plt>:
    2370: ff 25 42 4e 00 00            	jmp	qword ptr [rip + 20034] # 0x71b8 <_GLOBAL_OFFSET_TABLE_+0x1b8>
    2376: 68 34 00 00 00               	push	52
    237b: e9 a0 fc ff ff               	jmp	0x2020 <.plt>

0000000000002380 <vkBindBufferMemory@plt>:
    2380: ff 25 3a 4e 00 00            	jmp	qword ptr [rip + 20026] # 0x71c0 <_GLOBAL_OFFSET_TABLE_+0x1c0>
    2386: 68 35 00 00 00               	push	53
    238b: e9 90 fc ff ff               	jmp	0x2020 <.plt>

Disassembly of section .plt.got:

0000000000002390 <.plt.got>:
    2390: ff 25 5a 4c 00 00            	jmp	qword ptr [rip + 19546] # 0x6ff0 <vkUpdateDescriptorSets+0x6ff0>
    2396: 66 90                        	nop

Disassembly of section .text:

00000000000023a0 <set_fast_math>:
    23a0: f3 0f 1e fa                  	endbr64
    23a4: 0f ae 5c 24 fc               	stmxcsr	dword ptr [rsp - 4]
    23a9: 81 4c 24 fc 40 80 00 00      	or	dword ptr [rsp - 4], 32832
    23b1: 0f ae 54 24 fc               	ldmxcsr	dword ptr [rsp - 4]
    23b6: c3                           	ret
    23b7: 66 0f 1f 84 00 00 00 00 00   	nop	word ptr [rax + rax]

00000000000023c0 <deregister_tm_clones>:
    23c0: 48 8d 3d 49 4e 00 00         	lea	rdi, [rip + 20041]      # 0x7210 <completed.0>
    23c7: 48 8d 05 42 4e 00 00         	lea	rax, [rip + 20034]      # 0x7210 <completed.0>
    23ce: 48 39 f8                     	cmp	rax, rdi
    23d1: 74 15                        	je	0x23e8 <deregister_tm_clones+0x28>
    23d3: 48 8b 05 fe 4b 00 00         	mov	rax, qword ptr [rip + 19454] # 0x6fd8 <vkUpdateDescriptorSets+0x6fd8>
    23da: 48 85 c0                     	test	rax, rax
    23dd: 74 09                        	je	0x23e8 <deregister_tm_clones+0x28>
    23df: ff e0                        	jmp	rax
    23e1: 0f 1f 80 00 00 00 00         	nop	dword ptr [rax]
    23e8: c3                           	ret
    23e9: 0f 1f 80 00 00 00 00         	nop	dword ptr [rax]

00000000000023f0 <register_tm_clones>:
    23f0: 48 8d 3d 19 4e 00 00         	lea	rdi, [rip + 19993]      # 0x7210 <completed.0>
    23f7: 48 8d 35 12 4e 00 00         	lea	rsi, [rip + 19986]      # 0x7210 <completed.0>
    23fe: 48 29 fe                     	sub	rsi, rdi
    2401: 48 89 f0                     	mov	rax, rsi
    2404: 48 c1 ee 3f                  	shr	rsi, 63
    2408: 48 c1 f8 03                  	sar	rax, 3
    240c: 48 01 c6                     	add	rsi, rax
    240f: 48 d1 fe                     	sar	rsi
    2412: 74 14                        	je	0x2428 <register_tm_clones+0x38>
    2414: 48 8b 05 cd 4b 00 00         	mov	rax, qword ptr [rip + 19405] # 0x6fe8 <vkUpdateDescriptorSets+0x6fe8>
    241b: 48 85 c0                     	test	rax, rax
    241e: 74 08                        	je	0x2428 <register_tm_clones+0x38>
    2420: ff e0                        	jmp	rax
    2422: 66 0f 1f 44 00 00            	nop	word ptr [rax + rax]
    2428: c3                           	ret
    2429: 0f 1f 80 00 00 00 00         	nop	dword ptr [rax]

0000000000002430 <__do_global_dtors_aux>:
    2430: f3 0f 1e fa                  	endbr64
    2434: 80 3d d5 4d 00 00 00         	cmp	byte ptr [rip + 19925], 0 # 0x7210 <completed.0>
    243b: 75 2b                        	jne	0x2468 <__do_global_dtors_aux+0x38>
    243d: 55                           	push	rbp
    243e: 48 83 3d aa 4b 00 00 00      	cmp	qword ptr [rip + 19370], 0 # 0x6ff0 <vkUpdateDescriptorSets+0x6ff0>
    2446: 48 89 e5                     	mov	rbp, rsp
    2449: 74 0c                        	je	0x2457 <__do_global_dtors_aux+0x27>
    244b: 48 8b 3d 7e 4d 00 00         	mov	rdi, qword ptr [rip + 19838] # 0x71d0 <__dso_handle>
    2452: e8 39 ff ff ff               	call	0x2390 <.plt.got>
    2457: e8 64 ff ff ff               	call	0x23c0 <deregister_tm_clones>
    245c: c6 05 ad 4d 00 00 01         	mov	byte ptr [rip + 19885], 1 # 0x7210 <completed.0>
    2463: 5d                           	pop	rbp
    2464: c3                           	ret
    2465: 0f 1f 00                     	nop	dword ptr [rax]
    2468: c3                           	ret
    2469: 0f 1f 80 00 00 00 00         	nop	dword ptr [rax]

0000000000002470 <frame_dummy>:
    2470: f3 0f 1e fa                  	endbr64
    2474: e9 77 ff ff ff               	jmp	0x23f0 <register_tm_clones>
    2479: 0f 1f 80 00 00 00 00         	nop	dword ptr [rax]

0000000000002480 <nnRunTwoMatricesAndOutput>:
    2480: 55                           	push	rbp
    2481: 48 89 e5                     	mov	rbp, rsp
    2484: 41 57                        	push	r15
    2486: 41 56                        	push	r14
    2488: 41 55                        	push	r13
    248a: 41 54                        	push	r12
    248c: 53                           	push	rbx
    248d: 48 83 e4 e0                  	and	rsp, -32
    2491: 48 81 ec 00 03 00 00         	sub	rsp, 768
    2498: 48 89 4c 24 60               	mov	qword ptr [rsp + 96], rcx
    249d: 49 89 d6                     	mov	r14, rdx
    24a0: 48 89 f3                     	mov	rbx, rsi
    24a3: 48 89 7c 24 10               	mov	qword ptr [rsp + 16], rdi
    24a8: 8b 47 08                     	mov	eax, dword ptr [rdi + 8]
    24ab: 89 44 24 34                  	mov	dword ptr [rsp + 52], eax
    24af: 8b 56 08                     	mov	edx, dword ptr [rsi + 8]
    24b2: 8b 4e 0c                     	mov	ecx, dword ptr [rsi + 12]
    24b5: 4c 8b 25 3c 4b 00 00         	mov	r12, qword ptr [rip + 19260] # 0x6ff8 <vkUpdateDescriptorSets+0x6ff8>
    24bc: 49 8b 3c 24                  	mov	rdi, qword ptr [r12]
    24c0: 48 8d 35 79 2b 00 00         	lea	rsi, [rip + 11129]      # 0x5040 <vkUpdateDescriptorSets+0x5040>
    24c7: 45 31 ed                     	xor	r13d, r13d
    24ca: 89 54 24 48                  	mov	dword ptr [rsp + 72], edx
    24ce: 89 4c 24 50                  	mov	dword ptr [rsp + 80], ecx
    24d2: 31 c0                        	xor	eax, eax
    24d4: e8 07 fd ff ff               	call	0x21e0 <fprintf@plt>
    24d9: 49 8b 34 24                  	mov	rsi, qword ptr [r12]
    24dd: bf 0a 00 00 00               	mov	edi, 10
    24e2: e8 b9 fc ff ff               	call	0x21a0 <fputc@plt>
    24e7: 83 7b 08 00                  	cmp	dword ptr [rbx + 8], 0
    24eb: 0f 85 ab 08 00 00            	jne	0x2d9c <nnRunTwoMatricesAndOutput+0x91c>
    24f1: 48 89 9c 24 90 00 00 00      	mov	qword ptr [rsp + 144], rbx
    24f9: 49 8b 34 24                  	mov	rsi, qword ptr [r12]
    24fd: bf 0a 00 00 00               	mov	edi, 10
    2502: e8 99 fc ff ff               	call	0x21a0 <fputc@plt>
    2507: 49 8b 3c 24                  	mov	rdi, qword ptr [r12]
    250b: 41 8b 56 08                  	mov	edx, dword ptr [r14 + 8]
    250f: 41 8b 4e 0c                  	mov	ecx, dword ptr [r14 + 12]
    2513: 48 8d 35 26 2b 00 00         	lea	rsi, [rip + 11046]      # 0x5040 <vkUpdateDescriptorSets+0x5040>
    251a: 45 31 ff                     	xor	r15d, r15d
    251d: 31 c0                        	xor	eax, eax
    251f: e8 bc fc ff ff               	call	0x21e0 <fprintf@plt>
    2524: 49 8b 34 24                  	mov	rsi, qword ptr [r12]
    2528: bf 0a 00 00 00               	mov	edi, 10
    252d: e8 6e fc ff ff               	call	0x21a0 <fputc@plt>
    2532: 41 83 7e 08 00               	cmp	dword ptr [r14 + 8], 0
    2537: 0f 85 4c 09 00 00            	jne	0x2e89 <nnRunTwoMatricesAndOutput+0xa09>
    253d: 4c 89 b4 24 98 00 00 00      	mov	qword ptr [rsp + 152], r14
    2545: 49 8b 34 24                  	mov	rsi, qword ptr [r12]
    2549: bf 0a 00 00 00               	mov	edi, 10
    254e: e8 4d fc ff ff               	call	0x21a0 <fputc@plt>
    2553: 49 8b 3c 24                  	mov	rdi, qword ptr [r12]
    2557: 4c 89 e3                     	mov	rbx, r12
    255a: 4c 8b 64 24 60               	mov	r12, qword ptr [rsp + 96]
    255f: 41 8b 54 24 08               	mov	edx, dword ptr [r12 + 8]
    2564: 41 8b 4c 24 0c               	mov	ecx, dword ptr [r12 + 12]
    2569: 48 8d 35 d0 2a 00 00         	lea	rsi, [rip + 10960]      # 0x5040 <vkUpdateDescriptorSets+0x5040>
    2570: 45 31 ff                     	xor	r15d, r15d
    2573: 31 c0                        	xor	eax, eax
    2575: e8 66 fc ff ff               	call	0x21e0 <fprintf@plt>
    257a: 48 8b 33                     	mov	rsi, qword ptr [rbx]
    257d: bf 0a 00 00 00               	mov	edi, 10
    2582: e8 19 fc ff ff               	call	0x21a0 <fputc@plt>
    2587: 41 83 7c 24 08 00            	cmp	dword ptr [r12 + 8], 0
    258d: 0f 85 60 09 00 00            	jne	0x2ef3 <nnRunTwoMatricesAndOutput+0xa73>
    2593: 48 8b 05 5e 4a 00 00         	mov	rax, qword ptr [rip + 19038] # 0x6ff8 <vkUpdateDescriptorSets+0x6ff8>
    259a: 48 8b 30                     	mov	rsi, qword ptr [rax]
    259d: bf 0a 00 00 00               	mov	edi, 10
    25a2: e8 f9 fb ff ff               	call	0x21a0 <fputc@plt>
    25a7: bf 48 00 00 00               	mov	edi, 72
    25ac: e8 8f fc ff ff               	call	0x2240 <malloc@plt>
    25b1: 49 89 c5                     	mov	r13, rax
    25b4: 48 8d 9c 24 00 01 00 00      	lea	rbx, [rsp + 256]
    25bc: 48 89 df                     	mov	rdi, rbx
    25bf: 31 f6                        	xor	esi, esi
    25c1: e8 8a fb ff ff               	call	0x2150 <nnCreateVkDescriptorSetLayoutBindingStorageBuffer@plt>
    25c6: 48 8b 84 24 10 01 00 00      	mov	rax, qword ptr [rsp + 272]
    25ce: 49 89 45 10                  	mov	qword ptr [r13 + 16], rax
    25d2: c5 f8 10 84 24 00 01 00 00   	vmovups	xmm0, xmmword ptr [rsp + 256]
    25db: c4 c1 78 11 45 00            	vmovups	xmmword ptr [r13], xmm0
    25e1: 48 89 df                     	mov	rdi, rbx
    25e4: be 01 00 00 00               	mov	esi, 1
    25e9: e8 62 fb ff ff               	call	0x2150 <nnCreateVkDescriptorSetLayoutBindingStorageBuffer@plt>
    25ee: 48 8b 84 24 10 01 00 00      	mov	rax, qword ptr [rsp + 272]
    25f6: 49 89 45 28                  	mov	qword ptr [r13 + 40], rax
    25fa: c5 f8 10 84 24 00 01 00 00   	vmovups	xmm0, xmmword ptr [rsp + 256]
    2603: c4 c1 78 11 45 18            	vmovups	xmmword ptr [r13 + 24], xmm0
    2609: 48 89 df                     	mov	rdi, rbx
    260c: be 02 00 00 00               	mov	esi, 2
    2611: e8 3a fb ff ff               	call	0x2150 <nnCreateVkDescriptorSetLayoutBindingStorageBuffer@plt>
    2616: 48 8b 84 24 10 01 00 00      	mov	rax, qword ptr [rsp + 272]
    261e: 49 89 45 40                  	mov	qword ptr [r13 + 64], rax
    2622: c5 f8 10 84 24 00 01 00 00   	vmovups	xmm0, xmmword ptr [rsp + 256]
    262b: c4 c1 78 11 45 30            	vmovups	xmmword ptr [r13 + 48], xmm0
    2631: c7 84 24 90 01 00 00 20 00 00 00     	mov	dword ptr [rsp + 400], 32
    263c: 48 c7 84 24 98 01 00 00 00 00 00 00  	mov	qword ptr [rsp + 408], 0
    2648: 48 b8 00 00 00 00 03 00 00 00	movabs	rax, 12884901888
    2652: 48 89 84 24 a0 01 00 00      	mov	qword ptr [rsp + 416], rax
    265a: 4c 89 ac 24 a8 01 00 00      	mov	qword ptr [rsp + 424], r13
    2662: 48 8b 5c 24 10               	mov	rbx, qword ptr [rsp + 16]
    2667: 48 8b 3b                     	mov	rdi, qword ptr [rbx]
    266a: 48 8d b4 24 90 01 00 00      	lea	rsi, [rsp + 400]
    2672: 48 8d 4c 24 78               	lea	rcx, [rsp + 120]
    2677: 31 d2                        	xor	edx, edx
    2679: e8 c2 f9 ff ff               	call	0x2040 <vkCreateDescriptorSetLayout@plt>
    267e: 85 c0                        	test	eax, eax
    2680: 0f 85 d6 08 00 00            	jne	0x2f5c <nnRunTwoMatricesAndOutput+0xadc>
    2686: 44 8b 64 24 50               	mov	r12d, dword ptr [rsp + 80]
    268b: 44 0f af 64 24 48            	imul	r12d, dword ptr [rsp + 72]
    2691: c7 84 24 c8 00 00 00 0c 00 00 00     	mov	dword ptr [rsp + 200], 12
    269c: 48 c7 84 24 d0 00 00 00 00 00 00 00  	mov	qword ptr [rsp + 208], 0
    26a8: c7 84 24 d8 00 00 00 00 00 00 00     	mov	dword ptr [rsp + 216], 0
    26b3: 44 89 e0                     	mov	eax, r12d
    26b6: 48 89 44 24 48               	mov	qword ptr [rsp + 72], rax
    26bb: 48 8d 04 85 00 00 00 00      	lea	rax, [4*rax]
    26c3: 48 89 44 24 50               	mov	qword ptr [rsp + 80], rax
    26c8: 48 89 84 24 e0 00 00 00      	mov	qword ptr [rsp + 224], rax
    26d0: 48 c7 84 24 e8 00 00 00 20 00 00 00  	mov	qword ptr [rsp + 232], 32
    26dc: c7 84 24 f0 00 00 00 01 00 00 00     	mov	dword ptr [rsp + 240], 1
    26e7: 48 8d 44 24 34               	lea	rax, [rsp + 52]
    26ec: 48 89 84 24 f8 00 00 00      	mov	qword ptr [rsp + 248], rax
    26f4: 48 8b 3b                     	mov	rdi, qword ptr [rbx]
    26f7: 48 8d b4 24 c8 00 00 00      	lea	rsi, [rsp + 200]
    26ff: 48 8d 4c 24 20               	lea	rcx, [rsp + 32]
    2704: 31 d2                        	xor	edx, edx
    2706: e8 65 fb ff ff               	call	0x2270 <vkCreateBuffer@plt>
    270b: 85 c0                        	test	eax, eax
    270d: 0f 85 73 08 00 00            	jne	0x2f86 <nnRunTwoMatricesAndOutput+0xb06>
    2713: 48 8b 3b                     	mov	rdi, qword ptr [rbx]
    2716: 48 8d b4 24 c8 00 00 00      	lea	rsi, [rsp + 200]
    271e: 48 8d 4c 24 40               	lea	rcx, [rsp + 64]
    2723: 31 d2                        	xor	edx, edx
    2725: e8 46 fb ff ff               	call	0x2270 <vkCreateBuffer@plt>
    272a: 85 c0                        	test	eax, eax
    272c: 0f 85 7e 08 00 00            	jne	0x2fb0 <nnRunTwoMatricesAndOutput+0xb30>
    2732: 48 8b 3b                     	mov	rdi, qword ptr [rbx]
    2735: 48 8d b4 24 c8 00 00 00      	lea	rsi, [rsp + 200]
    273d: 48 8d 4c 24 38               	lea	rcx, [rsp + 56]
    2742: 31 d2                        	xor	edx, edx
    2744: e8 27 fb ff ff               	call	0x2270 <vkCreateBuffer@plt>
    2749: 85 c0                        	test	eax, eax
    274b: 0f 85 89 08 00 00            	jne	0x2fda <nnRunTwoMatricesAndOutput+0xb5a>
    2751: 48 8b 3b                     	mov	rdi, qword ptr [rbx]
    2754: 48 8b 74 24 20               	mov	rsi, qword ptr [rsp + 32]
    2759: 48 8d 94 24 08 02 00 00      	lea	rdx, [rsp + 520]
    2761: e8 ca f9 ff ff               	call	0x2130 <vkGetBufferMemoryRequirements@plt>
    2766: 48 8b 9c 24 08 02 00 00      	mov	rbx, qword ptr [rsp + 520]
    276e: 48 8b 44 24 10               	mov	rax, qword ptr [rsp + 16]
    2773: 48 8b 38                     	mov	rdi, qword ptr [rax]
    2776: 48 8b 74 24 20               	mov	rsi, qword ptr [rsp + 32]
    277b: 48 8d 94 24 90 02 00 00      	lea	rdx, [rsp + 656]
    2783: e8 a8 f9 ff ff               	call	0x2130 <vkGetBufferMemoryRequirements@plt>
    2788: 48 03 9c 24 90 02 00 00      	add	rbx, qword ptr [rsp + 656]
    2790: 48 8b 44 24 10               	mov	rax, qword ptr [rsp + 16]
    2795: 48 8b 38                     	mov	rdi, qword ptr [rax]
    2798: 48 8b 74 24 20               	mov	rsi, qword ptr [rsp + 32]
    279d: 48 8d 94 24 a8 02 00 00      	lea	rdx, [rsp + 680]
    27a5: e8 86 f9 ff ff               	call	0x2130 <vkGetBufferMemoryRequirements@plt>
    27aa: 48 03 9c 24 a8 02 00 00      	add	rbx, qword ptr [rsp + 680]
    27b2: 48 8b 44 24 10               	mov	rax, qword ptr [rsp + 16]
    27b7: 48 8d 78 10                  	lea	rdi, [rax + 16]
    27bb: 8b b4 24 18 02 00 00         	mov	esi, dword ptr [rsp + 536]
    27c2: ba 0e 00 00 00               	mov	edx, 14
    27c7: e8 b4 f8 ff ff               	call	0x2080 <nnFindMemoryProperties@plt>
    27cc: c7 84 24 70 01 00 00 05 00 00 00     	mov	dword ptr [rsp + 368], 5
    27d7: 48 c7 84 24 78 01 00 00 00 00 00 00  	mov	qword ptr [rsp + 376], 0
    27e3: 48 89 9c 24 80 01 00 00      	mov	qword ptr [rsp + 384], rbx
    27eb: 48 8b 5c 24 10               	mov	rbx, qword ptr [rsp + 16]
    27f0: 89 84 24 88 01 00 00         	mov	dword ptr [rsp + 392], eax
    27f7: 48 8b 3b                     	mov	rdi, qword ptr [rbx]
    27fa: 48 8d b4 24 70 01 00 00      	lea	rsi, [rsp + 368]
    2802: 48 8d 4c 24 08               	lea	rcx, [rsp + 8]
    2807: 31 d2                        	xor	edx, edx
    2809: e8 22 fa ff ff               	call	0x2230 <vkAllocateMemory@plt>
    280e: 48 8b 3b                     	mov	rdi, qword ptr [rbx]
    2811: 85 c0                        	test	eax, eax
    2813: 0f 85 eb 07 00 00            	jne	0x3004 <nnRunTwoMatricesAndOutput+0xb84>
    2819: 48 8b 74 24 20               	mov	rsi, qword ptr [rsp + 32]
    281e: 48 8b 54 24 08               	mov	rdx, qword ptr [rsp + 8]
    2823: 31 c9                        	xor	ecx, ecx
    2825: e8 56 fb ff ff               	call	0x2380 <vkBindBufferMemory@plt>
    282a: 85 c0                        	test	eax, eax
    282c: 0f 85 f9 07 00 00            	jne	0x302b <nnRunTwoMatricesAndOutput+0xbab>
    2832: 48 8b 9c 24 08 02 00 00      	mov	rbx, qword ptr [rsp + 520]
    283a: 4c 8b 7c 24 10               	mov	r15, qword ptr [rsp + 16]
    283f: 49 8b 3f                     	mov	rdi, qword ptr [r15]
    2842: 48 8b 74 24 40               	mov	rsi, qword ptr [rsp + 64]
    2847: 48 8b 54 24 08               	mov	rdx, qword ptr [rsp + 8]
    284c: 48 89 d9                     	mov	rcx, rbx
    284f: e8 2c fb ff ff               	call	0x2380 <vkBindBufferMemory@plt>
    2854: 85 c0                        	test	eax, eax
    2856: 0f 85 fb 07 00 00            	jne	0x3057 <nnRunTwoMatricesAndOutput+0xbd7>
    285c: 48 03 9c 24 90 02 00 00      	add	rbx, qword ptr [rsp + 656]
    2864: 49 8b 3f                     	mov	rdi, qword ptr [r15]
    2867: 48 8b 74 24 38               	mov	rsi, qword ptr [rsp + 56]
    286c: 48 8b 54 24 08               	mov	rdx, qword ptr [rsp + 8]
    2871: 48 89 d9                     	mov	rcx, rbx
    2874: e8 07 fb ff ff               	call	0x2380 <vkBindBufferMemory@plt>
    2879: 85 c0                        	test	eax, eax
    287b: 0f 85 fe 07 00 00            	jne	0x307f <nnRunTwoMatricesAndOutput+0xbff>
    2881: c7 84 24 d8 01 00 00 1e 00 00 00     	mov	dword ptr [rsp + 472], 30
    288c: 48 c7 84 24 e0 01 00 00 00 00 00 00  	mov	qword ptr [rsp + 480], 0
    2898: 49 be 00 00 00 00 01 00 00 00	movabs	r14, 4294967296
    28a2: 4c 89 b4 24 e8 01 00 00      	mov	qword ptr [rsp + 488], r14
    28aa: 48 8d 5c 24 78               	lea	rbx, [rsp + 120]
    28af: 48 89 9c 24 f0 01 00 00      	mov	qword ptr [rsp + 496], rbx
    28b7: c7 84 24 f8 01 00 00 00 00 00 00     	mov	dword ptr [rsp + 504], 0
    28c2: 48 c7 84 24 00 02 00 00 00 00 00 00  	mov	qword ptr [rsp + 512], 0
    28ce: 49 8b 3f                     	mov	rdi, qword ptr [r15]
    28d1: 48 8d b4 24 d8 01 00 00      	lea	rsi, [rsp + 472]
    28d9: 48 8d 4c 24 70               	lea	rcx, [rsp + 112]
    28de: 31 d2                        	xor	edx, edx
    28e0: e8 9b f9 ff ff               	call	0x2280 <vkCreatePipelineLayout@plt>
    28e5: 85 c0                        	test	eax, eax
    28e7: 0f 85 ba 07 00 00            	jne	0x30a7 <nnRunTwoMatricesAndOutput+0xc27>
    28ed: 48 b8 07 00 00 00 03 00 00 00	movabs	rax, 12884901895
    28f7: 48 89 84 24 c0 00 00 00      	mov	qword ptr [rsp + 192], rax
    28ff: c7 84 24 20 02 00 00 21 00 00 00     	mov	dword ptr [rsp + 544], 33
    290a: 48 c7 84 24 28 02 00 00 00 00 00 00  	mov	qword ptr [rsp + 552], 0
    2916: 4c 89 b4 24 30 02 00 00      	mov	qword ptr [rsp + 560], r14
    291e: c7 84 24 38 02 00 00 01 00 00 00     	mov	dword ptr [rsp + 568], 1
    2929: 48 8d 84 24 c0 00 00 00      	lea	rax, [rsp + 192]
    2931: 48 89 84 24 40 02 00 00      	mov	qword ptr [rsp + 576], rax
    2939: 49 8b 3f                     	mov	rdi, qword ptr [r15]
    293c: 48 8d b4 24 20 02 00 00      	lea	rsi, [rsp + 544]
    2944: 48 8d 8c 24 b8 00 00 00      	lea	rcx, [rsp + 184]
    294c: 31 d2                        	xor	edx, edx
    294e: e8 ed f9 ff ff               	call	0x2340 <vkCreateDescriptorPool@plt>
    2953: c7 84 24 b0 01 00 00 22 00 00 00     	mov	dword ptr [rsp + 432], 34
    295e: 48 c7 84 24 b8 01 00 00 00 00 00 00  	mov	qword ptr [rsp + 440], 0
    296a: 48 8b 84 24 b8 00 00 00      	mov	rax, qword ptr [rsp + 184]
    2972: 48 89 84 24 c0 01 00 00      	mov	qword ptr [rsp + 448], rax
    297a: c7 84 24 c8 01 00 00 01 00 00 00     	mov	dword ptr [rsp + 456], 1
    2985: 48 89 9c 24 d0 01 00 00      	mov	qword ptr [rsp + 464], rbx
    298d: 49 8b 3f                     	mov	rdi, qword ptr [r15]
    2990: 48 8d b4 24 b0 01 00 00      	lea	rsi, [rsp + 432]
    2998: 48 8d 54 24 58               	lea	rdx, [rsp + 88]
    299d: e8 be f8 ff ff               	call	0x2260 <vkAllocateDescriptorSets@plt>
    29a2: 85 c0                        	test	eax, eax
    29a4: 0f 85 27 07 00 00            	jne	0x30d1 <nnRunTwoMatricesAndOutput+0xc51>
    29aa: bf c0 00 00 00               	mov	edi, 192
    29af: e8 8c f8 ff ff               	call	0x2240 <malloc@plt>
    29b4: 48 89 c2                     	mov	rdx, rax
    29b7: 48 8b 44 24 58               	mov	rax, qword ptr [rsp + 88]
    29bc: 48 8b 4c 24 20               	mov	rcx, qword ptr [rsp + 32]
    29c1: 48 89 8c 24 78 02 00 00      	mov	qword ptr [rsp + 632], rcx
    29c9: c5 f8 28 05 2f 26 00 00      	vmovaps	xmm0, xmmword ptr [rip + 9775] # 0x5000 <vkUpdateDescriptorSets+0x5000>
    29d1: c5 f8 11 84 24 80 02 00 00   	vmovups	xmmword ptr [rsp + 640], xmm0
    29da: c7 02 23 00 00 00            	mov	dword ptr [rdx], 35
    29e0: 48 c7 42 08 00 00 00 00      	mov	qword ptr [rdx + 8], 0
    29e8: 48 89 42 10                  	mov	qword ptr [rdx + 16], rax
    29ec: c5 f8 28 0d 1c 26 00 00      	vmovaps	xmm1, xmmword ptr [rip + 9756] # 0x5010 <vkUpdateDescriptorSets+0x5010>
    29f4: c5 f8 11 4a 18               	vmovups	xmmword ptr [rdx + 24], xmm1
    29f9: 48 c7 42 28 00 00 00 00      	mov	qword ptr [rdx + 40], 0
    2a01: 48 8d 8c 24 78 02 00 00      	lea	rcx, [rsp + 632]
    2a09: 48 89 4a 30                  	mov	qword ptr [rdx + 48], rcx
    2a0d: 48 c7 42 38 00 00 00 00      	mov	qword ptr [rdx + 56], 0
    2a15: 48 8b 4c 24 40               	mov	rcx, qword ptr [rsp + 64]
    2a1a: 48 89 8c 24 60 02 00 00      	mov	qword ptr [rsp + 608], rcx
    2a22: c5 f8 11 84 24 68 02 00 00   	vmovups	xmmword ptr [rsp + 616], xmm0
    2a2b: c7 42 40 23 00 00 00         	mov	dword ptr [rdx + 64], 35
    2a32: 48 c7 42 48 00 00 00 00      	mov	qword ptr [rdx + 72], 0
    2a3a: 48 89 42 50                  	mov	qword ptr [rdx + 80], rax
    2a3e: c5 f8 28 0d da 25 00 00      	vmovaps	xmm1, xmmword ptr [rip + 9690] # 0x5020 <vkUpdateDescriptorSets+0x5020>
    2a46: c5 f8 11 4a 58               	vmovups	xmmword ptr [rdx + 88], xmm1
    2a4b: 48 c7 42 68 00 00 00 00      	mov	qword ptr [rdx + 104], 0
    2a53: 48 8d 8c 24 60 02 00 00      	lea	rcx, [rsp + 608]
    2a5b: 48 89 4a 70                  	mov	qword ptr [rdx + 112], rcx
    2a5f: 48 c7 42 78 00 00 00 00      	mov	qword ptr [rdx + 120], 0
    2a67: 48 8b 4c 24 38               	mov	rcx, qword ptr [rsp + 56]
    2a6c: 48 89 8c 24 48 02 00 00      	mov	qword ptr [rsp + 584], rcx
    2a74: c5 f8 11 84 24 50 02 00 00   	vmovups	xmmword ptr [rsp + 592], xmm0
    2a7d: c7 82 80 00 00 00 23 00 00 00	mov	dword ptr [rdx + 128], 35
    2a87: 48 c7 82 88 00 00 00 00 00 00 00     	mov	qword ptr [rdx + 136], 0
    2a92: 48 89 82 90 00 00 00         	mov	qword ptr [rdx + 144], rax
    2a99: c5 f8 28 05 8f 25 00 00      	vmovaps	xmm0, xmmword ptr [rip + 9615] # 0x5030 <vkUpdateDescriptorSets+0x5030>
    2aa1: c5 f8 11 82 98 00 00 00      	vmovups	xmmword ptr [rdx + 152], xmm0
    2aa9: 48 c7 82 a8 00 00 00 00 00 00 00     	mov	qword ptr [rdx + 168], 0
    2ab4: 48 8d 84 24 48 02 00 00      	lea	rax, [rsp + 584]
    2abc: 48 89 82 b0 00 00 00         	mov	qword ptr [rdx + 176], rax
    2ac3: 48 c7 82 b8 00 00 00 00 00 00 00     	mov	qword ptr [rdx + 184], 0
    2ace: 49 8b 3f                     	mov	rdi, qword ptr [r15]
    2ad1: be 03 00 00 00               	mov	esi, 3
    2ad6: 48 89 94 24 88 00 00 00      	mov	qword ptr [rsp + 136], rdx
    2ade: 31 c9                        	xor	ecx, ecx
    2ae0: 45 31 c0                     	xor	r8d, r8d
    2ae3: e8 f8 f7 ff ff               	call	0x22e0 <vkUpdateDescriptorSets@plt>
    2ae8: c7 84 24 a0 00 00 00 27 00 00 00     	mov	dword ptr [rsp + 160], 39
    2af3: 48 c7 84 24 a8 00 00 00 00 00 00 00  	mov	qword ptr [rsp + 168], 0
    2aff: c7 84 24 b0 00 00 00 01 00 00 00     	mov	dword ptr [rsp + 176], 1
    2b0a: 8b 44 24 34                  	mov	eax, dword ptr [rsp + 52]
    2b0e: 89 84 24 b4 00 00 00         	mov	dword ptr [rsp + 180], eax
    2b15: 49 8b 3f                     	mov	rdi, qword ptr [r15]
    2b18: 48 8d b4 24 a0 00 00 00      	lea	rsi, [rsp + 160]
    2b20: 48 8d 4c 24 68               	lea	rcx, [rsp + 104]
    2b25: 31 d2                        	xor	edx, edx
    2b27: e8 c4 f5 ff ff               	call	0x20f0 <vkCreateCommandPool@plt>
    2b2c: 85 c0                        	test	eax, eax
    2b2e: 0f 85 c5 05 00 00            	jne	0x30f9 <nnRunTwoMatricesAndOutput+0xc79>
    2b34: c7 84 24 50 01 00 00 28 00 00 00     	mov	dword ptr [rsp + 336], 40
    2b3f: 48 c7 84 24 58 01 00 00 00 00 00 00  	mov	qword ptr [rsp + 344], 0
    2b4b: 48 8b 44 24 68               	mov	rax, qword ptr [rsp + 104]
    2b50: 48 89 84 24 60 01 00 00      	mov	qword ptr [rsp + 352], rax
    2b58: 4c 89 b4 24 68 01 00 00      	mov	qword ptr [rsp + 360], r14
    2b60: 49 8b 3f                     	mov	rdi, qword ptr [r15]
    2b63: 48 8d b4 24 50 01 00 00      	lea	rsi, [rsp + 336]
    2b6b: 4c 8d 74 24 18               	lea	r14, [rsp + 24]
    2b70: 4c 89 f2                     	mov	rdx, r14
    2b73: e8 48 f7 ff ff               	call	0x22c0 <vkAllocateCommandBuffers@plt>
    2b78: 85 c0                        	test	eax, eax
    2b7a: 0f 85 a3 05 00 00            	jne	0x3123 <nnRunTwoMatricesAndOutput+0xca3>
    2b80: c5 fc 10 05 f0 24 00 00      	vmovups	ymm0, ymmword ptr [rip + 9456] # 0x5078 <vkUpdateDescriptorSets+0x5078>
    2b88: c5 fc 11 84 24 c0 02 00 00   	vmovups	ymmword ptr [rsp + 704], ymm0
    2b91: 48 8b 7c 24 18               	mov	rdi, qword ptr [rsp + 24]
    2b96: 48 8d b4 24 c0 02 00 00      	lea	rsi, [rsp + 704]
    2b9e: c5 f8 77                     	vzeroupper
    2ba1: e8 ba f7 ff ff               	call	0x2360 <vkBeginCommandBuffer@plt>
    2ba6: 48 8b 7c 24 18               	mov	rdi, qword ptr [rsp + 24]
    2bab: 49 8b 57 28                  	mov	rdx, qword ptr [r15 + 40]
    2baf: be 01 00 00 00               	mov	esi, 1
    2bb4: e8 e7 f4 ff ff               	call	0x20a0 <vkCmdBindPipeline@plt>
    2bb9: 48 8b 7c 24 18               	mov	rdi, qword ptr [rsp + 24]
    2bbe: 48 8b 54 24 70               	mov	rdx, qword ptr [rsp + 112]
    2bc3: 4c 8d 4c 24 58               	lea	r9, [rsp + 88]
    2bc8: be 01 00 00 00               	mov	esi, 1
    2bcd: 31 c9                        	xor	ecx, ecx
    2bcf: 41 b8 01 00 00 00            	mov	r8d, 1
    2bd5: 6a 00                        	push	0
    2bd7: 6a 00                        	push	0
    2bd9: e8 82 f4 ff ff               	call	0x2060 <vkCmdBindDescriptorSets@plt>
    2bde: 48 83 c4 10                  	add	rsp, 16
    2be2: 48 8b 7c 24 18               	mov	rdi, qword ptr [rsp + 24]
    2be7: 44 89 e6                     	mov	esi, r12d
    2bea: ba 01 00 00 00               	mov	edx, 1
    2bef: b9 01 00 00 00               	mov	ecx, 1
    2bf4: e8 d7 f6 ff ff               	call	0x22d0 <vkCmdDispatch@plt>
    2bf9: 48 8b 7c 24 18               	mov	rdi, qword ptr [rsp + 24]
    2bfe: e8 8d f5 ff ff               	call	0x2190 <vkEndCommandBuffer@plt>
    2c03: 85 c0                        	test	eax, eax
    2c05: 0f 85 3d 05 00 00            	jne	0x3148 <nnRunTwoMatricesAndOutput+0xcc8>
    2c0b: 4c 89 ac 24 80 00 00 00      	mov	qword ptr [rsp + 128], r13
    2c13: 48 c7 44 24 28 00 00 00 00   	mov	qword ptr [rsp + 40], 0
    2c1c: 49 8b 3f                     	mov	rdi, qword ptr [r15]
    2c1f: 48 8b 74 24 08               	mov	rsi, qword ptr [rsp + 8]
    2c24: 4c 8d 4c 24 28               	lea	r9, [rsp + 40]
    2c29: 31 d2                        	xor	edx, edx
    2c2b: 48 c7 c1 ff ff ff ff         	mov	rcx, -1
    2c32: 45 31 c0                     	xor	r8d, r8d
    2c35: e8 16 f6 ff ff               	call	0x2250 <vkMapMemory@plt>
    2c3a: 85 c0                        	test	eax, eax
    2c3c: 0f 85 20 05 00 00            	jne	0x3162 <nnRunTwoMatricesAndOutput+0xce2>
    2c42: 48 8b 7c 24 28               	mov	rdi, qword ptr [rsp + 40]
    2c47: 4c 8b 6c 24 48               	mov	r13, qword ptr [rsp + 72]
    2c4c: 4e 8d 24 af                  	lea	r12, [rdi + 4*r13]
    2c50: 48 8b 84 24 90 00 00 00      	mov	rax, qword ptr [rsp + 144]
    2c58: 48 8b 30                     	mov	rsi, qword ptr [rax]
    2c5b: 48 8b 5c 24 50               	mov	rbx, qword ptr [rsp + 80]
    2c60: 48 89 da                     	mov	rdx, rbx
    2c63: e8 a8 f5 ff ff               	call	0x2210 <memcpy@plt>
    2c68: 48 8b 84 24 98 00 00 00      	mov	rax, qword ptr [rsp + 152]
    2c70: 48 8b 30                     	mov	rsi, qword ptr [rax]
    2c73: 4c 89 e7                     	mov	rdi, r12
    2c76: 48 89 da                     	mov	rdx, rbx
    2c79: e8 92 f5 ff ff               	call	0x2210 <memcpy@plt>
    2c7e: 49 8b 3f                     	mov	rdi, qword ptr [r15]
    2c81: 48 8b 74 24 08               	mov	rsi, qword ptr [rsp + 8]
    2c86: e8 b5 f4 ff ff               	call	0x2140 <vkUnmapMemory@plt>
    2c8b: c5 f8 57 c0                  	vxorps	xmm0, xmm0, xmm0
    2c8f: c5 fc 29 84 24 00 01 00 00   	vmovaps	ymmword ptr [rsp + 256], ymm0
    2c98: c5 fc 29 84 24 20 01 00 00   	vmovaps	ymmword ptr [rsp + 288], ymm0
    2ca1: 48 c7 84 24 40 01 00 00 00 00 00 00  	mov	qword ptr [rsp + 320], 0
    2cad: c7 84 24 00 01 00 00 04 00 00 00     	mov	dword ptr [rsp + 256], 4
    2cb8: c7 84 24 28 01 00 00 01 00 00 00     	mov	dword ptr [rsp + 296], 1
    2cc3: 4c 89 b4 24 30 01 00 00      	mov	qword ptr [rsp + 304], r14
    2ccb: 49 8b 7f 20                  	mov	rdi, qword ptr [r15 + 32]
    2ccf: 48 8d 94 24 00 01 00 00      	lea	rdx, [rsp + 256]
    2cd7: be 01 00 00 00               	mov	esi, 1
    2cdc: 31 c9                        	xor	ecx, ecx
    2cde: c5 f8 77                     	vzeroupper
    2ce1: e8 9a f4 ff ff               	call	0x2180 <vkQueueSubmit@plt>
    2ce6: 49 8b 7f 20                  	mov	rdi, qword ptr [r15 + 32]
    2cea: e8 81 f3 ff ff               	call	0x2070 <vkQueueWaitIdle@plt>
    2cef: 48 c7 44 24 28 00 00 00 00   	mov	qword ptr [rsp + 40], 0
    2cf8: 49 8b 3f                     	mov	rdi, qword ptr [r15]
    2cfb: 48 8b 74 24 08               	mov	rsi, qword ptr [rsp + 8]
    2d00: 4c 8d 4c 24 28               	lea	r9, [rsp + 40]
    2d05: 31 d2                        	xor	edx, edx
    2d07: 48 c7 c1 ff ff ff ff         	mov	rcx, -1
    2d0e: 45 31 c0                     	xor	r8d, r8d
    2d11: e8 3a f5 ff ff               	call	0x2250 <vkMapMemory@plt>
    2d16: 85 c0                        	test	eax, eax
    2d18: 0f 85 72 04 00 00            	jne	0x3190 <nnRunTwoMatricesAndOutput+0xd10>
    2d1e: 4b 8d 34 ac                  	lea	rsi, [r12 + 4*r13]
    2d22: 4c 8b 64 24 60               	mov	r12, qword ptr [rsp + 96]
    2d27: 49 8b 3c 24                  	mov	rdi, qword ptr [r12]
    2d2b: 48 89 da                     	mov	rdx, rbx
    2d2e: e8 dd f4 ff ff               	call	0x2210 <memcpy@plt>
    2d33: 48 8b 1d be 42 00 00         	mov	rbx, qword ptr [rip + 17086] # 0x6ff8 <vkUpdateDescriptorSets+0x6ff8>
    2d3a: 48 8b 3b                     	mov	rdi, qword ptr [rbx]
    2d3d: 41 8b 54 24 08               	mov	edx, dword ptr [r12 + 8]
    2d42: 41 8b 4c 24 0c               	mov	ecx, dword ptr [r12 + 12]
    2d47: 48 8d 35 f2 22 00 00         	lea	rsi, [rip + 8946]       # 0x5040 <vkUpdateDescriptorSets+0x5040>
    2d4e: 45 31 ff                     	xor	r15d, r15d
    2d51: 31 c0                        	xor	eax, eax
    2d53: e8 88 f4 ff ff               	call	0x21e0 <fprintf@plt>
    2d58: 48 8b 33                     	mov	rsi, qword ptr [rbx]
    2d5b: bf 0a 00 00 00               	mov	edi, 10
    2d60: e8 3b f4 ff ff               	call	0x21a0 <fputc@plt>
    2d65: 41 83 7c 24 08 00            	cmp	dword ptr [r12 + 8], 0
    2d6b: 0f 84 c9 00 00 00            	je	0x2e3a <nnRunTwoMatricesAndOutput+0x9ba>
    2d71: 4c 8d 35 de 22 00 00         	lea	r14, [rip + 8926]       # 0x5056 <vkUpdateDescriptorSets+0x5056>
    2d78: eb 7f                        	jmp	0x2df9 <nnRunTwoMatricesAndOutput+0x979>
    2d7a: 66 0f 1f 44 00 00            	nop	word ptr [rax + rax]
    2d80: 49 8b 34 24                  	mov	rsi, qword ptr [r12]
    2d84: bf 0a 00 00 00               	mov	edi, 10
    2d89: e8 12 f4 ff ff               	call	0x21a0 <fputc@plt>
    2d8e: 41 83 c5 01                  	add	r13d, 1
    2d92: 44 3b 6b 08                  	cmp	r13d, dword ptr [rbx + 8]
    2d96: 0f 83 55 f7 ff ff            	jae	0x24f1 <nnRunTwoMatricesAndOutput+0x71>
    2d9c: 8b 43 0c                     	mov	eax, dword ptr [rbx + 12]
    2d9f: 85 c0                        	test	eax, eax
    2da1: 74 dd                        	je	0x2d80 <nnRunTwoMatricesAndOutput+0x900>
    2da3: 45 31 ff                     	xor	r15d, r15d
    2da6: 49 8b 3c 24                  	mov	rdi, qword ptr [r12]
    2daa: 48 8b 0b                     	mov	rcx, qword ptr [rbx]
    2dad: 41 0f af c5                  	imul	eax, r13d
    2db1: 44 01 f8                     	add	eax, r15d
    2db4: c5 fa 10 04 81               	vmovss	xmm0, dword ptr [rcx + 4*rax] # xmm0 = mem[0],zero,zero,zero
    2db9: c5 fa 5a c0                  	vcvtss2sd	xmm0, xmm0, xmm0
    2dbd: 48 8d 35 92 22 00 00         	lea	rsi, [rip + 8850]       # 0x5056 <vkUpdateDescriptorSets+0x5056>
    2dc4: b0 01                        	mov	al, 1
    2dc6: e8 15 f4 ff ff               	call	0x21e0 <fprintf@plt>
    2dcb: 41 83 c7 01                  	add	r15d, 1
    2dcf: 8b 43 0c                     	mov	eax, dword ptr [rbx + 12]
    2dd2: 41 39 c7                     	cmp	r15d, eax
    2dd5: 72 cf                        	jb	0x2da6 <nnRunTwoMatricesAndOutput+0x926>
    2dd7: eb a7                        	jmp	0x2d80 <nnRunTwoMatricesAndOutput+0x900>
    2dd9: 0f 1f 80 00 00 00 00         	nop	dword ptr [rax]
    2de0: 49 8b 75 00                  	mov	rsi, qword ptr [r13]
    2de4: bf 0a 00 00 00               	mov	edi, 10
    2de9: e8 b2 f3 ff ff               	call	0x21a0 <fputc@plt>
    2dee: 41 83 c7 01                  	add	r15d, 1
    2df2: 45 3b 7c 24 08               	cmp	r15d, dword ptr [r12 + 8]
    2df7: 73 41                        	jae	0x2e3a <nnRunTwoMatricesAndOutput+0x9ba>
    2df9: 41 8b 44 24 0c               	mov	eax, dword ptr [r12 + 12]
    2dfe: 85 c0                        	test	eax, eax
    2e00: 4c 8b 2d f1 41 00 00         	mov	r13, qword ptr [rip + 16881] # 0x6ff8 <vkUpdateDescriptorSets+0x6ff8>
    2e07: 74 d7                        	je	0x2de0 <nnRunTwoMatricesAndOutput+0x960>
    2e09: 31 db                        	xor	ebx, ebx
    2e0b: 49 8b 7d 00                  	mov	rdi, qword ptr [r13]
    2e0f: 49 8b 0c 24                  	mov	rcx, qword ptr [r12]
    2e13: 41 0f af c7                  	imul	eax, r15d
    2e17: 01 d8                        	add	eax, ebx
    2e19: c5 fa 10 04 81               	vmovss	xmm0, dword ptr [rcx + 4*rax] # xmm0 = mem[0],zero,zero,zero
    2e1e: c5 fa 5a c0                  	vcvtss2sd	xmm0, xmm0, xmm0
    2e22: 4c 89 f6                     	mov	rsi, r14
    2e25: b0 01                        	mov	al, 1
    2e27: e8 b4 f3 ff ff               	call	0x21e0 <fprintf@plt>
    2e2c: 83 c3 01                     	add	ebx, 1
    2e2f: 41 8b 44 24 0c               	mov	eax, dword ptr [r12 + 12]
    2e34: 39 c3                        	cmp	ebx, eax
    2e36: 72 d3                        	jb	0x2e0b <nnRunTwoMatricesAndOutput+0x98b>
    2e38: eb a6                        	jmp	0x2de0 <nnRunTwoMatricesAndOutput+0x960>
    2e3a: 48 8b 05 b7 41 00 00         	mov	rax, qword ptr [rip + 16823] # 0x6ff8 <vkUpdateDescriptorSets+0x6ff8>
    2e41: 48 8b 30                     	mov	rsi, qword ptr [rax]
    2e44: bf 0a 00 00 00               	mov	edi, 10
    2e49: e8 52 f3 ff ff               	call	0x21a0 <fputc@plt>
    2e4e: 48 8b 44 24 10               	mov	rax, qword ptr [rsp + 16]
    2e53: 48 8b 38                     	mov	rdi, qword ptr [rax]
    2e56: 48 8b 74 24 08               	mov	rsi, qword ptr [rsp + 8]
    2e5b: e8 e0 f2 ff ff               	call	0x2140 <vkUnmapMemory@plt>
    2e60: 48 8b bc 24 80 00 00 00      	mov	rdi, qword ptr [rsp + 128]
    2e68: e8 e3 f1 ff ff               	call	0x2050 <free@plt>
    2e6d: 48 8b bc 24 88 00 00 00      	mov	rdi, qword ptr [rsp + 136]
    2e75: e8 d6 f1 ff ff               	call	0x2050 <free@plt>
    2e7a: 48 8d 65 d8                  	lea	rsp, [rbp - 40]
    2e7e: 5b                           	pop	rbx
    2e7f: 41 5c                        	pop	r12
    2e81: 41 5d                        	pop	r13
    2e83: 41 5e                        	pop	r14
    2e85: 41 5f                        	pop	r15
    2e87: 5d                           	pop	rbp
    2e88: c3                           	ret
    2e89: 4c 8d 2d c6 21 00 00         	lea	r13, [rip + 8646]       # 0x5056 <vkUpdateDescriptorSets+0x5056>
    2e90: eb 2a                        	jmp	0x2ebc <nnRunTwoMatricesAndOutput+0xa3c>
    2e92: 66 2e 0f 1f 84 00 00 00 00 00	nop	word ptr cs:[rax + rax]
    2e9c: 0f 1f 40 00                  	nop	dword ptr [rax]
    2ea0: 49 8b 34 24                  	mov	rsi, qword ptr [r12]
    2ea4: bf 0a 00 00 00               	mov	edi, 10
    2ea9: e8 f2 f2 ff ff               	call	0x21a0 <fputc@plt>
    2eae: 41 83 c7 01                  	add	r15d, 1
    2eb2: 45 3b 7e 08                  	cmp	r15d, dword ptr [r14 + 8]
    2eb6: 0f 83 81 f6 ff ff            	jae	0x253d <nnRunTwoMatricesAndOutput+0xbd>
    2ebc: 41 8b 46 0c                  	mov	eax, dword ptr [r14 + 12]
    2ec0: 85 c0                        	test	eax, eax
    2ec2: 74 dc                        	je	0x2ea0 <nnRunTwoMatricesAndOutput+0xa20>
    2ec4: 31 db                        	xor	ebx, ebx
    2ec6: 49 8b 3c 24                  	mov	rdi, qword ptr [r12]
    2eca: 49 8b 0e                     	mov	rcx, qword ptr [r14]
    2ecd: 41 0f af c7                  	imul	eax, r15d
    2ed1: 01 d8                        	add	eax, ebx
    2ed3: c5 fa 10 04 81               	vmovss	xmm0, dword ptr [rcx + 4*rax] # xmm0 = mem[0],zero,zero,zero
    2ed8: c5 fa 5a c0                  	vcvtss2sd	xmm0, xmm0, xmm0
    2edc: 4c 89 ee                     	mov	rsi, r13
    2edf: b0 01                        	mov	al, 1
    2ee1: e8 fa f2 ff ff               	call	0x21e0 <fprintf@plt>
    2ee6: 83 c3 01                     	add	ebx, 1
    2ee9: 41 8b 46 0c                  	mov	eax, dword ptr [r14 + 12]
    2eed: 39 c3                        	cmp	ebx, eax
    2eef: 72 d5                        	jb	0x2ec6 <nnRunTwoMatricesAndOutput+0xa46>
    2ef1: eb ad                        	jmp	0x2ea0 <nnRunTwoMatricesAndOutput+0xa20>
    2ef3: 4c 8d 2d 5c 21 00 00         	lea	r13, [rip + 8540]       # 0x5056 <vkUpdateDescriptorSets+0x5056>
    2efa: eb 20                        	jmp	0x2f1c <nnRunTwoMatricesAndOutput+0xa9c>
    2efc: 0f 1f 40 00                  	nop	dword ptr [rax]
    2f00: 49 8b 36                     	mov	rsi, qword ptr [r14]
    2f03: bf 0a 00 00 00               	mov	edi, 10
    2f08: e8 93 f2 ff ff               	call	0x21a0 <fputc@plt>
    2f0d: 41 83 c7 01                  	add	r15d, 1
    2f11: 45 3b 7c 24 08               	cmp	r15d, dword ptr [r12 + 8]
    2f16: 0f 83 77 f6 ff ff            	jae	0x2593 <nnRunTwoMatricesAndOutput+0x113>
    2f1c: 41 8b 44 24 0c               	mov	eax, dword ptr [r12 + 12]
    2f21: 85 c0                        	test	eax, eax
    2f23: 4c 8b 35 ce 40 00 00         	mov	r14, qword ptr [rip + 16590] # 0x6ff8 <vkUpdateDescriptorSets+0x6ff8>
    2f2a: 74 d4                        	je	0x2f00 <nnRunTwoMatricesAndOutput+0xa80>
    2f2c: 31 db                        	xor	ebx, ebx
    2f2e: 49 8b 3e                     	mov	rdi, qword ptr [r14]
    2f31: 49 8b 0c 24                  	mov	rcx, qword ptr [r12]
    2f35: 41 0f af c7                  	imul	eax, r15d
    2f39: 01 d8                        	add	eax, ebx
    2f3b: c5 fa 10 04 81               	vmovss	xmm0, dword ptr [rcx + 4*rax] # xmm0 = mem[0],zero,zero,zero
    2f40: c5 fa 5a c0                  	vcvtss2sd	xmm0, xmm0, xmm0
    2f44: 4c 89 ee                     	mov	rsi, r13
    2f47: b0 01                        	mov	al, 1
    2f49: e8 92 f2 ff ff               	call	0x21e0 <fprintf@plt>
    2f4e: 83 c3 01                     	add	ebx, 1
    2f51: 41 8b 44 24 0c               	mov	eax, dword ptr [r12 + 12]
    2f56: 39 c3                        	cmp	ebx, eax
    2f58: 72 d4                        	jb	0x2f2e <nnRunTwoMatricesAndOutput+0xaae>
    2f5a: eb a4                        	jmp	0x2f00 <nnRunTwoMatricesAndOutput+0xa80>
    2f5c: 48 8b 3b                     	mov	rdi, qword ptr [rbx]
    2f5f: 48 8d b4 24 90 01 00 00      	lea	rsi, [rsp + 400]
    2f67: 48 8d 4c 24 78               	lea	rcx, [rsp + 120]
    2f6c: 31 d2                        	xor	edx, edx
    2f6e: e8 cd f0 ff ff               	call	0x2040 <vkCreateDescriptorSetLayout@plt>
    2f73: 48 8d 3d e0 20 00 00         	lea	rdi, [rip + 8416]       # 0x505a <vkUpdateDescriptorSets+0x505a>
    2f7a: 89 c6                        	mov	esi, eax
    2f7c: ba 24 00 00 00               	mov	edx, 36
    2f81: e9 3b 02 00 00               	jmp	0x31c1 <nnRunTwoMatricesAndOutput+0xd41>
    2f86: 48 8b 3b                     	mov	rdi, qword ptr [rbx]
    2f89: 48 8d b4 24 c8 00 00 00      	lea	rsi, [rsp + 200]
    2f91: 48 8d 4c 24 20               	lea	rcx, [rsp + 32]
    2f96: 31 d2                        	xor	edx, edx
    2f98: e8 d3 f2 ff ff               	call	0x2270 <vkCreateBuffer@plt>
    2f9d: 48 8d 3d b6 20 00 00         	lea	rdi, [rip + 8374]       # 0x505a <vkUpdateDescriptorSets+0x505a>
    2fa4: 89 c6                        	mov	esi, eax
    2fa6: ba 30 00 00 00               	mov	edx, 48
    2fab: e9 11 02 00 00               	jmp	0x31c1 <nnRunTwoMatricesAndOutput+0xd41>
    2fb0: 48 8b 3b                     	mov	rdi, qword ptr [rbx]
    2fb3: 48 8d b4 24 c8 00 00 00      	lea	rsi, [rsp + 200]
    2fbb: 48 8d 4c 24 40               	lea	rcx, [rsp + 64]
    2fc0: 31 d2                        	xor	edx, edx
    2fc2: e8 a9 f2 ff ff               	call	0x2270 <vkCreateBuffer@plt>
    2fc7: 48 8d 3d 8c 20 00 00         	lea	rdi, [rip + 8332]       # 0x505a <vkUpdateDescriptorSets+0x505a>
    2fce: 89 c6                        	mov	esi, eax
    2fd0: ba 33 00 00 00               	mov	edx, 51
    2fd5: e9 e7 01 00 00               	jmp	0x31c1 <nnRunTwoMatricesAndOutput+0xd41>
    2fda: 48 8b 3b                     	mov	rdi, qword ptr [rbx]
    2fdd: 48 8d b4 24 c8 00 00 00      	lea	rsi, [rsp + 200]
    2fe5: 48 8d 4c 24 38               	lea	rcx, [rsp + 56]
    2fea: 31 d2                        	xor	edx, edx
    2fec: e8 7f f2 ff ff               	call	0x2270 <vkCreateBuffer@plt>
    2ff1: 48 8d 3d 62 20 00 00         	lea	rdi, [rip + 8290]       # 0x505a <vkUpdateDescriptorSets+0x505a>
    2ff8: 89 c6                        	mov	esi, eax
    2ffa: ba 36 00 00 00               	mov	edx, 54
    2fff: e9 bd 01 00 00               	jmp	0x31c1 <nnRunTwoMatricesAndOutput+0xd41>
    3004: 48 8d b4 24 70 01 00 00      	lea	rsi, [rsp + 368]
    300c: 48 8d 4c 24 08               	lea	rcx, [rsp + 8]
    3011: 31 d2                        	xor	edx, edx
    3013: e8 18 f2 ff ff               	call	0x2230 <vkAllocateMemory@plt>
    3018: 48 8d 3d 3b 20 00 00         	lea	rdi, [rip + 8251]       # 0x505a <vkUpdateDescriptorSets+0x505a>
    301f: 89 c6                        	mov	esi, eax
    3021: ba 4f 00 00 00               	mov	edx, 79
    3026: e9 96 01 00 00               	jmp	0x31c1 <nnRunTwoMatricesAndOutput+0xd41>
    302b: 48 8b 44 24 10               	mov	rax, qword ptr [rsp + 16]
    3030: 48 8b 38                     	mov	rdi, qword ptr [rax]
    3033: 48 8b 74 24 20               	mov	rsi, qword ptr [rsp + 32]
    3038: 48 8b 54 24 08               	mov	rdx, qword ptr [rsp + 8]
    303d: 31 c9                        	xor	ecx, ecx
    303f: e8 3c f3 ff ff               	call	0x2380 <vkBindBufferMemory@plt>
    3044: 48 8d 3d 0f 20 00 00         	lea	rdi, [rip + 8207]       # 0x505a <vkUpdateDescriptorSets+0x505a>
    304b: 89 c6                        	mov	esi, eax
    304d: ba 52 00 00 00               	mov	edx, 82
    3052: e9 6a 01 00 00               	jmp	0x31c1 <nnRunTwoMatricesAndOutput+0xd41>
    3057: 49 8b 3f                     	mov	rdi, qword ptr [r15]
    305a: 48 8b 74 24 40               	mov	rsi, qword ptr [rsp + 64]
    305f: 48 8b 54 24 08               	mov	rdx, qword ptr [rsp + 8]
    3064: 48 89 d9                     	mov	rcx, rbx
    3067: e8 14 f3 ff ff               	call	0x2380 <vkBindBufferMemory@plt>
    306c: 48 8d 3d e7 1f 00 00         	lea	rdi, [rip + 8167]       # 0x505a <vkUpdateDescriptorSets+0x505a>
    3073: 89 c6                        	mov	esi, eax
    3075: ba 55 00 00 00               	mov	edx, 85
    307a: e9 42 01 00 00               	jmp	0x31c1 <nnRunTwoMatricesAndOutput+0xd41>
    307f: 49 8b 3f                     	mov	rdi, qword ptr [r15]
    3082: 48 8b 74 24 38               	mov	rsi, qword ptr [rsp + 56]
    3087: 48 8b 54 24 08               	mov	rdx, qword ptr [rsp + 8]
    308c: 48 89 d9                     	mov	rcx, rbx
    308f: e8 ec f2 ff ff               	call	0x2380 <vkBindBufferMemory@plt>
    3094: 48 8d 3d bf 1f 00 00         	lea	rdi, [rip + 8127]       # 0x505a <vkUpdateDescriptorSets+0x505a>
    309b: 89 c6                        	mov	esi, eax
    309d: ba 58 00 00 00               	mov	edx, 88
    30a2: e9 1a 01 00 00               	jmp	0x31c1 <nnRunTwoMatricesAndOutput+0xd41>
    30a7: 49 8b 3f                     	mov	rdi, qword ptr [r15]
    30aa: 48 8d b4 24 d8 01 00 00      	lea	rsi, [rsp + 472]
    30b2: 48 8d 4c 24 70               	lea	rcx, [rsp + 112]
    30b7: 31 d2                        	xor	edx, edx
    30b9: e8 c2 f1 ff ff               	call	0x2280 <vkCreatePipelineLayout@plt>
    30be: 48 8d 3d 95 1f 00 00         	lea	rdi, [rip + 8085]       # 0x505a <vkUpdateDescriptorSets+0x505a>
    30c5: 89 c6                        	mov	esi, eax
    30c7: ba 65 00 00 00               	mov	edx, 101
    30cc: e9 f0 00 00 00               	jmp	0x31c1 <nnRunTwoMatricesAndOutput+0xd41>
    30d1: 49 8b 3f                     	mov	rdi, qword ptr [r15]
    30d4: 48 8d b4 24 b0 01 00 00      	lea	rsi, [rsp + 432]
    30dc: 48 8d 54 24 58               	lea	rdx, [rsp + 88]
    30e1: e8 7a f1 ff ff               	call	0x2260 <vkAllocateDescriptorSets@plt>
    30e6: 48 8d 3d 6d 1f 00 00         	lea	rdi, [rip + 8045]       # 0x505a <vkUpdateDescriptorSets+0x505a>
    30ed: 89 c6                        	mov	esi, eax
    30ef: ba 7c 00 00 00               	mov	edx, 124
    30f4: e9 c8 00 00 00               	jmp	0x31c1 <nnRunTwoMatricesAndOutput+0xd41>
    30f9: 49 8b 3f                     	mov	rdi, qword ptr [r15]
    30fc: 48 8d b4 24 a0 00 00 00      	lea	rsi, [rsp + 160]
    3104: 48 8d 4c 24 68               	lea	rcx, [rsp + 104]
    3109: 31 d2                        	xor	edx, edx
    310b: e8 e0 ef ff ff               	call	0x20f0 <vkCreateCommandPool@plt>
    3110: 48 8d 3d 43 1f 00 00         	lea	rdi, [rip + 8003]       # 0x505a <vkUpdateDescriptorSets+0x505a>
    3117: 89 c6                        	mov	esi, eax
    3119: ba ac 00 00 00               	mov	edx, 172
    311e: e9 9e 00 00 00               	jmp	0x31c1 <nnRunTwoMatricesAndOutput+0xd41>
    3123: 49 8b 3f                     	mov	rdi, qword ptr [r15]
    3126: 48 8d b4 24 50 01 00 00      	lea	rsi, [rsp + 336]
    312e: 48 8d 54 24 18               	lea	rdx, [rsp + 24]
    3133: e8 88 f1 ff ff               	call	0x22c0 <vkAllocateCommandBuffers@plt>
    3138: 48 8d 3d 1b 1f 00 00         	lea	rdi, [rip + 7963]       # 0x505a <vkUpdateDescriptorSets+0x505a>
    313f: 89 c6                        	mov	esi, eax
    3141: ba b5 00 00 00               	mov	edx, 181
    3146: eb 79                        	jmp	0x31c1 <nnRunTwoMatricesAndOutput+0xd41>
    3148: 48 8b 7c 24 18               	mov	rdi, qword ptr [rsp + 24]
    314d: e8 3e f0 ff ff               	call	0x2190 <vkEndCommandBuffer@plt>
    3152: 48 8d 3d 01 1f 00 00         	lea	rdi, [rip + 7937]       # 0x505a <vkUpdateDescriptorSets+0x505a>
    3159: 89 c6                        	mov	esi, eax
    315b: ba c4 00 00 00               	mov	edx, 196
    3160: eb 5f                        	jmp	0x31c1 <nnRunTwoMatricesAndOutput+0xd41>
    3162: 49 8b 3f                     	mov	rdi, qword ptr [r15]
    3165: 48 8b 74 24 08               	mov	rsi, qword ptr [rsp + 8]
    316a: 4c 8d 4c 24 28               	lea	r9, [rsp + 40]
    316f: 31 d2                        	xor	edx, edx
    3171: 48 c7 c1 ff ff ff ff         	mov	rcx, -1
    3178: 45 31 c0                     	xor	r8d, r8d
    317b: e8 d0 f0 ff ff               	call	0x2250 <vkMapMemory@plt>
    3180: 48 8d 3d d3 1e 00 00         	lea	rdi, [rip + 7891]       # 0x505a <vkUpdateDescriptorSets+0x505a>
    3187: 89 c6                        	mov	esi, eax
    3189: ba c7 00 00 00               	mov	edx, 199
    318e: eb 31                        	jmp	0x31c1 <nnRunTwoMatricesAndOutput+0xd41>
    3190: 48 8b 44 24 10               	mov	rax, qword ptr [rsp + 16]
    3195: 48 8b 38                     	mov	rdi, qword ptr [rax]
    3198: 48 8b 74 24 08               	mov	rsi, qword ptr [rsp + 8]
    319d: 4c 8d 4c 24 28               	lea	r9, [rsp + 40]
    31a2: 31 d2                        	xor	edx, edx
    31a4: 48 c7 c1 ff ff ff ff         	mov	rcx, -1
    31ab: 45 31 c0                     	xor	r8d, r8d
    31ae: e8 9d f0 ff ff               	call	0x2250 <vkMapMemory@plt>
    31b3: 48 8d 3d a0 1e 00 00         	lea	rdi, [rip + 7840]       # 0x505a <vkUpdateDescriptorSets+0x505a>
    31ba: 89 c6                        	mov	esi, eax
    31bc: ba dc 00 00 00               	mov	edx, 220
    31c1: 31 c0                        	xor	eax, eax
    31c3: e8 38 ef ff ff               	call	0x2100 <printf@plt>
    31c8: 31 ff                        	xor	edi, edi
    31ca: e8 61 f1 ff ff               	call	0x2330 <exit@plt>
    31cf: 90                           	nop

00000000000031d0 <nnValidCrossCorrelationCpu>:
    31d0: 55                           	push	rbp
    31d1: 41 57                        	push	r15
    31d3: 41 56                        	push	r14
    31d5: 41 55                        	push	r13
    31d7: 41 54                        	push	r12
    31d9: 53                           	push	rbx
    31da: 8b 42 08                     	mov	eax, dword ptr [rdx + 8]
    31dd: 89 44 24 d0                  	mov	dword ptr [rsp - 48], eax
    31e1: 85 c0                        	test	eax, eax
    31e3: 0f 84 89 01 00 00            	je	0x3372 <nnValidCrossCorrelationCpu+0x1a2>
    31e9: 8b 42 0c                     	mov	eax, dword ptr [rdx + 12]
    31ec: 48 89 44 24 e0               	mov	qword ptr [rsp - 32], rax
    31f1: 48 85 c0                     	test	rax, rax
    31f4: 0f 84 78 01 00 00            	je	0x3372 <nnValidCrossCorrelationCpu+0x1a2>
    31fa: 8b 46 08                     	mov	eax, dword ptr [rsi + 8]
    31fd: 89 44 24 dc                  	mov	dword ptr [rsp - 36], eax
    3201: 85 c0                        	test	eax, eax
    3203: 0f 84 69 01 00 00            	je	0x3372 <nnValidCrossCorrelationCpu+0x1a2>
    3209: 44 8b 5e 0c                  	mov	r11d, dword ptr [rsi + 12]
    320d: 4d 85 db                     	test	r11, r11
    3210: 0f 84 5c 01 00 00            	je	0x3372 <nnValidCrossCorrelationCpu+0x1a2>
    3216: 48 8b 07                     	mov	rax, qword ptr [rdi]
    3219: 8b 4f 0c                     	mov	ecx, dword ptr [rdi + 12]
    321c: 89 4c 24 cc                  	mov	dword ptr [rsp - 52], ecx
    3220: 48 8b 36                     	mov	rsi, qword ptr [rsi]
    3223: 48 8b 12                     	mov	rdx, qword ptr [rdx]
    3226: 44 89 d9                     	mov	ecx, r11d
    3229: 83 e1 fe                     	and	ecx, -2
    322c: 31 ed                        	xor	ebp, ebp
    322e: 41 bc 01 00 00 00            	mov	r12d, 1
    3234: eb 26                        	jmp	0x325c <nnValidCrossCorrelationCpu+0x8c>
    3236: 66 2e 0f 1f 84 00 00 00 00 00	nop	word ptr cs:[rax + rax]
    3240: 48 8b 6c 24 e8               	mov	rbp, qword ptr [rsp - 24]
    3245: 83 c5 01                     	add	ebp, 1
    3248: 44 8b 64 24 d4               	mov	r12d, dword ptr [rsp - 44]
    324d: 44 03 64 24 cc               	add	r12d, dword ptr [rsp - 52]
    3252: 3b 6c 24 d0                  	cmp	ebp, dword ptr [rsp - 48]
    3256: 0f 84 16 01 00 00            	je	0x3372 <nnValidCrossCorrelationCpu+0x1a2>
    325c: 48 8b 7c 24 e0               	mov	rdi, qword ptr [rsp - 32]
    3261: 41 89 f8                     	mov	r8d, edi
    3264: 48 89 ef                     	mov	rdi, rbp
    3267: 48 89 6c 24 e8               	mov	qword ptr [rsp - 24], rbp
    326c: 44 0f af c5                  	imul	r8d, ebp
    3270: 4c 89 44 24 f8               	mov	qword ptr [rsp - 8], r8
    3275: 44 89 64 24 d4               	mov	dword ptr [rsp - 44], r12d
    327a: 31 ed                        	xor	ebp, ebp
    327c: eb 1b                        	jmp	0x3299 <nnValidCrossCorrelationCpu+0xc9>
    327e: 66 90                        	nop
    3280: 48 8b 6c 24 f0               	mov	rbp, qword ptr [rsp - 16]
    3285: 48 83 c5 01                  	add	rbp, 1
    3289: 44 8b 64 24 d8               	mov	r12d, dword ptr [rsp - 40]
    328e: 41 83 c4 01                  	add	r12d, 1
    3292: 48 3b 6c 24 e0               	cmp	rbp, qword ptr [rsp - 32]
    3297: 74 a7                        	je	0x3240 <nnValidCrossCorrelationCpu+0x70>
    3299: 48 8b 7c 24 f8               	mov	rdi, qword ptr [rsp - 8]
    329e: 48 89 6c 24 f0               	mov	qword ptr [rsp - 16], rbp
    32a3: 8d 1c 2f                     	lea	ebx, [rdi + rbp]
    32a6: c5 fa 10 04 9a               	vmovss	xmm0, dword ptr [rdx + 4*rbx] # xmm0 = mem[0],zero,zero,zero
    32ab: 45 31 c0                     	xor	r8d, r8d
    32ae: 41 be 01 00 00 00            	mov	r14d, 1
    32b4: 44 89 64 24 d8               	mov	dword ptr [rsp - 40], r12d
    32b9: eb 18                        	jmp	0x32d3 <nnValidCrossCorrelationCpu+0x103>
    32bb: 0f 1f 44 00 00               	nop	dword ptr [rax + rax]
    32c0: 41 83 c0 01                  	add	r8d, 1
    32c4: 44 03 64 24 cc               	add	r12d, dword ptr [rsp - 52]
    32c9: 45 01 de                     	add	r14d, r11d
    32cc: 44 3b 44 24 dc               	cmp	r8d, dword ptr [rsp - 36]
    32d1: 74 ad                        	je	0x3280 <nnValidCrossCorrelationCpu+0xb0>
    32d3: 41 83 fb 01                  	cmp	r11d, 1
    32d7: 75 07                        	jne	0x32e0 <nnValidCrossCorrelationCpu+0x110>
    32d9: 45 31 ff                     	xor	r15d, r15d
    32dc: eb 54                        	jmp	0x3332 <nnValidCrossCorrelationCpu+0x162>
    32de: 66 90                        	nop
    32e0: 45 89 f1                     	mov	r9d, r14d
    32e3: 45 89 e5                     	mov	r13d, r12d
    32e6: 45 31 ff                     	xor	r15d, r15d
    32e9: 0f 1f 80 00 00 00 00         	nop	dword ptr [rax]
    32f0: 41 8d 6d ff                  	lea	ebp, [r13 - 1]
    32f4: 45 8d 51 ff                  	lea	r10d, [r9 - 1]
    32f8: c4 a1 7a 10 0c 96            	vmovss	xmm1, dword ptr [rsi + 4*r10] # xmm1 = mem[0],zero,zero,zero
    32fe: c4 e3 71 6a 04 a8 00         	vfmaddss	xmm0, xmm1, dword ptr [rax + 4*rbp], xmm0 # xmm0 = (xmm1 * mem) + xmm0
    3305: c5 fa 11 04 9a               	vmovss	dword ptr [rdx + 4*rbx], xmm0
    330a: 44 89 ed                     	mov	ebp, r13d
    330d: 44 89 cf                     	mov	edi, r9d
    3310: c5 fa 10 0c be               	vmovss	xmm1, dword ptr [rsi + 4*rdi] # xmm1 = mem[0],zero,zero,zero
    3315: c4 e3 71 6a 04 a8 00         	vfmaddss	xmm0, xmm1, dword ptr [rax + 4*rbp], xmm0 # xmm0 = (xmm1 * mem) + xmm0
    331c: c5 fa 11 04 9a               	vmovss	dword ptr [rdx + 4*rbx], xmm0
    3321: 49 83 c7 02                  	add	r15, 2
    3325: 41 83 c5 02                  	add	r13d, 2
    3329: 41 83 c1 02                  	add	r9d, 2
    332d: 4c 39 f9                     	cmp	rcx, r15
    3330: 75 be                        	jne	0x32f0 <nnValidCrossCorrelationCpu+0x120>
    3332: 41 f6 c3 01                  	test	r11b, 1
    3336: 74 88                        	je	0x32c0 <nnValidCrossCorrelationCpu+0xf0>
    3338: 48 8b 7c 24 e8               	mov	rdi, qword ptr [rsp - 24]
    333d: 45 8d 0c 38                  	lea	r9d, [r8 + rdi]
    3341: 44 0f af 4c 24 cc            	imul	r9d, dword ptr [rsp - 52]
    3347: 44 89 dd                     	mov	ebp, r11d
    334a: 41 0f af e8                  	imul	ebp, r8d
    334e: 48 8b 7c 24 f0               	mov	rdi, qword ptr [rsp - 16]
    3353: 44 01 ff                     	add	edi, r15d
    3356: 41 01 f9                     	add	r9d, edi
    3359: 44 01 fd                     	add	ebp, r15d
    335c: c5 fa 10 0c ae               	vmovss	xmm1, dword ptr [rsi + 4*rbp] # xmm1 = mem[0],zero,zero,zero
    3361: c4 a3 71 6a 04 88 00         	vfmaddss	xmm0, xmm1, dword ptr [rax + 4*r9], xmm0 # xmm0 = (xmm1 * mem) + xmm0
    3368: c5 fa 11 04 9a               	vmovss	dword ptr [rdx + 4*rbx], xmm0
    336d: e9 4e ff ff ff               	jmp	0x32c0 <nnValidCrossCorrelationCpu+0xf0>
    3372: 5b                           	pop	rbx
    3373: 41 5c                        	pop	r12
    3375: 41 5d                        	pop	r13
    3377: 41 5e                        	pop	r14
    3379: 41 5f                        	pop	r15
    337b: 5d                           	pop	rbp
    337c: c3                           	ret
    337d: 0f 1f 00                     	nop	dword ptr [rax]

0000000000003380 <nnValidCrossCorrelationGpu>:
    3380: 55                           	push	rbp
    3381: 48 89 e5                     	mov	rbp, rsp
    3384: 41 57                        	push	r15
    3386: 41 56                        	push	r14
    3388: 41 55                        	push	r13
    338a: 41 54                        	push	r12
    338c: 53                           	push	rbx
    338d: 48 83 e4 e0                  	and	rsp, -32
    3391: 48 81 ec e0 02 00 00         	sub	rsp, 736
    3398: 48 89 bc 24 a8 00 00 00      	mov	qword ptr [rsp + 168], rdi
    33a0: 8b 47 08                     	mov	eax, dword ptr [rdi + 8]
    33a3: 89 44 24 34                  	mov	dword ptr [rsp + 52], eax
    33a7: 8b 46 0c                     	mov	eax, dword ptr [rsi + 12]
    33aa: 48 89 74 24 58               	mov	qword ptr [rsp + 88], rsi
    33af: 0f af 46 08                  	imul	eax, dword ptr [rsi + 8]
    33b3: 89 44 24 4c                  	mov	dword ptr [rsp + 76], eax
    33b7: 48 89 c8                     	mov	rax, rcx
    33ba: 49 89 d5                     	mov	r13, rdx
    33bd: 8b 52 08                     	mov	edx, dword ptr [rdx + 8]
    33c0: 41 8b 4d 0c                  	mov	ecx, dword ptr [r13 + 12]
    33c4: 89 ce                        	mov	esi, ecx
    33c6: 0f af f2                     	imul	esi, edx
    33c9: 89 74 24 30                  	mov	dword ptr [rsp + 48], esi
    33cd: 8b 70 08                     	mov	esi, dword ptr [rax + 8]
    33d0: 89 74 24 44                  	mov	dword ptr [rsp + 68], esi
    33d4: 48 89 44 24 50               	mov	qword ptr [rsp + 80], rax
    33d9: 8b 40 0c                     	mov	eax, dword ptr [rax + 12]
    33dc: 89 44 24 48                  	mov	dword ptr [rsp + 72], eax
    33e0: 48 8b 1d 11 3c 00 00         	mov	rbx, qword ptr [rip + 15377] # 0x6ff8 <vkUpdateDescriptorSets+0x6ff8>
    33e7: 48 8b 3b                     	mov	rdi, qword ptr [rbx]
    33ea: 48 8d 35 4f 1c 00 00         	lea	rsi, [rip + 7247]       # 0x5040 <vkUpdateDescriptorSets+0x5040>
    33f1: 45 31 e4                     	xor	r12d, r12d
    33f4: 31 c0                        	xor	eax, eax
    33f6: e8 e5 ed ff ff               	call	0x21e0 <fprintf@plt>
    33fb: 48 8b 33                     	mov	rsi, qword ptr [rbx]
    33fe: bf 0a 00 00 00               	mov	edi, 10
    3403: e8 98 ed ff ff               	call	0x21a0 <fputc@plt>
    3408: 41 83 7d 08 00               	cmp	dword ptr [r13 + 8], 0
    340d: 0f 85 b0 07 00 00            	jne	0x3bc3 <nnValidCrossCorrelationGpu+0x843>
    3413: 48 8b 33                     	mov	rsi, qword ptr [rbx]
    3416: bf 0a 00 00 00               	mov	edi, 10
    341b: e8 80 ed ff ff               	call	0x21a0 <fputc@plt>
    3420: 48 8b 3b                     	mov	rdi, qword ptr [rbx]
    3423: 48 8d 35 44 1c 00 00         	lea	rsi, [rip + 7236]       # 0x506e <vkUpdateDescriptorSets+0x506e>
    342a: 8b 54 24 30                  	mov	edx, dword ptr [rsp + 48]
    342e: 31 c0                        	xor	eax, eax
    3430: e8 ab ed ff ff               	call	0x21e0 <fprintf@plt>
    3435: bf 48 00 00 00               	mov	edi, 72
    343a: e8 01 ee ff ff               	call	0x2240 <malloc@plt>
    343f: 48 89 c3                     	mov	rbx, rax
    3442: 4c 8d b4 24 e0 00 00 00      	lea	r14, [rsp + 224]
    344a: 4c 89 f7                     	mov	rdi, r14
    344d: 31 f6                        	xor	esi, esi
    344f: e8 fc ec ff ff               	call	0x2150 <nnCreateVkDescriptorSetLayoutBindingStorageBuffer@plt>
    3454: 48 8b 84 24 f0 00 00 00      	mov	rax, qword ptr [rsp + 240]
    345c: 48 89 43 10                  	mov	qword ptr [rbx + 16], rax
    3460: c5 f8 10 84 24 e0 00 00 00   	vmovups	xmm0, xmmword ptr [rsp + 224]
    3469: c5 f8 11 03                  	vmovups	xmmword ptr [rbx], xmm0
    346d: 4c 89 f7                     	mov	rdi, r14
    3470: be 01 00 00 00               	mov	esi, 1
    3475: e8 d6 ec ff ff               	call	0x2150 <nnCreateVkDescriptorSetLayoutBindingStorageBuffer@plt>
    347a: 48 8b 84 24 f0 00 00 00      	mov	rax, qword ptr [rsp + 240]
    3482: 48 89 43 28                  	mov	qword ptr [rbx + 40], rax
    3486: c5 f8 10 84 24 e0 00 00 00   	vmovups	xmm0, xmmword ptr [rsp + 224]
    348f: c5 f8 11 43 18               	vmovups	xmmword ptr [rbx + 24], xmm0
    3494: 4c 89 f7                     	mov	rdi, r14
    3497: be 02 00 00 00               	mov	esi, 2
    349c: e8 af ec ff ff               	call	0x2150 <nnCreateVkDescriptorSetLayoutBindingStorageBuffer@plt>
    34a1: 48 8b 84 24 f0 00 00 00      	mov	rax, qword ptr [rsp + 240]
    34a9: 48 89 43 40                  	mov	qword ptr [rbx + 64], rax
    34ad: c5 f8 10 84 24 e0 00 00 00   	vmovups	xmm0, xmmword ptr [rsp + 224]
    34b6: c5 f8 11 43 30               	vmovups	xmmword ptr [rbx + 48], xmm0
    34bb: c7 84 24 70 01 00 00 20 00 00 00     	mov	dword ptr [rsp + 368], 32
    34c6: 48 c7 84 24 78 01 00 00 00 00 00 00  	mov	qword ptr [rsp + 376], 0
    34d2: 48 b8 00 00 00 00 03 00 00 00	movabs	rax, 12884901888
    34dc: 48 89 84 24 80 01 00 00      	mov	qword ptr [rsp + 384], rax
    34e4: 48 89 9c 24 88 01 00 00      	mov	qword ptr [rsp + 392], rbx
    34ec: 4c 8b bc 24 a8 00 00 00      	mov	r15, qword ptr [rsp + 168]
    34f4: 49 8b 3f                     	mov	rdi, qword ptr [r15]
    34f7: 48 8d b4 24 70 01 00 00      	lea	rsi, [rsp + 368]
    34ff: 4c 8d a4 24 d8 00 00 00      	lea	r12, [rsp + 216]
    3507: 31 d2                        	xor	edx, edx
    3509: 4c 89 e1                     	mov	rcx, r12
    350c: e8 2f eb ff ff               	call	0x2040 <vkCreateDescriptorSetLayout@plt>
    3511: 85 c0                        	test	eax, eax
    3513: 0f 85 0d 07 00 00            	jne	0x3c26 <nnValidCrossCorrelationGpu+0x8a6>
    3519: c7 44 24 70 0c 00 00 00      	mov	dword ptr [rsp + 112], 12
    3521: 48 c7 44 24 78 00 00 00 00   	mov	qword ptr [rsp + 120], 0
    352a: c7 84 24 80 00 00 00 00 00 00 00     	mov	dword ptr [rsp + 128], 0
    3535: 4c 8b 74 24 58               	mov	r14, qword ptr [rsp + 88]
    353a: 41 8b 46 0c                  	mov	eax, dword ptr [r14 + 12]
    353e: 41 0f af 46 08               	imul	eax, dword ptr [r14 + 8]
    3543: 48 c1 e0 02                  	shl	rax, 2
    3547: 48 89 84 24 88 00 00 00      	mov	qword ptr [rsp + 136], rax
    354f: 48 c7 84 24 90 00 00 00 20 00 00 00  	mov	qword ptr [rsp + 144], 32
    355b: c7 84 24 98 00 00 00 01 00 00 00     	mov	dword ptr [rsp + 152], 1
    3566: 48 8d 44 24 34               	lea	rax, [rsp + 52]
    356b: 48 89 84 24 a0 00 00 00      	mov	qword ptr [rsp + 160], rax
    3573: 49 8b 3f                     	mov	rdi, qword ptr [r15]
    3576: 48 8d 74 24 70               	lea	rsi, [rsp + 112]
    357b: 48 8d 4c 24 28               	lea	rcx, [rsp + 40]
    3580: 31 d2                        	xor	edx, edx
    3582: e8 e9 ec ff ff               	call	0x2270 <vkCreateBuffer@plt>
    3587: 85 c0                        	test	eax, eax
    3589: 0f 85 c4 06 00 00            	jne	0x3c53 <nnValidCrossCorrelationGpu+0x8d3>
    358f: 41 8b 45 0c                  	mov	eax, dword ptr [r13 + 12]
    3593: 41 0f af 45 08               	imul	eax, dword ptr [r13 + 8]
    3598: 48 c1 e0 02                  	shl	rax, 2
    359c: 48 89 84 24 88 00 00 00      	mov	qword ptr [rsp + 136], rax
    35a4: 49 8b 3f                     	mov	rdi, qword ptr [r15]
    35a7: 48 8d 74 24 70               	lea	rsi, [rsp + 112]
    35ac: 48 8d 4c 24 20               	lea	rcx, [rsp + 32]
    35b1: 31 d2                        	xor	edx, edx
    35b3: e8 b8 ec ff ff               	call	0x2270 <vkCreateBuffer@plt>
    35b8: 85 c0                        	test	eax, eax
    35ba: 0f 85 ba 06 00 00            	jne	0x3c7a <nnValidCrossCorrelationGpu+0x8fa>
    35c0: 48 8b 4c 24 50               	mov	rcx, qword ptr [rsp + 80]
    35c5: 8b 41 0c                     	mov	eax, dword ptr [rcx + 12]
    35c8: 0f af 41 08                  	imul	eax, dword ptr [rcx + 8]
    35cc: 48 c1 e0 02                  	shl	rax, 2
    35d0: 48 89 84 24 88 00 00 00      	mov	qword ptr [rsp + 136], rax
    35d8: 49 8b 3f                     	mov	rdi, qword ptr [r15]
    35db: 48 8d 74 24 70               	lea	rsi, [rsp + 112]
    35e0: 48 8d 4c 24 18               	lea	rcx, [rsp + 24]
    35e5: 31 d2                        	xor	edx, edx
    35e7: e8 84 ec ff ff               	call	0x2270 <vkCreateBuffer@plt>
    35ec: 85 c0                        	test	eax, eax
    35ee: 0f 85 ad 06 00 00            	jne	0x3ca1 <nnValidCrossCorrelationGpu+0x921>
    35f4: 49 8b 3f                     	mov	rdi, qword ptr [r15]
    35f7: 48 8b 74 24 28               	mov	rsi, qword ptr [rsp + 40]
    35fc: 48 8d 94 24 e8 01 00 00      	lea	rdx, [rsp + 488]
    3604: e8 27 eb ff ff               	call	0x2130 <vkGetBufferMemoryRequirements@plt>
    3609: 48 8b 9c 24 e8 01 00 00      	mov	rbx, qword ptr [rsp + 488]
    3611: 49 8b 3f                     	mov	rdi, qword ptr [r15]
    3614: 48 8b 74 24 20               	mov	rsi, qword ptr [rsp + 32]
    3619: 48 8d 94 24 70 02 00 00      	lea	rdx, [rsp + 624]
    3621: e8 0a eb ff ff               	call	0x2130 <vkGetBufferMemoryRequirements@plt>
    3626: 48 03 9c 24 70 02 00 00      	add	rbx, qword ptr [rsp + 624]
    362e: 49 8b 3f                     	mov	rdi, qword ptr [r15]
    3631: 48 8b 74 24 18               	mov	rsi, qword ptr [rsp + 24]
    3636: 48 8d 94 24 88 02 00 00      	lea	rdx, [rsp + 648]
    363e: e8 ed ea ff ff               	call	0x2130 <vkGetBufferMemoryRequirements@plt>
    3643: 48 03 9c 24 88 02 00 00      	add	rbx, qword ptr [rsp + 648]
    364b: 49 8d 7f 10                  	lea	rdi, [r15 + 16]
    364f: 8b b4 24 f8 01 00 00         	mov	esi, dword ptr [rsp + 504]
    3656: ba 0e 00 00 00               	mov	edx, 14
    365b: e8 20 ea ff ff               	call	0x2080 <nnFindMemoryProperties@plt>
    3660: c7 84 24 50 01 00 00 05 00 00 00     	mov	dword ptr [rsp + 336], 5
    366b: 48 c7 84 24 58 01 00 00 00 00 00 00  	mov	qword ptr [rsp + 344], 0
    3677: 48 89 9c 24 60 01 00 00      	mov	qword ptr [rsp + 352], rbx
    367f: 89 84 24 68 01 00 00         	mov	dword ptr [rsp + 360], eax
    3686: 49 8b 3f                     	mov	rdi, qword ptr [r15]
    3689: 48 8d b4 24 50 01 00 00      	lea	rsi, [rsp + 336]
    3691: 48 89 e1                     	mov	rcx, rsp
    3694: 31 d2                        	xor	edx, edx
    3696: e8 95 eb ff ff               	call	0x2230 <vkAllocateMemory@plt>
    369b: 49 8b 3f                     	mov	rdi, qword ptr [r15]
    369e: 85 c0                        	test	eax, eax
    36a0: 0f 85 22 06 00 00            	jne	0x3cc8 <nnValidCrossCorrelationGpu+0x948>
    36a6: 48 8b 74 24 28               	mov	rsi, qword ptr [rsp + 40]
    36ab: 48 8b 14 24                  	mov	rdx, qword ptr [rsp]
    36af: 31 c9                        	xor	ecx, ecx
    36b1: e8 ca ec ff ff               	call	0x2380 <vkBindBufferMemory@plt>
    36b6: 85 c0                        	test	eax, eax
    36b8: 0f 85 2f 06 00 00            	jne	0x3ced <nnValidCrossCorrelationGpu+0x96d>
    36be: 48 8b 9c 24 e8 01 00 00      	mov	rbx, qword ptr [rsp + 488]
    36c6: 49 8b 3f                     	mov	rdi, qword ptr [r15]
    36c9: 48 8b 74 24 20               	mov	rsi, qword ptr [rsp + 32]
    36ce: 48 8b 14 24                  	mov	rdx, qword ptr [rsp]
    36d2: 48 89 d9                     	mov	rcx, rbx
    36d5: e8 a6 ec ff ff               	call	0x2380 <vkBindBufferMemory@plt>
    36da: 85 c0                        	test	eax, eax
    36dc: 0f 85 31 06 00 00            	jne	0x3d13 <nnValidCrossCorrelationGpu+0x993>
    36e2: 48 03 9c 24 70 02 00 00      	add	rbx, qword ptr [rsp + 624]
    36ea: 49 8b 3f                     	mov	rdi, qword ptr [r15]
    36ed: 48 8b 74 24 18               	mov	rsi, qword ptr [rsp + 24]
    36f2: 48 8b 14 24                  	mov	rdx, qword ptr [rsp]
    36f6: 48 89 d9                     	mov	rcx, rbx
    36f9: e8 82 ec ff ff               	call	0x2380 <vkBindBufferMemory@plt>
    36fe: 85 c0                        	test	eax, eax
    3700: 0f 85 34 06 00 00            	jne	0x3d3a <nnValidCrossCorrelationGpu+0x9ba>
    3706: c7 84 24 b8 01 00 00 1e 00 00 00     	mov	dword ptr [rsp + 440], 30
    3711: 48 c7 84 24 c0 01 00 00 00 00 00 00  	mov	qword ptr [rsp + 448], 0
    371d: 48 bb 00 00 00 00 01 00 00 00	movabs	rbx, 4294967296
    3727: 48 89 9c 24 c8 01 00 00      	mov	qword ptr [rsp + 456], rbx
    372f: 4c 89 a4 24 d0 01 00 00      	mov	qword ptr [rsp + 464], r12
    3737: c7 84 24 d8 01 00 00 00 00 00 00     	mov	dword ptr [rsp + 472], 0
    3742: 48 c7 84 24 e0 01 00 00 00 00 00 00  	mov	qword ptr [rsp + 480], 0
    374e: 49 8b 3f                     	mov	rdi, qword ptr [r15]
    3751: 48 8d b4 24 b8 01 00 00      	lea	rsi, [rsp + 440]
    3759: 48 8d 4c 24 68               	lea	rcx, [rsp + 104]
    375e: 31 d2                        	xor	edx, edx
    3760: e8 1b eb ff ff               	call	0x2280 <vkCreatePipelineLayout@plt>
    3765: 85 c0                        	test	eax, eax
    3767: 0f 85 f4 05 00 00            	jne	0x3d61 <nnValidCrossCorrelationGpu+0x9e1>
    376d: 48 b8 07 00 00 00 03 00 00 00	movabs	rax, 12884901895
    3777: 48 89 84 24 d0 00 00 00      	mov	qword ptr [rsp + 208], rax
    377f: c7 84 24 00 02 00 00 21 00 00 00     	mov	dword ptr [rsp + 512], 33
    378a: 48 c7 84 24 08 02 00 00 00 00 00 00  	mov	qword ptr [rsp + 520], 0
    3796: 48 89 9c 24 10 02 00 00      	mov	qword ptr [rsp + 528], rbx
    379e: c7 84 24 18 02 00 00 01 00 00 00     	mov	dword ptr [rsp + 536], 1
    37a9: 48 8d 84 24 d0 00 00 00      	lea	rax, [rsp + 208]
    37b1: 48 89 84 24 20 02 00 00      	mov	qword ptr [rsp + 544], rax
    37b9: 49 8b 3f                     	mov	rdi, qword ptr [r15]
    37bc: 48 8d b4 24 00 02 00 00      	lea	rsi, [rsp + 512]
    37c4: 48 8d 8c 24 c8 00 00 00      	lea	rcx, [rsp + 200]
    37cc: 31 d2                        	xor	edx, edx
    37ce: e8 6d eb ff ff               	call	0x2340 <vkCreateDescriptorPool@plt>
    37d3: c7 84 24 90 01 00 00 22 00 00 00     	mov	dword ptr [rsp + 400], 34
    37de: 48 c7 84 24 98 01 00 00 00 00 00 00  	mov	qword ptr [rsp + 408], 0
    37ea: 48 8b 84 24 c8 00 00 00      	mov	rax, qword ptr [rsp + 200]
    37f2: 48 89 84 24 a0 01 00 00      	mov	qword ptr [rsp + 416], rax
    37fa: c7 84 24 a8 01 00 00 01 00 00 00     	mov	dword ptr [rsp + 424], 1
    3805: 4c 89 a4 24 b0 01 00 00      	mov	qword ptr [rsp + 432], r12
    380d: 49 8b 3f                     	mov	rdi, qword ptr [r15]
    3810: 48 8d b4 24 90 01 00 00      	lea	rsi, [rsp + 400]
    3818: 48 8d 54 24 38               	lea	rdx, [rsp + 56]
    381d: e8 3e ea ff ff               	call	0x2260 <vkAllocateDescriptorSets@plt>
    3822: 85 c0                        	test	eax, eax
    3824: 0f 85 61 05 00 00            	jne	0x3d8b <nnValidCrossCorrelationGpu+0xa0b>
    382a: bf c0 00 00 00               	mov	edi, 192
    382f: e8 0c ea ff ff               	call	0x2240 <malloc@plt>
    3834: 48 8b 4c 24 38               	mov	rcx, qword ptr [rsp + 56]
    3839: 48 8b 54 24 28               	mov	rdx, qword ptr [rsp + 40]
    383e: 48 89 94 24 58 02 00 00      	mov	qword ptr [rsp + 600], rdx
    3846: c5 f8 28 05 b2 17 00 00      	vmovaps	xmm0, xmmword ptr [rip + 6066] # 0x5000 <vkUpdateDescriptorSets+0x5000>
    384e: c5 f8 11 84 24 60 02 00 00   	vmovups	xmmword ptr [rsp + 608], xmm0
    3857: c7 00 23 00 00 00            	mov	dword ptr [rax], 35
    385d: 48 c7 40 08 00 00 00 00      	mov	qword ptr [rax + 8], 0
    3865: 48 89 48 10                  	mov	qword ptr [rax + 16], rcx
    3869: c5 f8 28 0d 9f 17 00 00      	vmovaps	xmm1, xmmword ptr [rip + 6047] # 0x5010 <vkUpdateDescriptorSets+0x5010>
    3871: c5 f8 11 48 18               	vmovups	xmmword ptr [rax + 24], xmm1
    3876: 48 c7 40 28 00 00 00 00      	mov	qword ptr [rax + 40], 0
    387e: 48 8d 94 24 58 02 00 00      	lea	rdx, [rsp + 600]
    3886: 48 89 50 30                  	mov	qword ptr [rax + 48], rdx
    388a: 48 c7 40 38 00 00 00 00      	mov	qword ptr [rax + 56], 0
    3892: 48 8b 54 24 20               	mov	rdx, qword ptr [rsp + 32]
    3897: 48 89 94 24 40 02 00 00      	mov	qword ptr [rsp + 576], rdx
    389f: c5 f8 11 84 24 48 02 00 00   	vmovups	xmmword ptr [rsp + 584], xmm0
    38a8: c7 40 40 23 00 00 00         	mov	dword ptr [rax + 64], 35
    38af: 48 c7 40 48 00 00 00 00      	mov	qword ptr [rax + 72], 0
    38b7: 48 89 48 50                  	mov	qword ptr [rax + 80], rcx
    38bb: c5 f8 28 0d 5d 17 00 00      	vmovaps	xmm1, xmmword ptr [rip + 5981] # 0x5020 <vkUpdateDescriptorSets+0x5020>
    38c3: c5 f8 11 48 58               	vmovups	xmmword ptr [rax + 88], xmm1
    38c8: 48 c7 40 68 00 00 00 00      	mov	qword ptr [rax + 104], 0
    38d0: 48 8d 94 24 40 02 00 00      	lea	rdx, [rsp + 576]
    38d8: 48 89 50 70                  	mov	qword ptr [rax + 112], rdx
    38dc: 48 c7 40 78 00 00 00 00      	mov	qword ptr [rax + 120], 0
    38e4: 48 8b 54 24 18               	mov	rdx, qword ptr [rsp + 24]
    38e9: 48 89 94 24 28 02 00 00      	mov	qword ptr [rsp + 552], rdx
    38f1: c5 f8 11 84 24 30 02 00 00   	vmovups	xmmword ptr [rsp + 560], xmm0
    38fa: c7 80 80 00 00 00 23 00 00 00	mov	dword ptr [rax + 128], 35
    3904: 48 c7 80 88 00 00 00 00 00 00 00     	mov	qword ptr [rax + 136], 0
    390f: 48 89 88 90 00 00 00         	mov	qword ptr [rax + 144], rcx
    3916: c5 f8 28 05 12 17 00 00      	vmovaps	xmm0, xmmword ptr [rip + 5906] # 0x5030 <vkUpdateDescriptorSets+0x5030>
    391e: c5 f8 11 80 98 00 00 00      	vmovups	xmmword ptr [rax + 152], xmm0
    3926: 48 c7 80 a8 00 00 00 00 00 00 00     	mov	qword ptr [rax + 168], 0
    3931: 48 8d 8c 24 28 02 00 00      	lea	rcx, [rsp + 552]
    3939: 48 89 88 b0 00 00 00         	mov	qword ptr [rax + 176], rcx
    3940: 48 c7 80 b8 00 00 00 00 00 00 00     	mov	qword ptr [rax + 184], 0
    394b: 49 8b 3f                     	mov	rdi, qword ptr [r15]
    394e: be 03 00 00 00               	mov	esi, 3
    3953: 48 89 c2                     	mov	rdx, rax
    3956: 31 c9                        	xor	ecx, ecx
    3958: 45 31 c0                     	xor	r8d, r8d
    395b: e8 80 e9 ff ff               	call	0x22e0 <vkUpdateDescriptorSets@plt>
    3960: c7 84 24 b0 00 00 00 27 00 00 00     	mov	dword ptr [rsp + 176], 39
    396b: 48 c7 84 24 b8 00 00 00 00 00 00 00  	mov	qword ptr [rsp + 184], 0
    3977: c7 84 24 c0 00 00 00 01 00 00 00     	mov	dword ptr [rsp + 192], 1
    3982: 8b 44 24 34                  	mov	eax, dword ptr [rsp + 52]
    3986: 89 84 24 c4 00 00 00         	mov	dword ptr [rsp + 196], eax
    398d: 49 8b 3f                     	mov	rdi, qword ptr [r15]
    3990: 48 8d b4 24 b0 00 00 00      	lea	rsi, [rsp + 176]
    3998: 48 8d 4c 24 60               	lea	rcx, [rsp + 96]
    399d: 31 d2                        	xor	edx, edx
    399f: e8 4c e7 ff ff               	call	0x20f0 <vkCreateCommandPool@plt>
    39a4: 85 c0                        	test	eax, eax
    39a6: 0f 85 07 04 00 00            	jne	0x3db3 <nnValidCrossCorrelationGpu+0xa33>
    39ac: c7 84 24 30 01 00 00 28 00 00 00     	mov	dword ptr [rsp + 304], 40
    39b7: 48 c7 84 24 38 01 00 00 00 00 00 00  	mov	qword ptr [rsp + 312], 0
    39c3: 48 8b 44 24 60               	mov	rax, qword ptr [rsp + 96]
    39c8: 48 89 84 24 40 01 00 00      	mov	qword ptr [rsp + 320], rax
    39d0: 48 89 9c 24 48 01 00 00      	mov	qword ptr [rsp + 328], rbx
    39d8: 49 8b 3f                     	mov	rdi, qword ptr [r15]
    39db: 48 8d b4 24 30 01 00 00      	lea	rsi, [rsp + 304]
    39e3: 4c 8d 64 24 08               	lea	r12, [rsp + 8]
    39e8: 4c 89 e2                     	mov	rdx, r12
    39eb: e8 d0 e8 ff ff               	call	0x22c0 <vkAllocateCommandBuffers@plt>
    39f0: 85 c0                        	test	eax, eax
    39f2: 0f 85 e5 03 00 00            	jne	0x3ddd <nnValidCrossCorrelationGpu+0xa5d>
    39f8: c5 fc 10 05 78 16 00 00      	vmovups	ymm0, ymmword ptr [rip + 5752] # 0x5078 <vkUpdateDescriptorSets+0x5078>
    3a00: c5 fc 11 84 24 a0 02 00 00   	vmovups	ymmword ptr [rsp + 672], ymm0
    3a09: 48 8b 7c 24 08               	mov	rdi, qword ptr [rsp + 8]
    3a0e: 48 8d b4 24 a0 02 00 00      	lea	rsi, [rsp + 672]
    3a16: c5 f8 77                     	vzeroupper
    3a19: e8 42 e9 ff ff               	call	0x2360 <vkBeginCommandBuffer@plt>
    3a1e: 48 8b 7c 24 08               	mov	rdi, qword ptr [rsp + 8]
    3a23: 49 8b 57 28                  	mov	rdx, qword ptr [r15 + 40]
    3a27: be 01 00 00 00               	mov	esi, 1
    3a2c: e8 6f e6 ff ff               	call	0x20a0 <vkCmdBindPipeline@plt>
    3a31: 48 8b 7c 24 08               	mov	rdi, qword ptr [rsp + 8]
    3a36: 48 8b 54 24 68               	mov	rdx, qword ptr [rsp + 104]
    3a3b: 4c 8d 4c 24 38               	lea	r9, [rsp + 56]
    3a40: be 01 00 00 00               	mov	esi, 1
    3a45: 31 c9                        	xor	ecx, ecx
    3a47: 41 b8 01 00 00 00            	mov	r8d, 1
    3a4d: 6a 00                        	push	0
    3a4f: 6a 00                        	push	0
    3a51: e8 0a e6 ff ff               	call	0x2060 <vkCmdBindDescriptorSets@plt>
    3a56: 48 83 c4 10                  	add	rsp, 16
    3a5a: 48 8b 7c 24 08               	mov	rdi, qword ptr [rsp + 8]
    3a5f: 41 8b 56 08                  	mov	edx, dword ptr [r14 + 8]
    3a63: 41 8b 76 0c                  	mov	esi, dword ptr [r14 + 12]
    3a67: b9 01 00 00 00               	mov	ecx, 1
    3a6c: e8 5f e8 ff ff               	call	0x22d0 <vkCmdDispatch@plt>
    3a71: 48 8b 7c 24 08               	mov	rdi, qword ptr [rsp + 8]
    3a76: e8 15 e7 ff ff               	call	0x2190 <vkEndCommandBuffer@plt>
    3a7b: 85 c0                        	test	eax, eax
    3a7d: 0f 85 7f 03 00 00            	jne	0x3e02 <nnValidCrossCorrelationGpu+0xa82>
    3a83: 48 c7 44 24 10 00 00 00 00   	mov	qword ptr [rsp + 16], 0
    3a8c: 49 8b 3f                     	mov	rdi, qword ptr [r15]
    3a8f: 48 8b 34 24                  	mov	rsi, qword ptr [rsp]
    3a93: 4c 8d 4c 24 10               	lea	r9, [rsp + 16]
    3a98: 31 d2                        	xor	edx, edx
    3a9a: 48 c7 c1 ff ff ff ff         	mov	rcx, -1
    3aa1: 45 31 c0                     	xor	r8d, r8d
    3aa4: e8 a7 e7 ff ff               	call	0x2250 <vkMapMemory@plt>
    3aa9: 85 c0                        	test	eax, eax
    3aab: 0f 85 6b 03 00 00            	jne	0x3e1c <nnValidCrossCorrelationGpu+0xa9c>
    3ab1: 48 8b 7c 24 10               	mov	rdi, qword ptr [rsp + 16]
    3ab6: 48 63 54 24 4c               	movsxd	rdx, dword ptr [rsp + 76]
    3abb: 4c 8d 34 97                  	lea	r14, [rdi + 4*rdx]
    3abf: 48 63 5c 24 30               	movsxd	rbx, dword ptr [rsp + 48]
    3ac4: 48 8b 44 24 58               	mov	rax, qword ptr [rsp + 88]
    3ac9: 48 8b 30                     	mov	rsi, qword ptr [rax]
    3acc: 48 c1 e2 02                  	shl	rdx, 2
    3ad0: e8 3b e7 ff ff               	call	0x2210 <memcpy@plt>
    3ad5: 49 8b 75 00                  	mov	rsi, qword ptr [r13]
    3ad9: 48 8d 14 9d 00 00 00 00      	lea	rdx, [4*rbx]
    3ae1: 4c 89 f7                     	mov	rdi, r14
    3ae4: e8 27 e7 ff ff               	call	0x2210 <memcpy@plt>
    3ae9: 49 8b 3f                     	mov	rdi, qword ptr [r15]
    3aec: 48 8b 34 24                  	mov	rsi, qword ptr [rsp]
    3af0: e8 4b e6 ff ff               	call	0x2140 <vkUnmapMemory@plt>
    3af5: c5 f8 57 c0                  	vxorps	xmm0, xmm0, xmm0
    3af9: c5 fc 29 84 24 e0 00 00 00   	vmovaps	ymmword ptr [rsp + 224], ymm0
    3b02: c5 fc 29 84 24 00 01 00 00   	vmovaps	ymmword ptr [rsp + 256], ymm0
    3b0b: 48 c7 84 24 20 01 00 00 00 00 00 00  	mov	qword ptr [rsp + 288], 0
    3b17: c7 84 24 e0 00 00 00 04 00 00 00     	mov	dword ptr [rsp + 224], 4
    3b22: c7 84 24 08 01 00 00 01 00 00 00     	mov	dword ptr [rsp + 264], 1
    3b2d: 4c 89 a4 24 10 01 00 00      	mov	qword ptr [rsp + 272], r12
    3b35: 49 8b 7f 20                  	mov	rdi, qword ptr [r15 + 32]
    3b39: 48 8d 94 24 e0 00 00 00      	lea	rdx, [rsp + 224]
    3b41: be 01 00 00 00               	mov	esi, 1
    3b46: 31 c9                        	xor	ecx, ecx
    3b48: c5 f8 77                     	vzeroupper
    3b4b: e8 30 e6 ff ff               	call	0x2180 <vkQueueSubmit@plt>
    3b50: 49 8b 7f 20                  	mov	rdi, qword ptr [r15 + 32]
    3b54: e8 17 e5 ff ff               	call	0x2070 <vkQueueWaitIdle@plt>
    3b59: 48 c7 44 24 10 00 00 00 00   	mov	qword ptr [rsp + 16], 0
    3b62: 49 8b 3f                     	mov	rdi, qword ptr [r15]
    3b65: 48 8b 34 24                  	mov	rsi, qword ptr [rsp]
    3b69: 4c 8d 4c 24 10               	lea	r9, [rsp + 16]
    3b6e: 31 d2                        	xor	edx, edx
    3b70: 48 c7 c1 ff ff ff ff         	mov	rcx, -1
    3b77: 45 31 c0                     	xor	r8d, r8d
    3b7a: e8 d1 e6 ff ff               	call	0x2250 <vkMapMemory@plt>
    3b7f: 85 c0                        	test	eax, eax
    3b81: 0f 85 c2 02 00 00            	jne	0x3e49 <nnValidCrossCorrelationGpu+0xac9>
    3b87: 49 8d 34 9e                  	lea	rsi, [r14 + 4*rbx]
    3b8b: 8b 4c 24 48                  	mov	ecx, dword ptr [rsp + 72]
    3b8f: 0f af 4c 24 44               	imul	ecx, dword ptr [rsp + 68]
    3b94: 48 8b 44 24 50               	mov	rax, qword ptr [rsp + 80]
    3b99: 48 8b 38                     	mov	rdi, qword ptr [rax]
    3b9c: 48 63 d1                     	movsxd	rdx, ecx
    3b9f: 48 c1 e2 02                  	shl	rdx, 2
    3ba3: e8 68 e6 ff ff               	call	0x2210 <memcpy@plt>
    3ba8: 49 8b 3f                     	mov	rdi, qword ptr [r15]
    3bab: 48 8b 34 24                  	mov	rsi, qword ptr [rsp]
    3baf: e8 8c e5 ff ff               	call	0x2140 <vkUnmapMemory@plt>
    3bb4: 48 8d 65 d8                  	lea	rsp, [rbp - 40]
    3bb8: 5b                           	pop	rbx
    3bb9: 41 5c                        	pop	r12
    3bbb: 41 5d                        	pop	r13
    3bbd: 41 5e                        	pop	r14
    3bbf: 41 5f                        	pop	r15
    3bc1: 5d                           	pop	rbp
    3bc2: c3                           	ret
    3bc3: 4c 8d 35 8c 14 00 00         	lea	r14, [rip + 5260]       # 0x5056 <vkUpdateDescriptorSets+0x5056>
    3bca: eb 1f                        	jmp	0x3beb <nnValidCrossCorrelationGpu+0x86b>
    3bcc: 0f 1f 40 00                  	nop	dword ptr [rax]
    3bd0: 48 8b 33                     	mov	rsi, qword ptr [rbx]
    3bd3: bf 0a 00 00 00               	mov	edi, 10
    3bd8: e8 c3 e5 ff ff               	call	0x21a0 <fputc@plt>
    3bdd: 41 83 c4 01                  	add	r12d, 1
    3be1: 45 3b 65 08                  	cmp	r12d, dword ptr [r13 + 8]
    3be5: 0f 83 28 f8 ff ff            	jae	0x3413 <nnValidCrossCorrelationGpu+0x93>
    3beb: 41 8b 45 0c                  	mov	eax, dword ptr [r13 + 12]
    3bef: 85 c0                        	test	eax, eax
    3bf1: 74 dd                        	je	0x3bd0 <nnValidCrossCorrelationGpu+0x850>
    3bf3: 45 31 ff                     	xor	r15d, r15d
    3bf6: 48 8b 3b                     	mov	rdi, qword ptr [rbx]
    3bf9: 49 8b 4d 00                  	mov	rcx, qword ptr [r13]
    3bfd: 41 0f af c4                  	imul	eax, r12d
    3c01: 44 01 f8                     	add	eax, r15d
    3c04: c5 fa 10 04 81               	vmovss	xmm0, dword ptr [rcx + 4*rax] # xmm0 = mem[0],zero,zero,zero
    3c09: c5 fa 5a c0                  	vcvtss2sd	xmm0, xmm0, xmm0
    3c0d: 4c 89 f6                     	mov	rsi, r14
    3c10: b0 01                        	mov	al, 1
    3c12: e8 c9 e5 ff ff               	call	0x21e0 <fprintf@plt>
    3c17: 41 83 c7 01                  	add	r15d, 1
    3c1b: 41 8b 45 0c                  	mov	eax, dword ptr [r13 + 12]
    3c1f: 41 39 c7                     	cmp	r15d, eax
    3c22: 72 d2                        	jb	0x3bf6 <nnValidCrossCorrelationGpu+0x876>
    3c24: eb aa                        	jmp	0x3bd0 <nnValidCrossCorrelationGpu+0x850>
    3c26: 49 8b 3f                     	mov	rdi, qword ptr [r15]
    3c29: 48 8d b4 24 70 01 00 00      	lea	rsi, [rsp + 368]
    3c31: 48 8d 8c 24 d8 00 00 00      	lea	rcx, [rsp + 216]
    3c39: 31 d2                        	xor	edx, edx
    3c3b: e8 00 e4 ff ff               	call	0x2040 <vkCreateDescriptorSetLayout@plt>
    3c40: 48 8d 3d 13 14 00 00         	lea	rdi, [rip + 5139]       # 0x505a <vkUpdateDescriptorSets+0x505a>
    3c47: 89 c6                        	mov	esi, eax
    3c49: ba 32 00 00 00               	mov	edx, 50
    3c4e: e9 21 02 00 00               	jmp	0x3e74 <nnValidCrossCorrelationGpu+0xaf4>
    3c53: 49 8b 3f                     	mov	rdi, qword ptr [r15]
    3c56: 48 8d 74 24 70               	lea	rsi, [rsp + 112]
    3c5b: 48 8d 4c 24 28               	lea	rcx, [rsp + 40]
    3c60: 31 d2                        	xor	edx, edx
    3c62: e8 09 e6 ff ff               	call	0x2270 <vkCreateBuffer@plt>
    3c67: 48 8d 3d ec 13 00 00         	lea	rdi, [rip + 5100]       # 0x505a <vkUpdateDescriptorSets+0x505a>
    3c6e: 89 c6                        	mov	esi, eax
    3c70: ba 3e 00 00 00               	mov	edx, 62
    3c75: e9 fa 01 00 00               	jmp	0x3e74 <nnValidCrossCorrelationGpu+0xaf4>
    3c7a: 49 8b 3f                     	mov	rdi, qword ptr [r15]
    3c7d: 48 8d 74 24 70               	lea	rsi, [rsp + 112]
    3c82: 48 8d 4c 24 20               	lea	rcx, [rsp + 32]
    3c87: 31 d2                        	xor	edx, edx
    3c89: e8 e2 e5 ff ff               	call	0x2270 <vkCreateBuffer@plt>
    3c8e: 48 8d 3d c5 13 00 00         	lea	rdi, [rip + 5061]       # 0x505a <vkUpdateDescriptorSets+0x505a>
    3c95: 89 c6                        	mov	esi, eax
    3c97: ba 42 00 00 00               	mov	edx, 66
    3c9c: e9 d3 01 00 00               	jmp	0x3e74 <nnValidCrossCorrelationGpu+0xaf4>
    3ca1: 49 8b 3f                     	mov	rdi, qword ptr [r15]
    3ca4: 48 8d 74 24 70               	lea	rsi, [rsp + 112]
    3ca9: 48 8d 4c 24 18               	lea	rcx, [rsp + 24]
    3cae: 31 d2                        	xor	edx, edx
    3cb0: e8 bb e5 ff ff               	call	0x2270 <vkCreateBuffer@plt>
    3cb5: 48 8d 3d 9e 13 00 00         	lea	rdi, [rip + 5022]       # 0x505a <vkUpdateDescriptorSets+0x505a>
    3cbc: 89 c6                        	mov	esi, eax
    3cbe: ba 46 00 00 00               	mov	edx, 70
    3cc3: e9 ac 01 00 00               	jmp	0x3e74 <nnValidCrossCorrelationGpu+0xaf4>
    3cc8: 48 8d b4 24 50 01 00 00      	lea	rsi, [rsp + 336]
    3cd0: 48 89 e1                     	mov	rcx, rsp
    3cd3: 31 d2                        	xor	edx, edx
    3cd5: e8 56 e5 ff ff               	call	0x2230 <vkAllocateMemory@plt>
    3cda: 48 8d 3d 79 13 00 00         	lea	rdi, [rip + 4985]       # 0x505a <vkUpdateDescriptorSets+0x505a>
    3ce1: 89 c6                        	mov	esi, eax
    3ce3: ba 62 00 00 00               	mov	edx, 98
    3ce8: e9 87 01 00 00               	jmp	0x3e74 <nnValidCrossCorrelationGpu+0xaf4>
    3ced: 49 8b 3f                     	mov	rdi, qword ptr [r15]
    3cf0: 48 8b 74 24 28               	mov	rsi, qword ptr [rsp + 40]
    3cf5: 48 8b 14 24                  	mov	rdx, qword ptr [rsp]
    3cf9: 31 c9                        	xor	ecx, ecx
    3cfb: e8 80 e6 ff ff               	call	0x2380 <vkBindBufferMemory@plt>
    3d00: 48 8d 3d 53 13 00 00         	lea	rdi, [rip + 4947]       # 0x505a <vkUpdateDescriptorSets+0x505a>
    3d07: 89 c6                        	mov	esi, eax
    3d09: ba 65 00 00 00               	mov	edx, 101
    3d0e: e9 61 01 00 00               	jmp	0x3e74 <nnValidCrossCorrelationGpu+0xaf4>
    3d13: 49 8b 3f                     	mov	rdi, qword ptr [r15]
    3d16: 48 8b 74 24 20               	mov	rsi, qword ptr [rsp + 32]
    3d1b: 48 8b 14 24                  	mov	rdx, qword ptr [rsp]
    3d1f: 48 89 d9                     	mov	rcx, rbx
    3d22: e8 59 e6 ff ff               	call	0x2380 <vkBindBufferMemory@plt>
    3d27: 48 8d 3d 2c 13 00 00         	lea	rdi, [rip + 4908]       # 0x505a <vkUpdateDescriptorSets+0x505a>
    3d2e: 89 c6                        	mov	esi, eax
    3d30: ba 68 00 00 00               	mov	edx, 104
    3d35: e9 3a 01 00 00               	jmp	0x3e74 <nnValidCrossCorrelationGpu+0xaf4>
    3d3a: 49 8b 3f                     	mov	rdi, qword ptr [r15]
    3d3d: 48 8b 74 24 18               	mov	rsi, qword ptr [rsp + 24]
    3d42: 48 8b 14 24                  	mov	rdx, qword ptr [rsp]
    3d46: 48 89 d9                     	mov	rcx, rbx
    3d49: e8 32 e6 ff ff               	call	0x2380 <vkBindBufferMemory@plt>
    3d4e: 48 8d 3d 05 13 00 00         	lea	rdi, [rip + 4869]       # 0x505a <vkUpdateDescriptorSets+0x505a>
    3d55: 89 c6                        	mov	esi, eax
    3d57: ba 6b 00 00 00               	mov	edx, 107
    3d5c: e9 13 01 00 00               	jmp	0x3e74 <nnValidCrossCorrelationGpu+0xaf4>
    3d61: 49 8b 3f                     	mov	rdi, qword ptr [r15]
    3d64: 48 8d b4 24 b8 01 00 00      	lea	rsi, [rsp + 440]
    3d6c: 48 8d 4c 24 68               	lea	rcx, [rsp + 104]
    3d71: 31 d2                        	xor	edx, edx
    3d73: e8 08 e5 ff ff               	call	0x2280 <vkCreatePipelineLayout@plt>
    3d78: 48 8d 3d db 12 00 00         	lea	rdi, [rip + 4827]       # 0x505a <vkUpdateDescriptorSets+0x505a>
    3d7f: 89 c6                        	mov	esi, eax
    3d81: ba 78 00 00 00               	mov	edx, 120
    3d86: e9 e9 00 00 00               	jmp	0x3e74 <nnValidCrossCorrelationGpu+0xaf4>
    3d8b: 49 8b 3f                     	mov	rdi, qword ptr [r15]
    3d8e: 48 8d b4 24 90 01 00 00      	lea	rsi, [rsp + 400]
    3d96: 48 8d 54 24 38               	lea	rdx, [rsp + 56]
    3d9b: e8 c0 e4 ff ff               	call	0x2260 <vkAllocateDescriptorSets@plt>
    3da0: 48 8d 3d b3 12 00 00         	lea	rdi, [rip + 4787]       # 0x505a <vkUpdateDescriptorSets+0x505a>
    3da7: 89 c6                        	mov	esi, eax
    3da9: ba 8f 00 00 00               	mov	edx, 143
    3dae: e9 c1 00 00 00               	jmp	0x3e74 <nnValidCrossCorrelationGpu+0xaf4>
    3db3: 49 8b 3f                     	mov	rdi, qword ptr [r15]
    3db6: 48 8d b4 24 b0 00 00 00      	lea	rsi, [rsp + 176]
    3dbe: 48 8d 4c 24 60               	lea	rcx, [rsp + 96]
    3dc3: 31 d2                        	xor	edx, edx
    3dc5: e8 26 e3 ff ff               	call	0x20f0 <vkCreateCommandPool@plt>
    3dca: 48 8d 3d 89 12 00 00         	lea	rdi, [rip + 4745]       # 0x505a <vkUpdateDescriptorSets+0x505a>
    3dd1: 89 c6                        	mov	esi, eax
    3dd3: ba bf 00 00 00               	mov	edx, 191
    3dd8: e9 97 00 00 00               	jmp	0x3e74 <nnValidCrossCorrelationGpu+0xaf4>
    3ddd: 49 8b 3f                     	mov	rdi, qword ptr [r15]
    3de0: 48 8d b4 24 30 01 00 00      	lea	rsi, [rsp + 304]
    3de8: 48 8d 54 24 08               	lea	rdx, [rsp + 8]
    3ded: e8 ce e4 ff ff               	call	0x22c0 <vkAllocateCommandBuffers@plt>
    3df2: 48 8d 3d 61 12 00 00         	lea	rdi, [rip + 4705]       # 0x505a <vkUpdateDescriptorSets+0x505a>
    3df9: 89 c6                        	mov	esi, eax
    3dfb: ba c8 00 00 00               	mov	edx, 200
    3e00: eb 72                        	jmp	0x3e74 <nnValidCrossCorrelationGpu+0xaf4>
    3e02: 48 8b 7c 24 08               	mov	rdi, qword ptr [rsp + 8]
    3e07: e8 84 e3 ff ff               	call	0x2190 <vkEndCommandBuffer@plt>
    3e0c: 48 8d 3d 47 12 00 00         	lea	rdi, [rip + 4679]       # 0x505a <vkUpdateDescriptorSets+0x505a>
    3e13: 89 c6                        	mov	esi, eax
    3e15: ba d7 00 00 00               	mov	edx, 215
    3e1a: eb 58                        	jmp	0x3e74 <nnValidCrossCorrelationGpu+0xaf4>
    3e1c: 49 8b 3f                     	mov	rdi, qword ptr [r15]
    3e1f: 48 8b 34 24                  	mov	rsi, qword ptr [rsp]
    3e23: 4c 8d 4c 24 10               	lea	r9, [rsp + 16]
    3e28: 31 d2                        	xor	edx, edx
    3e2a: 48 c7 c1 ff ff ff ff         	mov	rcx, -1
    3e31: 45 31 c0                     	xor	r8d, r8d
    3e34: e8 17 e4 ff ff               	call	0x2250 <vkMapMemory@plt>
    3e39: 48 8d 3d 1a 12 00 00         	lea	rdi, [rip + 4634]       # 0x505a <vkUpdateDescriptorSets+0x505a>
    3e40: 89 c6                        	mov	esi, eax
    3e42: ba da 00 00 00               	mov	edx, 218
    3e47: eb 2b                        	jmp	0x3e74 <nnValidCrossCorrelationGpu+0xaf4>
    3e49: 49 8b 3f                     	mov	rdi, qword ptr [r15]
    3e4c: 48 8b 34 24                  	mov	rsi, qword ptr [rsp]
    3e50: 4c 8d 4c 24 10               	lea	r9, [rsp + 16]
    3e55: 31 d2                        	xor	edx, edx
    3e57: 48 c7 c1 ff ff ff ff         	mov	rcx, -1
    3e5e: 45 31 c0                     	xor	r8d, r8d
    3e61: e8 ea e3 ff ff               	call	0x2250 <vkMapMemory@plt>
    3e66: 48 8d 3d ed 11 00 00         	lea	rdi, [rip + 4589]       # 0x505a <vkUpdateDescriptorSets+0x505a>
    3e6d: 89 c6                        	mov	esi, eax
    3e6f: ba ef 00 00 00               	mov	edx, 239
    3e74: 31 c0                        	xor	eax, eax
    3e76: e8 85 e2 ff ff               	call	0x2100 <printf@plt>
    3e7b: 31 ff                        	xor	edi, edi
    3e7d: e8 ae e4 ff ff               	call	0x2330 <exit@plt>
    3e82: 66 2e 0f 1f 84 00 00 00 00 00	nop	word ptr cs:[rax + rax]
    3e8c: 0f 1f 40 00                  	nop	dword ptr [rax]

0000000000003e90 <nnReadBinaryFile>:
    3e90: 41 57                        	push	r15
    3e92: 41 56                        	push	r14
    3e94: 41 54                        	push	r12
    3e96: 53                           	push	rbx
    3e97: 50                           	push	rax
    3e98: 49 89 f6                     	mov	r14, rsi
    3e9b: 49 89 fc                     	mov	r12, rdi
    3e9e: 48 8d 35 f3 11 00 00         	lea	rsi, [rip + 4595]       # 0x5098 <vkUpdateDescriptorSets+0x5098>
    3ea5: e8 46 e4 ff ff               	call	0x22f0 <fopen@plt>
    3eaa: 48 85 c0                     	test	rax, rax
    3ead: 74 5d                        	je	0x3f0c <nnReadBinaryFile+0x7c>
    3eaf: 48 89 c3                     	mov	rbx, rax
    3eb2: 48 89 c7                     	mov	rdi, rax
    3eb5: 31 f6                        	xor	esi, esi
    3eb7: ba 02 00 00 00               	mov	edx, 2
    3ebc: e8 cf e3 ff ff               	call	0x2290 <fseek@plt>
    3ec1: 48 89 df                     	mov	rdi, rbx
    3ec4: e8 27 e3 ff ff               	call	0x21f0 <ftell@plt>
    3ec9: 49 89 06                     	mov	qword ptr [r14], rax
    3ecc: 48 89 df                     	mov	rdi, rbx
    3ecf: e8 3c e2 ff ff               	call	0x2110 <rewind@plt>
    3ed4: 4d 8b 36                     	mov	r14, qword ptr [r14]
    3ed7: 4c 89 f7                     	mov	rdi, r14
    3eda: e8 61 e3 ff ff               	call	0x2240 <malloc@plt>
    3edf: 49 89 c7                     	mov	r15, rax
    3ee2: ba 01 00 00 00               	mov	edx, 1
    3ee7: 48 89 c7                     	mov	rdi, rax
    3eea: 4c 89 f6                     	mov	rsi, r14
    3eed: 48 89 d9                     	mov	rcx, rbx
    3ef0: e8 9b e1 ff ff               	call	0x2090 <fread@plt>
    3ef5: 48 89 df                     	mov	rdi, rbx
    3ef8: e8 d3 e1 ff ff               	call	0x20d0 <fclose@plt>
    3efd: 4c 89 f8                     	mov	rax, r15
    3f00: 48 83 c4 08                  	add	rsp, 8
    3f04: 5b                           	pop	rbx
    3f05: 41 5c                        	pop	r12
    3f07: 41 5e                        	pop	r14
    3f09: 41 5f                        	pop	r15
    3f0b: c3                           	ret
    3f0c: 48 8b 05 e5 30 00 00         	mov	rax, qword ptr [rip + 12517] # 0x6ff8 <vkUpdateDescriptorSets+0x6ff8>
    3f13: 48 8b 38                     	mov	rdi, qword ptr [rax]
    3f16: 48 8d 35 7e 11 00 00         	lea	rsi, [rip + 4478]       # 0x509b <vkUpdateDescriptorSets+0x509b>
    3f1d: 45 31 ff                     	xor	r15d, r15d
    3f20: 4c 89 e2                     	mov	rdx, r12
    3f23: 31 c0                        	xor	eax, eax
    3f25: e8 b6 e2 ff ff               	call	0x21e0 <fprintf@plt>
    3f2a: 49 c7 06 00 00 00 00         	mov	qword ptr [r14], 0
    3f31: eb ca                        	jmp	0x3efd <nnReadBinaryFile+0x6d>
    3f33: 66 2e 0f 1f 84 00 00 00 00 00	nop	word ptr cs:[rax + rax]
    3f3d: 0f 1f 00                     	nop	dword ptr [rax]

0000000000003f40 <nnWriteBinaryFile>:
    3f40: 41 57                        	push	r15
    3f42: 41 56                        	push	r14
    3f44: 41 54                        	push	r12
    3f46: 53                           	push	rbx
    3f47: 50                           	push	rax
    3f48: 49 89 d6                     	mov	r14, rdx
    3f4b: 49 89 f7                     	mov	r15, rsi
    3f4e: 49 89 fc                     	mov	r12, rdi
    3f51: 48 8d 35 66 11 00 00         	lea	rsi, [rip + 4454]       # 0x50be <vkUpdateDescriptorSets+0x50be>
    3f58: e8 93 e3 ff ff               	call	0x22f0 <fopen@plt>
    3f5d: 48 85 c0                     	test	rax, rax
    3f60: 74 2c                        	je	0x3f8e <nnWriteBinaryFile+0x4e>
    3f62: 48 89 c3                     	mov	rbx, rax
    3f65: ba 01 00 00 00               	mov	edx, 1
    3f6a: 4c 89 ff                     	mov	rdi, r15
    3f6d: 4c 89 f6                     	mov	rsi, r14
    3f70: 48 89 c1                     	mov	rcx, rax
    3f73: e8 d8 e3 ff ff               	call	0x2350 <fwrite@plt>
    3f78: 48 89 df                     	mov	rdi, rbx
    3f7b: e8 50 e1 ff ff               	call	0x20d0 <fclose@plt>
    3f80: 31 c0                        	xor	eax, eax
    3f82: 48 83 c4 08                  	add	rsp, 8
    3f86: 5b                           	pop	rbx
    3f87: 41 5c                        	pop	r12
    3f89: 41 5e                        	pop	r14
    3f8b: 41 5f                        	pop	r15
    3f8d: c3                           	ret
    3f8e: 48 8b 05 63 30 00 00         	mov	rax, qword ptr [rip + 12387] # 0x6ff8 <vkUpdateDescriptorSets+0x6ff8>
    3f95: 48 8b 38                     	mov	rdi, qword ptr [rax]
    3f98: 48 8d 35 fc 10 00 00         	lea	rsi, [rip + 4348]       # 0x509b <vkUpdateDescriptorSets+0x509b>
    3f9f: 4c 89 e2                     	mov	rdx, r12
    3fa2: 31 c0                        	xor	eax, eax
    3fa4: e8 37 e2 ff ff               	call	0x21e0 <fprintf@plt>
    3fa9: b8 01 00 00 00               	mov	eax, 1
    3fae: eb d2                        	jmp	0x3f82 <nnWriteBinaryFile+0x42>

0000000000003fb0 <nnMemoryCopy>:
    3fb0: e9 5b e2 ff ff               	jmp	0x2210 <memcpy@plt>
    3fb5: 66 2e 0f 1f 84 00 00 00 00 00	nop	word ptr cs:[rax + rax]
    3fbf: 90                           	nop

0000000000003fc0 <nnCreateDefaultVkInstance>:
    3fc0: 55                           	push	rbp
    3fc1: 48 89 e5                     	mov	rbp, rsp
    3fc4: 41 57                        	push	r15
    3fc6: 41 56                        	push	r14
    3fc8: 41 55                        	push	r13
    3fca: 41 54                        	push	r12
    3fcc: 53                           	push	rbx
    3fcd: 48 83 e4 e0                  	and	rsp, -32
    3fd1: 48 81 ec 00 01 00 00         	sub	rsp, 256
    3fd8: 49 89 fe                     	mov	r14, rdi
    3fdb: c5 f8 57 c0                  	vxorps	xmm0, xmm0, xmm0
    3fdf: c5 fc 11 44 24 70            	vmovups	ymmword ptr [rsp + 112], ymm0
    3fe5: c5 fc 29 44 24 60            	vmovaps	ymmword ptr [rsp + 96], ymm0
    3feb: 48 8d 05 d0 10 00 00         	lea	rax, [rip + 4304]       # 0x50c2 <vkUpdateDescriptorSets+0x50c2>
    3ff2: 48 89 44 24 70               	mov	qword ptr [rsp + 112], rax
    3ff7: c7 44 24 78 01 00 00 00      	mov	dword ptr [rsp + 120], 1
    3fff: 48 8d 05 c8 10 00 00         	lea	rax, [rip + 4296]       # 0x50ce <vkUpdateDescriptorSets+0x50ce>
    4006: 48 89 84 24 80 00 00 00      	mov	qword ptr [rsp + 128], rax
    400e: c7 84 24 8c 00 00 00 00 30 40 00     	mov	dword ptr [rsp + 140], 4206592
    4019: c5 fc 29 44 24 20            	vmovaps	ymmword ptr [rsp + 32], ymm0
    401f: c5 fc 11 44 24 30            	vmovups	ymmword ptr [rsp + 48], ymm0
    4025: c7 44 24 20 d8 8e 9e 3b      	mov	dword ptr [rsp + 32], 1000247000
    402d: c7 44 24 30 01 00 00 00      	mov	dword ptr [rsp + 48], 1
    4035: c7 44 24 1c 03 00 00 00      	mov	dword ptr [rsp + 28], 3
    403d: 48 8d 44 24 1c               	lea	rax, [rsp + 28]
    4042: 48 89 44 24 38               	mov	qword ptr [rsp + 56], rax
    4047: c7 84 24 a8 00 00 00 01 00 00 00     	mov	dword ptr [rsp + 168], 1
    4052: c7 84 24 b8 00 00 00 00 00 00 00     	mov	dword ptr [rsp + 184], 0
    405d: 48 8d 44 24 60               	lea	rax, [rsp + 96]
    4062: 48 89 84 24 c0 00 00 00      	mov	qword ptr [rsp + 192], rax
    406a: c7 84 24 c8 00 00 00 01 00 00 00     	mov	dword ptr [rsp + 200], 1
    4075: 48 8d 05 64 31 00 00         	lea	rax, [rip + 12644]      # 0x71e0 <validationLayers>
    407c: 48 89 84 24 d0 00 00 00      	mov	qword ptr [rsp + 208], rax
    4084: c7 84 24 d8 00 00 00 02 00 00 00     	mov	dword ptr [rsp + 216], 2
    408f: 48 8d 05 5a 31 00 00         	lea	rax, [rip + 12634]      # 0x71f0 <enabledInstanceExtensions>
    4096: 48 89 84 24 e0 00 00 00      	mov	qword ptr [rsp + 224], rax
    409e: 48 c7 44 24 28 00 00 00 00   	mov	qword ptr [rsp + 40], 0
    40a7: 48 8d 44 24 20               	lea	rax, [rsp + 32]
    40ac: 48 89 84 24 b0 00 00 00      	mov	qword ptr [rsp + 176], rax
    40b4: 48 8d 7c 24 18               	lea	rdi, [rsp + 24]
    40b9: 31 f6                        	xor	esi, esi
    40bb: c5 f8 77                     	vzeroupper
    40be: e8 ad e2 ff ff               	call	0x2370 <vkEnumerateInstanceLayerProperties@plt>
    40c3: 85 c0                        	test	eax, eax
    40c5: 0f 85 b9 00 00 00            	jne	0x4184 <nnCreateDefaultVkInstance+0x1c4>
    40cb: 8b 44 24 18                  	mov	eax, dword ptr [rsp + 24]
    40cf: 48 89 c1                     	mov	rcx, rax
    40d2: 48 c1 e1 09                  	shl	rcx, 9
    40d6: 48 8d 3c c1                  	lea	rdi, [rcx + 8*rax]
    40da: e8 61 e1 ff ff               	call	0x2240 <malloc@plt>
    40df: 49 89 c5                     	mov	r13, rax
    40e2: 48 8d 7c 24 18               	lea	rdi, [rsp + 24]
    40e7: 48 89 c6                     	mov	rsi, rax
    40ea: e8 81 e2 ff ff               	call	0x2370 <vkEnumerateInstanceLayerProperties@plt>
    40ef: 85 c0                        	test	eax, eax
    40f1: 0f 85 9d 00 00 00            	jne	0x4194 <nnCreateDefaultVkInstance+0x1d4>
    40f7: 44 8b 64 24 18               	mov	r12d, dword ptr [rsp + 24]
    40fc: 4d 85 e4                     	test	r12, r12
    40ff: 74 6f                        	je	0x4170 <nnCreateDefaultVkInstance+0x1b0>
    4101: 4c 8b 3d d8 30 00 00         	mov	r15, qword ptr [rip + 12504] # 0x71e0 <validationLayers>
    4108: 4c 89 ff                     	mov	rdi, r15
    410b: 4c 89 ee                     	mov	rsi, r13
    410e: e8 ad e0 ff ff               	call	0x21c0 <strcmp@plt>
    4113: 85 c0                        	test	eax, eax
    4115: 74 45                        	je	0x415c <nnCreateDefaultVkInstance+0x19c>
    4117: 49 81 c5 08 02 00 00         	add	r13, 520
    411e: b9 01 00 00 00               	mov	ecx, 1
    4123: 66 2e 0f 1f 84 00 00 00 00 00	nop	word ptr cs:[rax + rax]
    412d: 0f 1f 00                     	nop	dword ptr [rax]
    4130: 48 89 cb                     	mov	rbx, rcx
    4133: 49 39 cc                     	cmp	r12, rcx
    4136: 74 1a                        	je	0x4152 <nnCreateDefaultVkInstance+0x192>
    4138: 4c 89 ff                     	mov	rdi, r15
    413b: 4c 89 ee                     	mov	rsi, r13
    413e: e8 7d e0 ff ff               	call	0x21c0 <strcmp@plt>
    4143: 48 8d 4b 01                  	lea	rcx, [rbx + 1]
    4147: 49 81 c5 08 02 00 00         	add	r13, 520
    414e: 85 c0                        	test	eax, eax
    4150: 75 de                        	jne	0x4130 <nnCreateDefaultVkInstance+0x170>
    4152: b8 f3 ff ff ff               	mov	eax, 4294967283
    4157: 4c 39 e3                     	cmp	rbx, r12
    415a: 73 19                        	jae	0x4175 <nnCreateDefaultVkInstance+0x1b5>
    415c: 48 8d bc 24 a8 00 00 00      	lea	rdi, [rsp + 168]
    4164: 31 f6                        	xor	esi, esi
    4166: 4c 89 f2                     	mov	rdx, r14
    4169: e8 b2 e1 ff ff               	call	0x2320 <vkCreateInstance@plt>
    416e: eb 05                        	jmp	0x4175 <nnCreateDefaultVkInstance+0x1b5>
    4170: b8 f3 ff ff ff               	mov	eax, 4294967283
    4175: 48 8d 65 d8                  	lea	rsp, [rbp - 40]
    4179: 5b                           	pop	rbx
    417a: 41 5c                        	pop	r12
    417c: 41 5d                        	pop	r13
    417e: 41 5e                        	pop	r14
    4180: 41 5f                        	pop	r15
    4182: 5d                           	pop	rbp
    4183: c3                           	ret
    4184: 48 8d 3d cf 0e 00 00         	lea	rdi, [rip + 3791]       # 0x505a <vkUpdateDescriptorSets+0x505a>
    418b: 89 c6                        	mov	esi, eax
    418d: ba 17 00 00 00               	mov	edx, 23
    4192: eb 0e                        	jmp	0x41a2 <nnCreateDefaultVkInstance+0x1e2>
    4194: 48 8d 3d bf 0e 00 00         	lea	rdi, [rip + 3775]       # 0x505a <vkUpdateDescriptorSets+0x505a>
    419b: 89 c6                        	mov	esi, eax
    419d: ba 1b 00 00 00               	mov	edx, 27
    41a2: 31 c0                        	xor	eax, eax
    41a4: e8 57 df ff ff               	call	0x2100 <printf@plt>
    41a9: 31 ff                        	xor	edi, edi
    41ab: e8 80 e1 ff ff               	call	0x2330 <exit@plt>

00000000000041b0 <vkGetPhysicalDevices>:
    41b0: 41 56                        	push	r14
    41b2: 53                           	push	rbx
    41b3: 50                           	push	rax
    41b4: 48 89 f3                     	mov	rbx, rsi
    41b7: 49 89 fe                     	mov	r14, rdi
    41ba: 48 8d 74 24 04               	lea	rsi, [rsp + 4]
    41bf: 31 d2                        	xor	edx, edx
    41c1: e8 6a de ff ff               	call	0x2030 <vkEnumeratePhysicalDevices@plt>
    41c6: 85 c0                        	test	eax, eax
    41c8: 75 31                        	jne	0x41fb <vkGetPhysicalDevices+0x4b>
    41ca: 8b 7c 24 04                  	mov	edi, dword ptr [rsp + 4]
    41ce: 89 3b                        	mov	dword ptr [rbx], edi
    41d0: 48 c1 e7 03                  	shl	rdi, 3
    41d4: e8 67 e0 ff ff               	call	0x2240 <malloc@plt>
    41d9: 48 89 c3                     	mov	rbx, rax
    41dc: 48 8d 74 24 04               	lea	rsi, [rsp + 4]
    41e1: 4c 89 f7                     	mov	rdi, r14
    41e4: 48 89 c2                     	mov	rdx, rax
    41e7: e8 44 de ff ff               	call	0x2030 <vkEnumeratePhysicalDevices@plt>
    41ec: 85 c0                        	test	eax, eax
    41ee: 75 2a                        	jne	0x421a <vkGetPhysicalDevices+0x6a>
    41f0: 48 89 d8                     	mov	rax, rbx
    41f3: 48 83 c4 08                  	add	rsp, 8
    41f7: 5b                           	pop	rbx
    41f8: 41 5e                        	pop	r14
    41fa: c3                           	ret
    41fb: 48 8d 74 24 04               	lea	rsi, [rsp + 4]
    4200: 4c 89 f7                     	mov	rdi, r14
    4203: 31 d2                        	xor	edx, edx
    4205: e8 26 de ff ff               	call	0x2030 <vkEnumeratePhysicalDevices@plt>
    420a: 48 8d 3d 49 0e 00 00         	lea	rdi, [rip + 3657]       # 0x505a <vkUpdateDescriptorSets+0x505a>
    4211: 89 c6                        	mov	esi, eax
    4213: ba 55 00 00 00               	mov	edx, 85
    4218: eb 1e                        	jmp	0x4238 <vkGetPhysicalDevices+0x88>
    421a: 48 8d 74 24 04               	lea	rsi, [rsp + 4]
    421f: 4c 89 f7                     	mov	rdi, r14
    4222: 48 89 da                     	mov	rdx, rbx
    4225: e8 06 de ff ff               	call	0x2030 <vkEnumeratePhysicalDevices@plt>
    422a: 48 8d 3d 29 0e 00 00         	lea	rdi, [rip + 3625]       # 0x505a <vkUpdateDescriptorSets+0x505a>
    4231: 89 c6                        	mov	esi, eax
    4233: ba 59 00 00 00               	mov	edx, 89
    4238: 31 c0                        	xor	eax, eax
    423a: e8 c1 de ff ff               	call	0x2100 <printf@plt>
    423f: 31 ff                        	xor	edi, edi
    4241: e8 ea e0 ff ff               	call	0x2330 <exit@plt>
    4246: 66 2e 0f 1f 84 00 00 00 00 00	nop	word ptr cs:[rax + rax]

0000000000004250 <nnGetVkPhysicalDeviceIndexByExtensionName>:
    4250: 55                           	push	rbp
    4251: 41 57                        	push	r15
    4253: 41 56                        	push	r14
    4255: 41 55                        	push	r13
    4257: 41 54                        	push	r12
    4259: 53                           	push	rbx
    425a: 48 83 ec 18                  	sub	rsp, 24
    425e: 48 89 54 24 10               	mov	qword ptr [rsp + 16], rdx
    4263: 85 f6                        	test	esi, esi
    4265: 0f 84 2d 01 00 00            	je	0x4398 <nnGetVkPhysicalDeviceIndexByExtensionName+0x148>
    426b: 49 89 fd                     	mov	r13, rdi
    426e: 89 f0                        	mov	eax, esi
    4270: 48 89 44 24 08               	mov	qword ptr [rsp + 8], rax
    4275: c7 44 24 04 ff ff ff ff      	mov	dword ptr [rsp + 4], 4294967295
    427d: 49 89 e6                     	mov	r14, rsp
    4280: 31 db                        	xor	ebx, ebx
    4282: eb 23                        	jmp	0x42a7 <nnGetVkPhysicalDeviceIndexByExtensionName+0x57>
    4284: 89 d8                        	mov	eax, ebx
    4286: 89 5c 24 04                  	mov	dword ptr [rsp + 4], ebx
    428a: 66 0f 1f 44 00 00            	nop	word ptr [rax + rax]
    4290: 4c 89 e7                     	mov	rdi, r12
    4293: e8 b8 dd ff ff               	call	0x2050 <free@plt>
    4298: 48 83 c3 01                  	add	rbx, 1
    429c: 48 3b 5c 24 08               	cmp	rbx, qword ptr [rsp + 8]
    42a1: 0f 84 a6 00 00 00            	je	0x434d <nnGetVkPhysicalDeviceIndexByExtensionName+0xfd>
    42a7: c7 04 24 00 00 00 00         	mov	dword ptr [rsp], 0
    42ae: 49 8b 7c dd 00               	mov	rdi, qword ptr [r13 + 8*rbx]
    42b3: 31 f6                        	xor	esi, esi
    42b5: 4c 89 f2                     	mov	rdx, r14
    42b8: 31 c9                        	xor	ecx, ecx
    42ba: e8 01 de ff ff               	call	0x20c0 <vkEnumerateDeviceExtensionProperties@plt>
    42bf: 85 c0                        	test	eax, eax
    42c1: 0f 85 a5 00 00 00            	jne	0x436c <nnGetVkPhysicalDeviceIndexByExtensionName+0x11c>
    42c7: 8b 04 24                     	mov	eax, dword ptr [rsp]
    42ca: 48 89 c1                     	mov	rcx, rax
    42cd: 48 c1 e1 08                  	shl	rcx, 8
    42d1: 48 8d 3c 81                  	lea	rdi, [rcx + 4*rax]
    42d5: e8 66 df ff ff               	call	0x2240 <malloc@plt>
    42da: 49 89 c4                     	mov	r12, rax
    42dd: 49 8b 7c dd 00               	mov	rdi, qword ptr [r13 + 8*rbx]
    42e2: 31 f6                        	xor	esi, esi
    42e4: 4c 89 f2                     	mov	rdx, r14
    42e7: 48 89 c1                     	mov	rcx, rax
    42ea: e8 d1 dd ff ff               	call	0x20c0 <vkEnumerateDeviceExtensionProperties@plt>
    42ef: 85 c0                        	test	eax, eax
    42f1: 0f 85 85 00 00 00            	jne	0x437c <nnGetVkPhysicalDeviceIndexByExtensionName+0x12c>
    42f7: 83 3c 24 00                  	cmp	dword ptr [rsp], 0
    42fb: 74 93                        	je	0x4290 <nnGetVkPhysicalDeviceIndexByExtensionName+0x40>
    42fd: 4c 89 e5                     	mov	rbp, r12
    4300: 45 31 ff                     	xor	r15d, r15d
    4303: 48 8b 05 ee 2c 00 00         	mov	rax, qword ptr [rip + 11502] # 0x6ff8 <vkUpdateDescriptorSets+0x6ff8>
    430a: 48 8b 38                     	mov	rdi, qword ptr [rax]
    430d: 48 8d 35 bf 0d 00 00         	lea	rsi, [rip + 3519]       # 0x50d3 <vkUpdateDescriptorSets+0x50d3>
    4314: 89 da                        	mov	edx, ebx
    4316: 48 89 e9                     	mov	rcx, rbp
    4319: 31 c0                        	xor	eax, eax
    431b: e8 c0 de ff ff               	call	0x21e0 <fprintf@plt>
    4320: 48 89 ef                     	mov	rdi, rbp
    4323: 48 8b 74 24 10               	mov	rsi, qword ptr [rsp + 16]
    4328: e8 93 de ff ff               	call	0x21c0 <strcmp@plt>
    432d: 85 c0                        	test	eax, eax
    432f: 0f 84 4f ff ff ff            	je	0x4284 <nnGetVkPhysicalDeviceIndexByExtensionName+0x34>
    4335: 49 83 c7 01                  	add	r15, 1
    4339: 8b 04 24                     	mov	eax, dword ptr [rsp]
    433c: 48 81 c5 04 01 00 00         	add	rbp, 260
    4343: 49 39 c7                     	cmp	r15, rax
    4346: 72 bb                        	jb	0x4303 <nnGetVkPhysicalDeviceIndexByExtensionName+0xb3>
    4348: e9 43 ff ff ff               	jmp	0x4290 <nnGetVkPhysicalDeviceIndexByExtensionName+0x40>
    434d: 8b 44 24 04                  	mov	eax, dword ptr [rsp + 4]
    4351: 83 f8 ff                     	cmp	eax, -1
    4354: 74 42                        	je	0x4398 <nnGetVkPhysicalDeviceIndexByExtensionName+0x148>
    4356: 48 98                        	cdqe
    4358: 49 8b 44 c5 00               	mov	rax, qword ptr [r13 + 8*rax]
    435d: 48 83 c4 18                  	add	rsp, 24
    4361: 5b                           	pop	rbx
    4362: 41 5c                        	pop	r12
    4364: 41 5d                        	pop	r13
    4366: 41 5e                        	pop	r14
    4368: 41 5f                        	pop	r15
    436a: 5d                           	pop	rbp
    436b: c3                           	ret
    436c: 48 8d 3d e7 0c 00 00         	lea	rdi, [rip + 3303]       # 0x505a <vkUpdateDescriptorSets+0x505a>
    4373: 89 c6                        	mov	esi, eax
    4375: ba 69 00 00 00               	mov	edx, 105
    437a: eb 0e                        	jmp	0x438a <nnGetVkPhysicalDeviceIndexByExtensionName+0x13a>
    437c: 48 8d 3d d7 0c 00 00         	lea	rdi, [rip + 3287]       # 0x505a <vkUpdateDescriptorSets+0x505a>
    4383: 89 c6                        	mov	esi, eax
    4385: ba 6d 00 00 00               	mov	edx, 109
    438a: 31 c0                        	xor	eax, eax
    438c: e8 6f dd ff ff               	call	0x2100 <printf@plt>
    4391: 31 ff                        	xor	edi, edi
    4393: e8 98 df ff ff               	call	0x2330 <exit@plt>
    4398: 48 8b 05 59 2c 00 00         	mov	rax, qword ptr [rip + 11353] # 0x6ff8 <vkUpdateDescriptorSets+0x6ff8>
    439f: 48 8b 08                     	mov	rcx, qword ptr [rax]
    43a2: 48 8d 3d 40 0d 00 00         	lea	rdi, [rip + 3392]       # 0x50e9 <vkUpdateDescriptorSets+0x50e9>
    43a9: be 31 00 00 00               	mov	esi, 49
    43ae: ba 01 00 00 00               	mov	edx, 1
    43b3: e8 98 df ff ff               	call	0x2350 <fwrite@plt>
    43b8: bf 01 00 00 00               	mov	edi, 1
    43bd: e8 6e df ff ff               	call	0x2330 <exit@plt>
    43c2: 66 2e 0f 1f 84 00 00 00 00 00	nop	word ptr cs:[rax + rax]
    43cc: 0f 1f 40 00                  	nop	dword ptr [rax]

00000000000043d0 <nnGetVkPhysicalDevices>:
    43d0: 41 56                        	push	r14
    43d2: 53                           	push	rbx
    43d3: 50                           	push	rax
    43d4: 48 89 f3                     	mov	rbx, rsi
    43d7: 49 89 fe                     	mov	r14, rdi
    43da: 48 8d 74 24 04               	lea	rsi, [rsp + 4]
    43df: 31 d2                        	xor	edx, edx
    43e1: e8 4a dc ff ff               	call	0x2030 <vkEnumeratePhysicalDevices@plt>
    43e6: 85 c0                        	test	eax, eax
    43e8: 75 31                        	jne	0x441b <nnGetVkPhysicalDevices+0x4b>
    43ea: 8b 7c 24 04                  	mov	edi, dword ptr [rsp + 4]
    43ee: 89 3b                        	mov	dword ptr [rbx], edi
    43f0: 48 c1 e7 03                  	shl	rdi, 3
    43f4: e8 47 de ff ff               	call	0x2240 <malloc@plt>
    43f9: 48 89 c3                     	mov	rbx, rax
    43fc: 48 8d 74 24 04               	lea	rsi, [rsp + 4]
    4401: 4c 89 f7                     	mov	rdi, r14
    4404: 48 89 c2                     	mov	rdx, rax
    4407: e8 24 dc ff ff               	call	0x2030 <vkEnumeratePhysicalDevices@plt>
    440c: 85 c0                        	test	eax, eax
    440e: 75 2a                        	jne	0x443a <nnGetVkPhysicalDevices+0x6a>
    4410: 48 89 d8                     	mov	rax, rbx
    4413: 48 83 c4 08                  	add	rsp, 8
    4417: 5b                           	pop	rbx
    4418: 41 5e                        	pop	r14
    441a: c3                           	ret
    441b: 48 8d 74 24 04               	lea	rsi, [rsp + 4]
    4420: 4c 89 f7                     	mov	rdi, r14
    4423: 31 d2                        	xor	edx, edx
    4425: e8 06 dc ff ff               	call	0x2030 <vkEnumeratePhysicalDevices@plt>
    442a: 48 8d 3d 29 0c 00 00         	lea	rdi, [rip + 3113]       # 0x505a <vkUpdateDescriptorSets+0x505a>
    4431: 89 c6                        	mov	esi, eax
    4433: ba 82 00 00 00               	mov	edx, 130
    4438: eb 1e                        	jmp	0x4458 <nnGetVkPhysicalDevices+0x88>
    443a: 48 8d 74 24 04               	lea	rsi, [rsp + 4]
    443f: 4c 89 f7                     	mov	rdi, r14
    4442: 48 89 da                     	mov	rdx, rbx
    4445: e8 e6 db ff ff               	call	0x2030 <vkEnumeratePhysicalDevices@plt>
    444a: 48 8d 3d 09 0c 00 00         	lea	rdi, [rip + 3081]       # 0x505a <vkUpdateDescriptorSets+0x505a>
    4451: 89 c6                        	mov	esi, eax
    4453: ba 86 00 00 00               	mov	edx, 134
    4458: 31 c0                        	xor	eax, eax
    445a: e8 a1 dc ff ff               	call	0x2100 <printf@plt>
    445f: 31 ff                        	xor	edi, edi
    4461: e8 ca de ff ff               	call	0x2330 <exit@plt>
    4466: 66 2e 0f 1f 84 00 00 00 00 00	nop	word ptr cs:[rax + rax]

0000000000004470 <nnGetVkQueueComputeIndex>:
    4470: 55                           	push	rbp
    4471: 41 56                        	push	r14
    4473: 53                           	push	rbx
    4474: 48 83 ec 10                  	sub	rsp, 16
    4478: 48 89 fd                     	mov	rbp, rdi
    447b: c7 44 24 0c 00 00 00 00      	mov	dword ptr [rsp + 12], 0
    4483: 4c 8d 74 24 0c               	lea	r14, [rsp + 12]
    4488: 4c 89 f6                     	mov	rsi, r14
    448b: 31 d2                        	xor	edx, edx
    448d: e8 1e dc ff ff               	call	0x20b0 <vkGetPhysicalDeviceQueueFamilyProperties@plt>
    4492: 8b 44 24 0c                  	mov	eax, dword ptr [rsp + 12]
    4496: 48 c1 e0 03                  	shl	rax, 3
    449a: 48 8d 3c 40                  	lea	rdi, [rax + 2*rax]
    449e: e8 9d dd ff ff               	call	0x2240 <malloc@plt>
    44a3: 48 89 c3                     	mov	rbx, rax
    44a6: 48 89 ef                     	mov	rdi, rbp
    44a9: 4c 89 f6                     	mov	rsi, r14
    44ac: 48 89 c2                     	mov	rdx, rax
    44af: e8 fc db ff ff               	call	0x20b0 <vkGetPhysicalDeviceQueueFamilyProperties@plt>
    44b4: 8b 44 24 0c                  	mov	eax, dword ptr [rsp + 12]
    44b8: bd ff ff ff ff               	mov	ebp, 4294967295
    44bd: 48 85 c0                     	test	rax, rax
    44c0: 74 24                        	je	0x44e6 <nnGetVkQueueComputeIndex+0x76>
    44c2: 31 c9                        	xor	ecx, ecx
    44c4: 48 89 da                     	mov	rdx, rbx
    44c7: 66 0f 1f 84 00 00 00 00 00   	nop	word ptr [rax + rax]
    44d0: f6 02 02                     	test	byte ptr [rdx], 2
    44d3: 75 0f                        	jne	0x44e4 <nnGetVkQueueComputeIndex+0x74>
    44d5: 48 83 c1 01                  	add	rcx, 1
    44d9: 48 83 c2 18                  	add	rdx, 24
    44dd: 48 39 c8                     	cmp	rax, rcx
    44e0: 75 ee                        	jne	0x44d0 <nnGetVkQueueComputeIndex+0x60>
    44e2: eb 02                        	jmp	0x44e6 <nnGetVkQueueComputeIndex+0x76>
    44e4: 89 cd                        	mov	ebp, ecx
    44e6: 48 89 df                     	mov	rdi, rbx
    44e9: e8 62 db ff ff               	call	0x2050 <free@plt>
    44ee: 89 e8                        	mov	eax, ebp
    44f0: 48 83 c4 10                  	add	rsp, 16
    44f4: 5b                           	pop	rbx
    44f5: 41 5e                        	pop	r14
    44f7: 5d                           	pop	rbp
    44f8: c3                           	ret
    44f9: 0f 1f 80 00 00 00 00         	nop	dword ptr [rax]

0000000000004500 <nnGetMemoryProperties>:
    4500: 53                           	push	rbx
    4501: 48 81 ec 10 02 00 00         	sub	rsp, 528
    4508: 48 8d 74 24 08               	lea	rsi, [rsp + 8]
    450d: e8 0e dd ff ff               	call	0x2220 <vkGetPhysicalDeviceMemoryProperties@plt>
    4512: 8b 5c 24 08                  	mov	ebx, dword ptr [rsp + 8]
    4516: bf 00 01 00 00               	mov	edi, 256
    451b: e8 20 dd ff ff               	call	0x2240 <malloc@plt>
    4520: 48 89 c2                     	mov	rdx, rax
    4523: c5 fc 10 44 24 0c            	vmovups	ymm0, ymmword ptr [rsp + 12]
    4529: c5 fc 11 00                  	vmovups	ymmword ptr [rax], ymm0
    452d: 89 d8                        	mov	eax, ebx
    452f: 48 81 c4 10 02 00 00         	add	rsp, 528
    4536: 5b                           	pop	rbx
    4537: c5 f8 77                     	vzeroupper
    453a: c3                           	ret
    453b: 0f 1f 44 00 00               	nop	dword ptr [rax + rax]

0000000000004540 <nnFindMemoryProperties>:
    4540: 44 8b 07                     	mov	r8d, dword ptr [rdi]
    4543: b8 ff ff ff ff               	mov	eax, 4294967295
    4548: 4d 85 c0                     	test	r8, r8
    454b: 74 33                        	je	0x4580 <nnFindMemoryProperties+0x40>
    454d: 45 31 c9                     	xor	r9d, r9d
    4550: eb 17                        	jmp	0x4569 <nnFindMemoryProperties+0x29>
    4552: 66 2e 0f 1f 84 00 00 00 00 00	nop	word ptr cs:[rax + rax]
    455c: 0f 1f 40 00                  	nop	dword ptr [rax]
    4560: 49 83 c1 01                  	add	r9, 1
    4564: 4d 39 c8                     	cmp	r8, r9
    4567: 74 17                        	je	0x4580 <nnFindMemoryProperties+0x40>
    4569: 44 0f a3 ce                  	bt	esi, r9d
    456d: 73 f1                        	jae	0x4560 <nnFindMemoryProperties+0x20>
    456f: 48 8b 4f 08                  	mov	rcx, qword ptr [rdi + 8]
    4573: 42 8b 0c c9                  	mov	ecx, dword ptr [rcx + 8*r9]
    4577: f7 d1                        	not	ecx
    4579: 85 ca                        	test	edx, ecx
    457b: 75 e3                        	jne	0x4560 <nnFindMemoryProperties+0x20>
    457d: 44 89 c8                     	mov	eax, r9d
    4580: c3                           	ret
    4581: 66 2e 0f 1f 84 00 00 00 00 00	nop	word ptr cs:[rax + rax]
    458b: 0f 1f 44 00 00               	nop	dword ptr [rax + rax]

0000000000004590 <nnCreateVkDevice>:
    4590: 48 81 ec 88 00 00 00         	sub	rsp, 136
    4597: c7 44 24 0c 00 00 80 3f      	mov	dword ptr [rsp + 12], 1065353216
    459f: c7 44 24 18 02 00 00 00      	mov	dword ptr [rsp + 24], 2
    45a7: 48 c7 44 24 20 00 00 00 00   	mov	qword ptr [rsp + 32], 0
    45b0: c7 44 24 28 00 00 00 00      	mov	dword ptr [rsp + 40], 0
    45b8: 89 74 24 2c                  	mov	dword ptr [rsp + 44], esi
    45bc: c7 44 24 30 01 00 00 00      	mov	dword ptr [rsp + 48], 1
    45c4: 48 8d 44 24 0c               	lea	rax, [rsp + 12]
    45c9: 48 89 44 24 38               	mov	qword ptr [rsp + 56], rax
    45ce: c7 44 24 40 03 00 00 00      	mov	dword ptr [rsp + 64], 3
    45d6: 48 c7 44 24 48 00 00 00 00   	mov	qword ptr [rsp + 72], 0
    45df: 48 b8 00 00 00 00 01 00 00 00	movabs	rax, 4294967296
    45e9: 48 89 44 24 50               	mov	qword ptr [rsp + 80], rax
    45ee: 48 8d 44 24 18               	lea	rax, [rsp + 24]
    45f3: 48 89 44 24 58               	mov	qword ptr [rsp + 88], rax
    45f8: c7 44 24 60 00 00 00 00      	mov	dword ptr [rsp + 96], 0
    4600: 48 c7 44 24 68 00 00 00 00   	mov	qword ptr [rsp + 104], 0
    4609: c7 44 24 70 02 00 00 00      	mov	dword ptr [rsp + 112], 2
    4611: 48 8d 05 e8 2b 00 00         	lea	rax, [rip + 11240]      # 0x7200 <enabledDeviceExtensions>
    4618: 48 89 44 24 78               	mov	qword ptr [rsp + 120], rax
    461d: 48 c7 84 24 80 00 00 00 00 00 00 00  	mov	qword ptr [rsp + 128], 0
    4629: 48 8d 74 24 40               	lea	rsi, [rsp + 64]
    462e: 48 8d 4c 24 10               	lea	rcx, [rsp + 16]
    4633: 31 d2                        	xor	edx, edx
    4635: e8 66 dc ff ff               	call	0x22a0 <vkCreateDevice@plt>
    463a: 85 c0                        	test	eax, eax
    463c: 75 0d                        	jne	0x464b <nnCreateVkDevice+0xbb>
    463e: 48 8b 44 24 10               	mov	rax, qword ptr [rsp + 16]
    4643: 48 81 c4 88 00 00 00         	add	rsp, 136
    464a: c3                           	ret
    464b: 48 8d 3d 08 0a 00 00         	lea	rdi, [rip + 2568]       # 0x505a <vkUpdateDescriptorSets+0x505a>
    4652: 89 c6                        	mov	esi, eax
    4654: ba e1 00 00 00               	mov	edx, 225
    4659: 31 c0                        	xor	eax, eax
    465b: e8 a0 da ff ff               	call	0x2100 <printf@plt>
    4660: 31 ff                        	xor	edi, edi
    4662: e8 c9 dc ff ff               	call	0x2330 <exit@plt>
    4667: 66 0f 1f 84 00 00 00 00 00   	nop	word ptr [rax + rax]

0000000000004670 <nnGetVkDeviceQueue>:
    4670: 50                           	push	rax
    4671: 48 89 e1                     	mov	rcx, rsp
    4674: 31 d2                        	xor	edx, edx
    4676: e8 a5 da ff ff               	call	0x2120 <vkGetDeviceQueue@plt>
    467b: 48 8b 04 24                  	mov	rax, qword ptr [rsp]
    467f: 59                           	pop	rcx
    4680: c3                           	ret
    4681: 66 2e 0f 1f 84 00 00 00 00 00	nop	word ptr cs:[rax + rax]
    468b: 0f 1f 44 00 00               	nop	dword ptr [rax + rax]

0000000000004690 <DestroyDebugUtilsMessengerEXT>:
    4690: 41 57                        	push	r15
    4692: 41 56                        	push	r14
    4694: 53                           	push	rbx
    4695: 49 89 d6                     	mov	r14, rdx
    4698: 49 89 f7                     	mov	r15, rsi
    469b: 48 89 fb                     	mov	rbx, rdi
    469e: 48 8d 35 09 0b 00 00         	lea	rsi, [rip + 2825]       # 0x51ae <vkUpdateDescriptorSets+0x51ae>
    46a5: e8 b6 da ff ff               	call	0x2160 <vkGetInstanceProcAddr@plt>
    46aa: 48 85 c0                     	test	rax, rax
    46ad: 74 10                        	je	0x46bf <DestroyDebugUtilsMessengerEXT+0x2f>
    46af: 48 89 df                     	mov	rdi, rbx
    46b2: 4c 89 fe                     	mov	rsi, r15
    46b5: 4c 89 f2                     	mov	rdx, r14
    46b8: 5b                           	pop	rbx
    46b9: 41 5e                        	pop	r14
    46bb: 41 5f                        	pop	r15
    46bd: ff e0                        	jmp	rax
    46bf: 5b                           	pop	rbx
    46c0: 41 5e                        	pop	r14
    46c2: 41 5f                        	pop	r15
    46c4: c3                           	ret
    46c5: 66 2e 0f 1f 84 00 00 00 00 00	nop	word ptr cs:[rax + rax]
    46cf: 90                           	nop

00000000000046d0 <nnCreateVkDebugUtilsMessenger>:
    46d0: 41 57                        	push	r15
    46d2: 41 56                        	push	r14
    46d4: 53                           	push	rbx
    46d5: 48 83 ec 30                  	sub	rsp, 48
    46d9: 49 89 f6                     	mov	r14, rsi
    46dc: 49 89 ff                     	mov	r15, rdi
    46df: c5 fc 10 05 e1 26 00 00      	vmovups	ymm0, ymmword ptr [rip + 9953] # 0x6dc8 <vkUpdateDescriptorSets+0x6dc8>
    46e7: c5 fc 11 44 24 10            	vmovups	ymmword ptr [rsp + 16], ymm0
    46ed: c5 fc 10 05 c3 26 00 00      	vmovups	ymm0, ymmword ptr [rip + 9923] # 0x6db8 <vkUpdateDescriptorSets+0x6db8>
    46f5: c5 fc 11 04 24               	vmovups	ymmword ptr [rsp], ymm0
    46fa: 48 8d 35 14 0b 00 00         	lea	rsi, [rip + 2836]       # 0x5215 <vkUpdateDescriptorSets+0x5215>
    4701: c5 f8 77                     	vzeroupper
    4704: e8 57 da ff ff               	call	0x2160 <vkGetInstanceProcAddr@plt>
    4709: 48 85 c0                     	test	rax, rax
    470c: 74 12                        	je	0x4720 <nnCreateVkDebugUtilsMessenger+0x50>
    470e: 48 89 c3                     	mov	rbx, rax
    4711: 48 89 e6                     	mov	rsi, rsp
    4714: 4c 89 ff                     	mov	rdi, r15
    4717: 31 d2                        	xor	edx, edx
    4719: 4c 89 f1                     	mov	rcx, r14
    471c: ff d0                        	call	rax
    471e: eb 05                        	jmp	0x4725 <nnCreateVkDebugUtilsMessenger+0x55>
    4720: b8 f9 ff ff ff               	mov	eax, 4294967289
    4725: 48 83 c4 30                  	add	rsp, 48
    4729: 5b                           	pop	rbx
    472a: 41 5e                        	pop	r14
    472c: 41 5f                        	pop	r15
    472e: c3                           	ret
    472f: 90                           	nop

0000000000004730 <debugCallback>:
    4730: 50                           	push	rax
    4731: 48 8b 72 28                  	mov	rsi, qword ptr [rdx + 40]
    4735: 81 ff ff 00 00 00            	cmp	edi, 255
    473b: 7f 13                        	jg	0x4750 <debugCallback+0x20>
    473d: 83 ff 01                     	cmp	edi, 1
    4740: 74 30                        	je	0x4772 <debugCallback+0x42>
    4742: 83 ff 10                     	cmp	edi, 16
    4745: 75 22                        	jne	0x4769 <debugCallback+0x39>
    4747: 48 8d 15 ac 0a 00 00         	lea	rdx, [rip + 2732]       # 0x51fa <vkUpdateDescriptorSets+0x51fa>
    474e: eb 32                        	jmp	0x4782 <debugCallback+0x52>
    4750: 81 ff 00 01 00 00            	cmp	edi, 256
    4756: 74 23                        	je	0x477b <debugCallback+0x4b>
    4758: 81 ff 00 10 00 00            	cmp	edi, 4096
    475e: 75 09                        	jne	0x4769 <debugCallback+0x39>
    4760: 48 8d 15 a0 0a 00 00         	lea	rdx, [rip + 2720]       # 0x5207 <vkUpdateDescriptorSets+0x5207>
    4767: eb 19                        	jmp	0x4782 <debugCallback+0x52>
    4769: 48 8d 15 9d 0a 00 00         	lea	rdx, [rip + 2717]       # 0x520d <vkUpdateDescriptorSets+0x520d>
    4770: eb 10                        	jmp	0x4782 <debugCallback+0x52>
    4772: 48 8d 15 79 0a 00 00         	lea	rdx, [rip + 2681]       # 0x51f2 <vkUpdateDescriptorSets+0x51f2>
    4779: eb 07                        	jmp	0x4782 <debugCallback+0x52>
    477b: 48 8d 15 7d 0a 00 00         	lea	rdx, [rip + 2685]       # 0x51ff <vkUpdateDescriptorSets+0x51ff>
    4782: 48 8d 3d 45 0a 00 00         	lea	rdi, [rip + 2629]       # 0x51ce <vkUpdateDescriptorSets+0x51ce>
    4789: 31 c0                        	xor	eax, eax
    478b: e8 70 d9 ff ff               	call	0x2100 <printf@plt>
    4790: 31 c0                        	xor	eax, eax
    4792: 59                           	pop	rcx
    4793: c3                           	ret
    4794: 66 2e 0f 1f 84 00 00 00 00 00	nop	word ptr cs:[rax + rax]
    479e: 66 90                        	nop

00000000000047a0 <nnCreateVkDescriptorSetLayoutBindingStorageBuffer>:
    47a0: 48 89 f8                     	mov	rax, rdi
    47a3: 48 c7 47 10 00 00 00 00      	mov	qword ptr [rdi + 16], 0
    47ab: 89 37                        	mov	dword ptr [rdi], esi
    47ad: 48 b9 07 00 00 00 01 00 00 00	movabs	rcx, 4294967303
    47b7: 48 89 4f 04                  	mov	qword ptr [rdi + 4], rcx
    47bb: c7 47 0c 20 00 00 00         	mov	dword ptr [rdi + 12], 32
    47c2: c3                           	ret
    47c3: 66 2e 0f 1f 84 00 00 00 00 00	nop	word ptr cs:[rax + rax]
    47cd: 0f 1f 00                     	nop	dword ptr [rax]

00000000000047d0 <nnCreateVkPipelineCache>:
    47d0: 41 56                        	push	r14
    47d2: 53                           	push	rbx
    47d3: 48 83 ec 38                  	sub	rsp, 56
    47d7: 48 89 f0                     	mov	rax, rsi
    47da: 49 89 fe                     	mov	r14, rdi
    47dd: 48 8d 74 24 08               	lea	rsi, [rsp + 8]
    47e2: 48 89 c7                     	mov	rdi, rax
    47e5: e8 c6 d9 ff ff               	call	0x21b0 <nnReadBinaryFile@plt>
    47ea: 48 89 c3                     	mov	rbx, rax
    47ed: c7 44 24 10 11 00 00 00      	mov	dword ptr [rsp + 16], 17
    47f5: 48 c7 44 24 18 00 00 00 00   	mov	qword ptr [rsp + 24], 0
    47fe: c7 44 24 20 00 00 00 00      	mov	dword ptr [rsp + 32], 0
    4806: 48 8b 44 24 08               	mov	rax, qword ptr [rsp + 8]
    480b: 48 89 44 24 28               	mov	qword ptr [rsp + 40], rax
    4810: 48 89 5c 24 30               	mov	qword ptr [rsp + 48], rbx
    4815: 48 8d 74 24 10               	lea	rsi, [rsp + 16]
    481a: 48 89 e1                     	mov	rcx, rsp
    481d: 4c 89 f7                     	mov	rdi, r14
    4820: 31 d2                        	xor	edx, edx
    4822: e8 b9 d8 ff ff               	call	0x20e0 <vkCreatePipelineCache@plt>
    4827: 85 c0                        	test	eax, eax
    4829: 75 19                        	jne	0x4844 <nnCreateVkPipelineCache+0x74>
    482b: 48 85 db                     	test	rbx, rbx
    482e: 74 08                        	je	0x4838 <nnCreateVkPipelineCache+0x68>
    4830: 48 89 df                     	mov	rdi, rbx
    4833: e8 18 d8 ff ff               	call	0x2050 <free@plt>
    4838: 48 8b 04 24                  	mov	rax, qword ptr [rsp]
    483c: 48 83 c4 38                  	add	rsp, 56
    4840: 5b                           	pop	rbx
    4841: 41 5e                        	pop	r14
    4843: c3                           	ret
    4844: 48 8d 74 24 10               	lea	rsi, [rsp + 16]
    4849: 48 89 e1                     	mov	rcx, rsp
    484c: 4c 89 f7                     	mov	rdi, r14
    484f: 31 d2                        	xor	edx, edx
    4851: e8 8a d8 ff ff               	call	0x20e0 <vkCreatePipelineCache@plt>
    4856: 48 8d 3d fd 07 00 00         	lea	rdi, [rip + 2045]       # 0x505a <vkUpdateDescriptorSets+0x505a>
    485d: 89 c6                        	mov	esi, eax
    485f: ba 1b 00 00 00               	mov	edx, 27
    4864: 31 c0                        	xor	eax, eax
    4866: e8 95 d8 ff ff               	call	0x2100 <printf@plt>
    486b: 31 ff                        	xor	edi, edi
    486d: e8 be da ff ff               	call	0x2330 <exit@plt>
    4872: 66 2e 0f 1f 84 00 00 00 00 00	nop	word ptr cs:[rax + rax]
    487c: 0f 1f 40 00                  	nop	dword ptr [rax]

0000000000004880 <nnCreateVkComputePipeline2MatricesAndOutput>:
    4880: 41 57                        	push	r15
    4882: 41 56                        	push	r14
    4884: 41 55                        	push	r13
    4886: 41 54                        	push	r12
    4888: 53                           	push	rbx
    4889: 48 81 ec 00 01 00 00         	sub	rsp, 256
    4890: 49 89 d4                     	mov	r12, rdx
    4893: 49 89 f6                     	mov	r14, rsi
    4896: 49 89 ff                     	mov	r15, rdi
    4899: bf 48 00 00 00               	mov	edi, 72
    489e: e8 9d d9 ff ff               	call	0x2240 <malloc@plt>
    48a3: 48 89 c3                     	mov	rbx, rax
    48a6: c5 f8 28 05 92 09 00 00      	vmovaps	xmm0, xmmword ptr [rip + 2450] # 0x5240 <vkUpdateDescriptorSets+0x5240>
    48ae: c5 f8 11 00                  	vmovups	xmmword ptr [rax], xmm0
    48b2: 48 c7 40 10 00 00 00 00      	mov	qword ptr [rax + 16], 0
    48ba: c5 f8 28 05 8e 09 00 00      	vmovaps	xmm0, xmmword ptr [rip + 2446] # 0x5250 <vkUpdateDescriptorSets+0x5250>
    48c2: c5 f8 11 40 18               	vmovups	xmmword ptr [rax + 24], xmm0
    48c7: 48 c7 40 28 00 00 00 00      	mov	qword ptr [rax + 40], 0
    48cf: c5 f8 28 05 89 09 00 00      	vmovaps	xmm0, xmmword ptr [rip + 2441] # 0x5260 <vkUpdateDescriptorSets+0x5260>
    48d7: c5 f8 11 40 30               	vmovups	xmmword ptr [rax + 48], xmm0
    48dc: 48 c7 40 40 00 00 00 00      	mov	qword ptr [rax + 64], 0
    48e4: c7 44 24 28 20 00 00 00      	mov	dword ptr [rsp + 40], 32
    48ec: 48 c7 44 24 30 00 00 00 00   	mov	qword ptr [rsp + 48], 0
    48f5: 48 b8 00 00 00 00 03 00 00 00	movabs	rax, 12884901888
    48ff: 48 89 44 24 38               	mov	qword ptr [rsp + 56], rax
    4904: 48 89 5c 24 40               	mov	qword ptr [rsp + 64], rbx
    4909: 48 8d 74 24 28               	lea	rsi, [rsp + 40]
    490e: 4c 8d 6c 24 20               	lea	r13, [rsp + 32]
    4913: 4c 89 ff                     	mov	rdi, r15
    4916: 31 d2                        	xor	edx, edx
    4918: 4c 89 e9                     	mov	rcx, r13
    491b: e8 20 d7 ff ff               	call	0x2040 <vkCreateDescriptorSetLayout@plt>
    4920: 85 c0                        	test	eax, eax
    4922: 0f 85 ab 01 00 00            	jne	0x4ad3 <nnCreateVkComputePipeline2MatricesAndOutput+0x253>
    4928: c7 44 24 70 1e 00 00 00      	mov	dword ptr [rsp + 112], 30
    4930: 48 c7 44 24 78 00 00 00 00   	mov	qword ptr [rsp + 120], 0
    4939: 48 b8 00 00 00 00 01 00 00 00	movabs	rax, 4294967296
    4943: 48 89 84 24 80 00 00 00      	mov	qword ptr [rsp + 128], rax
    494b: 4c 89 ac 24 88 00 00 00      	mov	qword ptr [rsp + 136], r13
    4953: c7 84 24 90 00 00 00 00 00 00 00     	mov	dword ptr [rsp + 144], 0
    495e: 48 c7 84 24 98 00 00 00 00 00 00 00  	mov	qword ptr [rsp + 152], 0
    496a: 48 8d 74 24 70               	lea	rsi, [rsp + 112]
    496f: 48 8d 4c 24 10               	lea	rcx, [rsp + 16]
    4974: 4c 89 ff                     	mov	rdi, r15
    4977: 31 d2                        	xor	edx, edx
    4979: e8 02 d9 ff ff               	call	0x2280 <vkCreatePipelineLayout@plt>
    497e: 85 c0                        	test	eax, eax
    4980: 0f 85 74 01 00 00            	jne	0x4afa <nnCreateVkComputePipeline2MatricesAndOutput+0x27a>
    4986: 48 8d 74 24 18               	lea	rsi, [rsp + 24]
    498b: 4c 89 e7                     	mov	rdi, r12
    498e: e8 1d d8 ff ff               	call	0x21b0 <nnReadBinaryFile@plt>
    4993: 48 85 c0                     	test	rax, rax
    4996: 0f 84 82 01 00 00            	je	0x4b1e <nnCreateVkComputePipeline2MatricesAndOutput+0x29e>
    499c: 49 89 c4                     	mov	r12, rax
    499f: c7 44 24 48 10 00 00 00      	mov	dword ptr [rsp + 72], 16
    49a7: 48 c7 44 24 50 00 00 00 00   	mov	qword ptr [rsp + 80], 0
    49b0: c7 44 24 58 00 00 00 00      	mov	dword ptr [rsp + 88], 0
    49b8: 48 8b 44 24 18               	mov	rax, qword ptr [rsp + 24]
    49bd: 48 89 44 24 60               	mov	qword ptr [rsp + 96], rax
    49c2: 4c 89 64 24 68               	mov	qword ptr [rsp + 104], r12
    49c7: 48 8d 74 24 48               	lea	rsi, [rsp + 72]
    49cc: 48 89 e1                     	mov	rcx, rsp
    49cf: 4c 89 ff                     	mov	rdi, r15
    49d2: 31 d2                        	xor	edx, edx
    49d4: e8 d7 d8 ff ff               	call	0x22b0 <vkCreateShaderModule@plt>
    49d9: 85 c0                        	test	eax, eax
    49db: 0f 85 67 01 00 00            	jne	0x4b48 <nnCreateVkComputePipeline2MatricesAndOutput+0x2c8>
    49e1: c7 84 24 a0 00 00 00 1d 00 00 00     	mov	dword ptr [rsp + 160], 29
    49ec: 48 c7 84 24 a8 00 00 00 00 00 00 00  	mov	qword ptr [rsp + 168], 0
    49f8: c7 84 24 b0 00 00 00 00 00 00 00     	mov	dword ptr [rsp + 176], 0
    4a03: c7 84 24 b8 00 00 00 12 00 00 00     	mov	dword ptr [rsp + 184], 18
    4a0e: 48 c7 84 24 c0 00 00 00 00 00 00 00  	mov	qword ptr [rsp + 192], 0
    4a1a: 48 b8 00 00 00 00 20 00 00 00	movabs	rax, 137438953472
    4a24: 48 89 84 24 c8 00 00 00      	mov	qword ptr [rsp + 200], rax
    4a2c: 48 8b 04 24                  	mov	rax, qword ptr [rsp]
    4a30: 48 89 84 24 d0 00 00 00      	mov	qword ptr [rsp + 208], rax
    4a38: 48 8d 05 51 08 00 00         	lea	rax, [rip + 2129]       # 0x5290 <vkUpdateDescriptorSets+0x5290>
    4a3f: 48 89 84 24 d8 00 00 00      	mov	qword ptr [rsp + 216], rax
    4a47: 48 c7 84 24 e0 00 00 00 00 00 00 00  	mov	qword ptr [rsp + 224], 0
    4a53: 48 8b 44 24 10               	mov	rax, qword ptr [rsp + 16]
    4a58: 48 89 84 24 e8 00 00 00      	mov	qword ptr [rsp + 232], rax
    4a60: 48 c7 84 24 f0 00 00 00 00 00 00 00  	mov	qword ptr [rsp + 240], 0
    4a6c: c7 84 24 f8 00 00 00 00 00 00 00     	mov	dword ptr [rsp + 248], 0
    4a77: 48 8d 8c 24 a0 00 00 00      	lea	rcx, [rsp + 160]
    4a7f: 4c 8d 4c 24 08               	lea	r9, [rsp + 8]
    4a84: 4c 89 ff                     	mov	rdi, r15
    4a87: 4c 89 f6                     	mov	rsi, r14
    4a8a: ba 01 00 00 00               	mov	edx, 1
    4a8f: 45 31 c0                     	xor	r8d, r8d
    4a92: e8 69 d7 ff ff               	call	0x2200 <vkCreateComputePipelines@plt>
    4a97: 85 c0                        	test	eax, eax
    4a99: 0f 85 cb 00 00 00            	jne	0x4b6a <nnCreateVkComputePipeline2MatricesAndOutput+0x2ea>
    4a9f: 4c 89 e7                     	mov	rdi, r12
    4aa2: e8 a9 d5 ff ff               	call	0x2050 <free@plt>
    4aa7: 48 89 df                     	mov	rdi, rbx
    4aaa: e8 a1 d5 ff ff               	call	0x2050 <free@plt>
    4aaf: 48 8b 34 24                  	mov	rsi, qword ptr [rsp]
    4ab3: 4c 89 ff                     	mov	rdi, r15
    4ab6: 31 d2                        	xor	edx, edx
    4ab8: e8 13 d7 ff ff               	call	0x21d0 <vkDestroyShaderModule@plt>
    4abd: 48 8b 44 24 08               	mov	rax, qword ptr [rsp + 8]
    4ac2: 48 81 c4 00 01 00 00         	add	rsp, 256
    4ac9: 5b                           	pop	rbx
    4aca: 41 5c                        	pop	r12
    4acc: 41 5d                        	pop	r13
    4ace: 41 5e                        	pop	r14
    4ad0: 41 5f                        	pop	r15
    4ad2: c3                           	ret
    4ad3: 48 8d 74 24 28               	lea	rsi, [rsp + 40]
    4ad8: 48 8d 4c 24 20               	lea	rcx, [rsp + 32]
    4add: 4c 89 ff                     	mov	rdi, r15
    4ae0: 31 d2                        	xor	edx, edx
    4ae2: e8 59 d5 ff ff               	call	0x2040 <vkCreateDescriptorSetLayout@plt>
    4ae7: 48 8d 3d 6c 05 00 00         	lea	rdi, [rip + 1388]       # 0x505a <vkUpdateDescriptorSets+0x505a>
    4aee: 89 c6                        	mov	esi, eax
    4af0: ba 36 00 00 00               	mov	edx, 54
    4af5: e9 9e 00 00 00               	jmp	0x4b98 <nnCreateVkComputePipeline2MatricesAndOutput+0x318>
    4afa: 48 8d 74 24 70               	lea	rsi, [rsp + 112]
    4aff: 48 8d 4c 24 10               	lea	rcx, [rsp + 16]
    4b04: 4c 89 ff                     	mov	rdi, r15
    4b07: 31 d2                        	xor	edx, edx
    4b09: e8 72 d7 ff ff               	call	0x2280 <vkCreatePipelineLayout@plt>
    4b0e: 48 8d 3d 45 05 00 00         	lea	rdi, [rip + 1349]       # 0x505a <vkUpdateDescriptorSets+0x505a>
    4b15: 89 c6                        	mov	esi, eax
    4b17: ba 43 00 00 00               	mov	edx, 67
    4b1c: eb 7a                        	jmp	0x4b98 <nnCreateVkComputePipeline2MatricesAndOutput+0x318>
    4b1e: 48 8b 05 d3 24 00 00         	mov	rax, qword ptr [rip + 9427] # 0x6ff8 <vkUpdateDescriptorSets+0x6ff8>
    4b25: 48 8b 08                     	mov	rcx, qword ptr [rax]
    4b28: 48 8d 3d 41 07 00 00         	lea	rdi, [rip + 1857]       # 0x5270 <vkUpdateDescriptorSets+0x5270>
    4b2f: be 1f 00 00 00               	mov	esi, 31
    4b34: ba 01 00 00 00               	mov	edx, 1
    4b39: e8 12 d8 ff ff               	call	0x2350 <fwrite@plt>
    4b3e: bf 01 00 00 00               	mov	edi, 1
    4b43: e8 e8 d7 ff ff               	call	0x2330 <exit@plt>
    4b48: 48 8d 74 24 48               	lea	rsi, [rsp + 72]
    4b4d: 48 89 e1                     	mov	rcx, rsp
    4b50: 4c 89 ff                     	mov	rdi, r15
    4b53: 31 d2                        	xor	edx, edx
    4b55: e8 56 d7 ff ff               	call	0x22b0 <vkCreateShaderModule@plt>
    4b5a: 48 8d 3d f9 04 00 00         	lea	rdi, [rip + 1273]       # 0x505a <vkUpdateDescriptorSets+0x505a>
    4b61: 89 c6                        	mov	esi, eax
    4b63: ba 56 00 00 00               	mov	edx, 86
    4b68: eb 2e                        	jmp	0x4b98 <nnCreateVkComputePipeline2MatricesAndOutput+0x318>
    4b6a: 48 8d 8c 24 a0 00 00 00      	lea	rcx, [rsp + 160]
    4b72: 4c 8d 4c 24 08               	lea	r9, [rsp + 8]
    4b77: 4c 89 ff                     	mov	rdi, r15
    4b7a: 4c 89 f6                     	mov	rsi, r14
    4b7d: ba 01 00 00 00               	mov	edx, 1
    4b82: 45 31 c0                     	xor	r8d, r8d
    4b85: e8 76 d6 ff ff               	call	0x2200 <vkCreateComputePipelines@plt>
    4b8a: 48 8d 3d c9 04 00 00         	lea	rdi, [rip + 1225]       # 0x505a <vkUpdateDescriptorSets+0x505a>
    4b91: 89 c6                        	mov	esi, eax
    4b93: ba 63 00 00 00               	mov	edx, 99
    4b98: 31 c0                        	xor	eax, eax
    4b9a: e8 61 d5 ff ff               	call	0x2100 <printf@plt>
    4b9f: 31 ff                        	xor	edi, edi
    4ba1: e8 8a d7 ff ff               	call	0x2330 <exit@plt>
    4ba6: 66 2e 0f 1f 84 00 00 00 00 00	nop	word ptr cs:[rax + rax]

0000000000004bb0 <nnCreateVkComputePipelineCorrelate2dValid>:
    4bb0: 41 57                        	push	r15
    4bb2: 41 56                        	push	r14
    4bb4: 41 54                        	push	r12
    4bb6: 53                           	push	rbx
    4bb7: 48 81 ec 08 01 00 00         	sub	rsp, 264
    4bbe: 49 89 f6                     	mov	r14, rsi
    4bc1: 49 89 ff                     	mov	r15, rdi
    4bc4: bf 48 00 00 00               	mov	edi, 72
    4bc9: e8 72 d6 ff ff               	call	0x2240 <malloc@plt>
    4bce: 48 89 c3                     	mov	rbx, rax
    4bd1: c5 f8 28 05 67 06 00 00      	vmovaps	xmm0, xmmword ptr [rip + 1639] # 0x5240 <vkUpdateDescriptorSets+0x5240>
    4bd9: c5 f8 11 00                  	vmovups	xmmword ptr [rax], xmm0
    4bdd: 48 c7 40 10 00 00 00 00      	mov	qword ptr [rax + 16], 0
    4be5: c5 f8 28 05 63 06 00 00      	vmovaps	xmm0, xmmword ptr [rip + 1635] # 0x5250 <vkUpdateDescriptorSets+0x5250>
    4bed: c5 f8 11 40 18               	vmovups	xmmword ptr [rax + 24], xmm0
    4bf2: 48 c7 40 28 00 00 00 00      	mov	qword ptr [rax + 40], 0
    4bfa: c5 f8 28 05 5e 06 00 00      	vmovaps	xmm0, xmmword ptr [rip + 1630] # 0x5260 <vkUpdateDescriptorSets+0x5260>
    4c02: c5 f8 11 40 30               	vmovups	xmmword ptr [rax + 48], xmm0
    4c07: 48 c7 40 40 00 00 00 00      	mov	qword ptr [rax + 64], 0
    4c0f: c7 44 24 30 20 00 00 00      	mov	dword ptr [rsp + 48], 32
    4c17: 48 c7 44 24 38 00 00 00 00   	mov	qword ptr [rsp + 56], 0
    4c20: 48 b8 00 00 00 00 03 00 00 00	movabs	rax, 12884901888
    4c2a: 48 89 44 24 40               	mov	qword ptr [rsp + 64], rax
    4c2f: 48 89 5c 24 48               	mov	qword ptr [rsp + 72], rbx
    4c34: 48 8d 74 24 30               	lea	rsi, [rsp + 48]
    4c39: 4c 8d 64 24 28               	lea	r12, [rsp + 40]
    4c3e: 4c 89 ff                     	mov	rdi, r15
    4c41: 31 d2                        	xor	edx, edx
    4c43: 4c 89 e1                     	mov	rcx, r12
    4c46: e8 f5 d3 ff ff               	call	0x2040 <vkCreateDescriptorSetLayout@plt>
    4c4b: 85 c0                        	test	eax, eax
    4c4d: 0f 85 b4 01 00 00            	jne	0x4e07 <nnCreateVkComputePipelineCorrelate2dValid+0x257>
    4c53: c7 44 24 78 1e 00 00 00      	mov	dword ptr [rsp + 120], 30
    4c5b: 48 c7 84 24 80 00 00 00 00 00 00 00  	mov	qword ptr [rsp + 128], 0
    4c67: 48 b8 00 00 00 00 01 00 00 00	movabs	rax, 4294967296
    4c71: 48 89 84 24 88 00 00 00      	mov	qword ptr [rsp + 136], rax
    4c79: 4c 89 a4 24 90 00 00 00      	mov	qword ptr [rsp + 144], r12
    4c81: c7 84 24 98 00 00 00 00 00 00 00     	mov	dword ptr [rsp + 152], 0
    4c8c: 48 c7 84 24 a0 00 00 00 00 00 00 00  	mov	qword ptr [rsp + 160], 0
    4c98: 48 8d 74 24 78               	lea	rsi, [rsp + 120]
    4c9d: 48 8d 4c 24 18               	lea	rcx, [rsp + 24]
    4ca2: 4c 89 ff                     	mov	rdi, r15
    4ca5: 31 d2                        	xor	edx, edx
    4ca7: e8 d4 d5 ff ff               	call	0x2280 <vkCreatePipelineLayout@plt>
    4cac: 85 c0                        	test	eax, eax
    4cae: 0f 85 7a 01 00 00            	jne	0x4e2e <nnCreateVkComputePipelineCorrelate2dValid+0x27e>
    4cb4: 48 8d 3d da 05 00 00         	lea	rdi, [rip + 1498]       # 0x5295 <vkUpdateDescriptorSets+0x5295>
    4cbb: 48 8d 74 24 20               	lea	rsi, [rsp + 32]
    4cc0: e8 eb d4 ff ff               	call	0x21b0 <nnReadBinaryFile@plt>
    4cc5: 48 85 c0                     	test	rax, rax
    4cc8: 0f 84 84 01 00 00            	je	0x4e52 <nnCreateVkComputePipelineCorrelate2dValid+0x2a2>
    4cce: 49 89 c4                     	mov	r12, rax
    4cd1: c7 44 24 50 10 00 00 00      	mov	dword ptr [rsp + 80], 16
    4cd9: 48 c7 44 24 58 00 00 00 00   	mov	qword ptr [rsp + 88], 0
    4ce2: c7 44 24 60 00 00 00 00      	mov	dword ptr [rsp + 96], 0
    4cea: 48 8b 44 24 20               	mov	rax, qword ptr [rsp + 32]
    4cef: 48 89 44 24 68               	mov	qword ptr [rsp + 104], rax
    4cf4: 4c 89 64 24 70               	mov	qword ptr [rsp + 112], r12
    4cf9: 48 8d 74 24 50               	lea	rsi, [rsp + 80]
    4cfe: 48 8d 4c 24 08               	lea	rcx, [rsp + 8]
    4d03: 4c 89 ff                     	mov	rdi, r15
    4d06: 31 d2                        	xor	edx, edx
    4d08: e8 a3 d5 ff ff               	call	0x22b0 <vkCreateShaderModule@plt>
    4d0d: 85 c0                        	test	eax, eax
    4d0f: 0f 85 67 01 00 00            	jne	0x4e7c <nnCreateVkComputePipelineCorrelate2dValid+0x2cc>
    4d15: c7 84 24 a8 00 00 00 1d 00 00 00     	mov	dword ptr [rsp + 168], 29
    4d20: 48 c7 84 24 b0 00 00 00 00 00 00 00  	mov	qword ptr [rsp + 176], 0
    4d2c: c7 84 24 b8 00 00 00 00 00 00 00     	mov	dword ptr [rsp + 184], 0
    4d37: c7 84 24 c0 00 00 00 12 00 00 00     	mov	dword ptr [rsp + 192], 18
    4d42: 48 c7 84 24 c8 00 00 00 00 00 00 00  	mov	qword ptr [rsp + 200], 0
    4d4e: 48 b8 00 00 00 00 20 00 00 00	movabs	rax, 137438953472
    4d58: 48 89 84 24 d0 00 00 00      	mov	qword ptr [rsp + 208], rax
    4d60: 48 8b 44 24 08               	mov	rax, qword ptr [rsp + 8]
    4d65: 48 89 84 24 d8 00 00 00      	mov	qword ptr [rsp + 216], rax
    4d6d: 48 8d 05 1c 05 00 00         	lea	rax, [rip + 1308]       # 0x5290 <vkUpdateDescriptorSets+0x5290>
    4d74: 48 89 84 24 e0 00 00 00      	mov	qword ptr [rsp + 224], rax
    4d7c: 48 c7 84 24 e8 00 00 00 00 00 00 00  	mov	qword ptr [rsp + 232], 0
    4d88: 48 8b 44 24 18               	mov	rax, qword ptr [rsp + 24]
    4d8d: 48 89 84 24 f0 00 00 00      	mov	qword ptr [rsp + 240], rax
    4d95: 48 c7 84 24 f8 00 00 00 00 00 00 00  	mov	qword ptr [rsp + 248], 0
    4da1: c7 84 24 00 01 00 00 00 00 00 00     	mov	dword ptr [rsp + 256], 0
    4dac: 48 8d 8c 24 a8 00 00 00      	lea	rcx, [rsp + 168]
    4db4: 4c 8d 4c 24 10               	lea	r9, [rsp + 16]
    4db9: 4c 89 ff                     	mov	rdi, r15
    4dbc: 4c 89 f6                     	mov	rsi, r14
    4dbf: ba 01 00 00 00               	mov	edx, 1
    4dc4: 45 31 c0                     	xor	r8d, r8d
    4dc7: e8 34 d4 ff ff               	call	0x2200 <vkCreateComputePipelines@plt>
    4dcc: 85 c0                        	test	eax, eax
    4dce: 0f 85 cc 00 00 00            	jne	0x4ea0 <nnCreateVkComputePipelineCorrelate2dValid+0x2f0>
    4dd4: 4c 89 e7                     	mov	rdi, r12
    4dd7: e8 74 d2 ff ff               	call	0x2050 <free@plt>
    4ddc: 48 89 df                     	mov	rdi, rbx
    4ddf: e8 6c d2 ff ff               	call	0x2050 <free@plt>
    4de4: 48 8b 74 24 08               	mov	rsi, qword ptr [rsp + 8]
    4de9: 4c 89 ff                     	mov	rdi, r15
    4dec: 31 d2                        	xor	edx, edx
    4dee: e8 dd d3 ff ff               	call	0x21d0 <vkDestroyShaderModule@plt>
    4df3: 48 8b 44 24 10               	mov	rax, qword ptr [rsp + 16]
    4df8: 48 81 c4 08 01 00 00         	add	rsp, 264
    4dff: 5b                           	pop	rbx
    4e00: 41 5c                        	pop	r12
    4e02: 41 5e                        	pop	r14
    4e04: 41 5f                        	pop	r15
    4e06: c3                           	ret
    4e07: 48 8d 74 24 30               	lea	rsi, [rsp + 48]
    4e0c: 48 8d 4c 24 28               	lea	rcx, [rsp + 40]
    4e11: 4c 89 ff                     	mov	rdi, r15
    4e14: 31 d2                        	xor	edx, edx
    4e16: e8 25 d2 ff ff               	call	0x2040 <vkCreateDescriptorSetLayout@plt>
    4e1b: 48 8d 3d 38 02 00 00         	lea	rdi, [rip + 568]        # 0x505a <vkUpdateDescriptorSets+0x505a>
    4e22: 89 c6                        	mov	esi, eax
    4e24: ba 7d 00 00 00               	mov	edx, 125
    4e29: e9 a0 00 00 00               	jmp	0x4ece <nnCreateVkComputePipelineCorrelate2dValid+0x31e>
    4e2e: 48 8d 74 24 78               	lea	rsi, [rsp + 120]
    4e33: 48 8d 4c 24 18               	lea	rcx, [rsp + 24]
    4e38: 4c 89 ff                     	mov	rdi, r15
    4e3b: 31 d2                        	xor	edx, edx
    4e3d: e8 3e d4 ff ff               	call	0x2280 <vkCreatePipelineLayout@plt>
    4e42: 48 8d 3d 11 02 00 00         	lea	rdi, [rip + 529]        # 0x505a <vkUpdateDescriptorSets+0x505a>
    4e49: 89 c6                        	mov	esi, eax
    4e4b: ba 8a 00 00 00               	mov	edx, 138
    4e50: eb 7c                        	jmp	0x4ece <nnCreateVkComputePipelineCorrelate2dValid+0x31e>
    4e52: 48 8b 05 9f 21 00 00         	mov	rax, qword ptr [rip + 8607] # 0x6ff8 <vkUpdateDescriptorSets+0x6ff8>
    4e59: 48 8b 08                     	mov	rcx, qword ptr [rax]
    4e5c: 48 8d 3d 0d 04 00 00         	lea	rdi, [rip + 1037]       # 0x5270 <vkUpdateDescriptorSets+0x5270>
    4e63: be 1f 00 00 00               	mov	esi, 31
    4e68: ba 01 00 00 00               	mov	edx, 1
    4e6d: e8 de d4 ff ff               	call	0x2350 <fwrite@plt>
    4e72: bf 01 00 00 00               	mov	edi, 1
    4e77: e8 b4 d4 ff ff               	call	0x2330 <exit@plt>
    4e7c: 48 8d 74 24 50               	lea	rsi, [rsp + 80]
    4e81: 48 8d 4c 24 08               	lea	rcx, [rsp + 8]
    4e86: 4c 89 ff                     	mov	rdi, r15
    4e89: 31 d2                        	xor	edx, edx
    4e8b: e8 20 d4 ff ff               	call	0x22b0 <vkCreateShaderModule@plt>
    4e90: 48 8d 3d c3 01 00 00         	lea	rdi, [rip + 451]        # 0x505a <vkUpdateDescriptorSets+0x505a>
    4e97: 89 c6                        	mov	esi, eax
    4e99: ba 9d 00 00 00               	mov	edx, 157
    4e9e: eb 2e                        	jmp	0x4ece <nnCreateVkComputePipelineCorrelate2dValid+0x31e>
    4ea0: 48 8d 8c 24 a8 00 00 00      	lea	rcx, [rsp + 168]
    4ea8: 4c 8d 4c 24 10               	lea	r9, [rsp + 16]
    4ead: 4c 89 ff                     	mov	rdi, r15
    4eb0: 4c 89 f6                     	mov	rsi, r14
    4eb3: ba 01 00 00 00               	mov	edx, 1
    4eb8: 45 31 c0                     	xor	r8d, r8d
    4ebb: e8 40 d3 ff ff               	call	0x2200 <vkCreateComputePipelines@plt>
    4ec0: 48 8d 3d 93 01 00 00         	lea	rdi, [rip + 403]        # 0x505a <vkUpdateDescriptorSets+0x505a>
    4ec7: 89 c6                        	mov	esi, eax
    4ec9: ba aa 00 00 00               	mov	edx, 170
    4ece: 31 c0                        	xor	eax, eax
    4ed0: e8 2b d2 ff ff               	call	0x2100 <printf@plt>
    4ed5: 31 ff                        	xor	edi, edi
    4ed7: e8 54 d4 ff ff               	call	0x2330 <exit@plt>
    4edc: 0f 1f 40 00                  	nop	dword ptr [rax]

0000000000004ee0 <nnSaveVkPipelineCache>:
    4ee0: 41 57                        	push	r15
    4ee2: 41 56                        	push	r14
    4ee4: 53                           	push	rbx
    4ee5: 48 83 ec 10                  	sub	rsp, 16
    4ee9: 49 89 f6                     	mov	r14, rsi
    4eec: 49 89 ff                     	mov	r15, rdi
    4eef: 48 8d 54 24 08               	lea	rdx, [rsp + 8]
    4ef4: 31 c9                        	xor	ecx, ecx
    4ef6: e8 05 d4 ff ff               	call	0x2300 <vkGetPipelineCacheData@plt>
    4efb: 85 c0                        	test	eax, eax
    4efd: 75 5b                        	jne	0x4f5a <nnSaveVkPipelineCache+0x7a>
    4eff: 48 8b 7c 24 08               	mov	rdi, qword ptr [rsp + 8]
    4f04: e8 37 d3 ff ff               	call	0x2240 <malloc@plt>
    4f09: 48 89 c3                     	mov	rbx, rax
    4f0c: 48 8d 54 24 08               	lea	rdx, [rsp + 8]
    4f11: 4c 89 ff                     	mov	rdi, r15
    4f14: 4c 89 f6                     	mov	rsi, r14
    4f17: 48 89 c1                     	mov	rcx, rax
    4f1a: e8 e1 d3 ff ff               	call	0x2300 <vkGetPipelineCacheData@plt>
    4f1f: 85 c0                        	test	eax, eax
    4f21: 75 59                        	jne	0x4f7c <nnSaveVkPipelineCache+0x9c>
    4f23: 48 8b 54 24 08               	mov	rdx, qword ptr [rsp + 8]
    4f28: 48 8d 3d 85 03 00 00         	lea	rdi, [rip + 901]        # 0x52b4 <vkUpdateDescriptorSets+0x52b4>
    4f2f: 48 89 de                     	mov	rsi, rbx
    4f32: e8 d9 d3 ff ff               	call	0x2310 <nnWriteBinaryFile@plt>
    4f37: 85 c0                        	test	eax, eax
    4f39: 75 64                        	jne	0x4f9f <nnSaveVkPipelineCache+0xbf>
    4f3b: 4c 89 ff                     	mov	rdi, r15
    4f3e: 4c 89 f6                     	mov	rsi, r14
    4f41: 31 d2                        	xor	edx, edx
    4f43: e8 28 d2 ff ff               	call	0x2170 <vkDestroyPipelineCache@plt>
    4f48: 48 89 df                     	mov	rdi, rbx
    4f4b: e8 00 d1 ff ff               	call	0x2050 <free@plt>
    4f50: 48 83 c4 10                  	add	rsp, 16
    4f54: 5b                           	pop	rbx
    4f55: 41 5e                        	pop	r14
    4f57: 41 5f                        	pop	r15
    4f59: c3                           	ret
    4f5a: 48 8d 54 24 08               	lea	rdx, [rsp + 8]
    4f5f: 4c 89 ff                     	mov	rdi, r15
    4f62: 4c 89 f6                     	mov	rsi, r14
    4f65: 31 c9                        	xor	ecx, ecx
    4f67: e8 94 d3 ff ff               	call	0x2300 <vkGetPipelineCacheData@plt>
    4f6c: 48 8d 3d e7 00 00 00         	lea	rdi, [rip + 231]        # 0x505a <vkUpdateDescriptorSets+0x505a>
    4f73: 89 c6                        	mov	esi, eax
    4f75: ba b4 00 00 00               	mov	edx, 180
    4f7a: eb 45                        	jmp	0x4fc1 <nnSaveVkPipelineCache+0xe1>
    4f7c: 48 8d 54 24 08               	lea	rdx, [rsp + 8]
    4f81: 4c 89 ff                     	mov	rdi, r15
    4f84: 4c 89 f6                     	mov	rsi, r14
    4f87: 48 89 d9                     	mov	rcx, rbx
    4f8a: e8 71 d3 ff ff               	call	0x2300 <vkGetPipelineCacheData@plt>
    4f8f: 48 8d 3d c4 00 00 00         	lea	rdi, [rip + 196]        # 0x505a <vkUpdateDescriptorSets+0x505a>
    4f96: 89 c6                        	mov	esi, eax
    4f98: ba b7 00 00 00               	mov	edx, 183
    4f9d: eb 22                        	jmp	0x4fc1 <nnSaveVkPipelineCache+0xe1>
    4f9f: 48 8b 54 24 08               	mov	rdx, qword ptr [rsp + 8]
    4fa4: 48 8d 3d 09 03 00 00         	lea	rdi, [rip + 777]        # 0x52b4 <vkUpdateDescriptorSets+0x52b4>
    4fab: 48 89 de                     	mov	rsi, rbx
    4fae: e8 5d d3 ff ff               	call	0x2310 <nnWriteBinaryFile@plt>
    4fb3: 48 8d 3d a0 00 00 00         	lea	rdi, [rip + 160]        # 0x505a <vkUpdateDescriptorSets+0x505a>
    4fba: 89 c6                        	mov	esi, eax
    4fbc: ba b9 00 00 00               	mov	edx, 185
    4fc1: 31 c0                        	xor	eax, eax
    4fc3: e8 38 d1 ff ff               	call	0x2100 <printf@plt>
    4fc8: 31 ff                        	xor	edi, edi
    4fca: e8 61 d3 ff ff               	call	0x2330 <exit@plt>

Disassembly of section .fini:

0000000000004fd0 <_fini>:
    4fd0: f3 0f 1e fa                  	endbr64
    4fd4: 48 83 ec 08                  	sub	rsp, 8
    4fd8: 48 83 c4 08                  	add	rsp, 8
    4fdc: c3                           	ret

Disassembly of section .rodata:

0000000000005000 <.rodata>:
		...
    5008: ff ff                        	<unknown>
    500a: ff ff                        	<unknown>
    500c: ff ff                        	<unknown>
    500e: ff ff                        	<unknown>
		...
    5018: 01 00                        	add	dword ptr [rax], eax
    501a: 00 00                        	add	byte ptr [rax], al
    501c: 07                           	<unknown>
    501d: 00 00                        	add	byte ptr [rax], al
    501f: 00 01                        	add	byte ptr [rcx], al
    5021: 00 00                        	add	byte ptr [rax], al
    5023: 00 00                        	add	byte ptr [rax], al
    5025: 00 00                        	add	byte ptr [rax], al
    5027: 00 01                        	add	byte ptr [rcx], al
    5029: 00 00                        	add	byte ptr [rax], al
    502b: 00 07                        	add	byte ptr [rdi], al
    502d: 00 00                        	add	byte ptr [rax], al
    502f: 00 02                        	add	byte ptr [rdx], al
    5031: 00 00                        	add	byte ptr [rax], al
    5033: 00 00                        	add	byte ptr [rax], al
    5035: 00 00                        	add	byte ptr [rax], al
    5037: 00 01                        	add	byte ptr [rcx], al
    5039: 00 00                        	add	byte ptr [rax], al
    503b: 00 07                        	add	byte ptr [rdi], al
    503d: 00 00                        	add	byte ptr [rax], al
    503f: 00 72 6f                     	add	byte ptr [rdx + 111], dh
    5042: 77 73                        	ja	0x50b7 <.rodata+0xb7>
    5044: 3a 20                        	cmp	ah, byte ptr [rax]
    5046: 25 64 2c 20 63               	and	eax, 1663052900
    504b: 6f                           	outsd	dx, dword ptr [rsi]
    504c: 6c                           	insb	byte ptr es:[rdi], dx
    504d: 75 6d                        	jne	0x50bc <.rodata+0xbc>
    504f: 6e                           	outsb	dx, byte ptr [rsi]
    5050: 73 3a                        	jae	0x508c <.rodata+0x8c>
    5052: 20 25 64 00 25 66            	and	byte ptr [rip + 1713700964], ah # 0x662550bc <completed.0+0x6624deac>
    5058: 20 00                        	and	byte ptr [rax], al
    505a: 72 65                        	jb	0x50c1 <.rodata+0xc1>
    505c: 73 75                        	jae	0x50d3 <.rodata+0xd3>
    505e: 6c                           	insb	byte ptr es:[rdi], dx
    505f: 74 20                        	je	0x5081 <.rodata+0x81>
    5061: 3d 20 25 64 2c               	cmp	eax, 744760608
    5066: 20 6c 69 6e                  	and	byte ptr [rcx + 2*rbp + 110], ch
    506a: 65 20 3d 20 25 64 0a         	and	byte ptr gs:[rip + 174335264], bh
    5071: 00 00                        	add	byte ptr [rax], al
    5073: 00 00                        	add	byte ptr [rax], al
    5075: 00 00                        	add	byte ptr [rax], al
    5077: 00 2a                        	add	byte ptr [rdx], ch
		...
    5085: 00 00                        	add	byte ptr [rax], al
    5087: 00 01                        	add	byte ptr [rcx], al
		...
    5095: 00 00                        	add	byte ptr [rax], al
    5097: 00 72 62                     	add	byte ptr [rdx + 98], dh
    509a: 00 5b 57                     	add	byte ptr [rbx + 87], bl
    509d: 41 52                        	push	r10
    509f: 4e 49                        	<unknown>
    50a1: 4e 47                        	<unknown>
    50a3: 5d                           	pop	rbp
    50a4: 3a 20                        	cmp	ah, byte ptr [rax]
    50a6: 46 61                        	<unknown>
    50a8: 69 6c 65 64 20 74 6f 20      	imul	ebp, dword ptr [rbp + 2*riz + 100], 544175136
    50b0: 6f                           	outsd	dx, dword ptr [rsi]
    50b1: 70 65                        	jo	0x5118 <.rodata+0x118>
    50b3: 6e                           	outsb	dx, byte ptr [rsi]
    50b4: 20 66 69                     	and	byte ptr [rsi + 105], ah
    50b7: 6c                           	insb	byte ptr es:[rdi], dx
    50b8: 65 20 25 73 0a 00 61         	and	byte ptr gs:[rip + 1627392627], ah
    50bf: 62                           	<unknown>
    50c0: 2b 00                        	sub	eax, dword ptr [rax]
    50c2: 43 4e                        	<unknown>
    50c4: 4e 20 6c 69 62               	and	byte ptr [rcx + 2*r13 + 98], r13b
    50c9: 72 61                        	jb	0x512c <.rodata+0x12c>
    50cb: 72 79                        	jb	0x5146 <.rodata+0x146>
    50cd: 00 6e 6f                     	add	byte ptr [rsi + 111], ch
    50d0: 6e                           	outsb	dx, byte ptr [rsi]
    50d1: 65 00 69 3a                  	add	byte ptr gs:[rcx + 58], ch
    50d5: 20 25 64 2c 20 65            	and	byte ptr [rip + 1696607332], ah # 0x65207d3f <completed.0+0x65200b2f>
    50db: 78 74                        	js	0x5151 <.rodata+0x151>
    50dd: 65 6e                        	outsb	dx, byte ptr gs:[rsi]
    50df: 73 69                        	jae	0x514a <.rodata+0x14a>
    50e1: 6f                           	outsd	dx, dword ptr [rsi]
    50e2: 6e                           	outsb	dx, byte ptr [rsi]
    50e3: 3a 20                        	cmp	ah, byte ptr [rax]
    50e5: 25 73 0a 00 50               	and	eax, 1342179955
    50ea: 68 79 73 69 63               	push	1667855225
    50ef: 61                           	<unknown>
    50f0: 6c                           	insb	byte ptr es:[rdi], dx
    50f1: 20 44 65 76                  	and	byte ptr [rbp + 2*riz + 118], al
    50f5: 69 63 65 20 69 73 20         	imul	esp, dword ptr [rbx + 101], 544434464
    50fc: 6e                           	outsb	dx, byte ptr [rsi]
    50fd: 6f                           	outsd	dx, dword ptr [rsi]
    50fe: 74 20                        	je	0x5120 <.rodata+0x120>
    5100: 66 6f                        	outsw	dx, word ptr [rsi]
    5102: 75 6e                        	jne	0x5172 <.rodata+0x172>
    5104: 64 20 63 61                  	and	byte ptr fs:[rbx + 97], ah
    5108: 6e                           	outsb	dx, byte ptr [rsi]
    5109: 27                           	<unknown>
    510a: 74 20                        	je	0x512c <.rodata+0x12c>
    510c: 75 73                        	jne	0x5181 <.rodata+0x181>
    510e: 65 20 6e 6e                  	and	byte ptr gs:[rsi + 110], ch
    5112: 5f                           	pop	rdi
    5113: 62                           	<unknown>
    5114: 61                           	<unknown>
    5115: 63 6b 65                     	movsxd	ebp, dword ptr [rbx + 101]
    5118: 6e                           	outsb	dx, byte ptr [rsi]
    5119: 64 00 56 4b                  	add	byte ptr fs:[rsi + 75], dl
    511d: 5f                           	pop	rdi
    511e: 4c 41                        	<unknown>
    5120: 59                           	pop	rcx
    5121: 45 52                        	push	r10
    5123: 5f                           	pop	rdi
    5124: 4b 48                        	rex64
    5126: 52                           	push	rdx
    5127: 4f 4e                        	<unknown>
    5129: 4f 53                        	push	r11
    512b: 5f                           	pop	rdi
    512c: 76 61                        	jbe	0x518f <.rodata+0x18f>
    512e: 6c                           	insb	byte ptr es:[rdi], dx
    512f: 69 64 61 74 69 6f 6e 00      	imul	esp, dword ptr [rcx + 2*riz + 116], 7237481
    5137: 56                           	push	rsi
    5138: 4b 5f                        	pop	r15
    513a: 4b 48                        	rex64
    513c: 52                           	push	rdx
    513d: 5f                           	pop	rdi
    513e: 67 65 74 5f                  	je	0x51a1 <.rodata+0x1a1>
    5142: 70 68                        	jo	0x51ac <.rodata+0x1ac>
    5144: 79 73                        	jns	0x51b9 <.rodata+0x1b9>
    5146: 69 63 61 6c 5f 64 65         	imul	esp, dword ptr [rbx + 97], 1701076844
    514d: 76 69                        	jbe	0x51b8 <.rodata+0x1b8>
    514f: 63 65 5f                     	movsxd	esp, dword ptr [rbp + 95]
    5152: 70 72                        	jo	0x51c6 <.rodata+0x1c6>
    5154: 6f                           	outsd	dx, dword ptr [rsi]
    5155: 70 65                        	jo	0x51bc <.rodata+0x1bc>
    5157: 72 74                        	jb	0x51cd <.rodata+0x1cd>
    5159: 69 65 73 32 00 56 4b         	imul	esp, dword ptr [rbp + 115], 1263927346
    5160: 5f                           	pop	rdi
    5161: 45 58                        	pop	r8
    5163: 54                           	push	rsp
    5164: 5f                           	pop	rdi
    5165: 64 65 62 75 67 5f 75         	<unknown>
    516c: 74 69                        	je	0x51d7 <.rodata+0x1d7>
    516e: 6c                           	insb	byte ptr es:[rdi], dx
    516f: 73 00                        	jae	0x5171 <.rodata+0x171>
    5171: 56                           	push	rsi
    5172: 4b 5f                        	pop	r15
    5174: 4b 48                        	rex64
    5176: 52                           	push	rdx
    5177: 5f                           	pop	rdi
    5178: 73 68                        	jae	0x51e2 <.rodata+0x1e2>
    517a: 61                           	<unknown>
    517b: 64 65 72 5f                  	jb	0x51de <.rodata+0x1de>
    517f: 6e                           	outsb	dx, byte ptr [rsi]
    5180: 6f                           	outsd	dx, dword ptr [rsi]
    5181: 6e                           	outsb	dx, byte ptr [rsi]
    5182: 5f                           	pop	rdi
    5183: 73 65                        	jae	0x51ea <.rodata+0x1ea>
    5185: 6d                           	insd	dword ptr es:[rdi], dx
    5186: 61                           	<unknown>
    5187: 6e                           	outsb	dx, byte ptr [rsi]
    5188: 74 69                        	je	0x51f3 <.rodata+0x1f3>
    518a: 63 5f 69                     	movsxd	ebx, dword ptr [rdi + 105]
    518d: 6e                           	outsb	dx, byte ptr [rsi]
    518e: 66 6f                        	outsw	dx, word ptr [rsi]
    5190: 00 56 4b                     	add	byte ptr [rsi + 75], dl
    5193: 5f                           	pop	rdi
    5194: 45 58                        	pop	r8
    5196: 54                           	push	rsp
    5197: 5f                           	pop	rdi
    5198: 62 75 66 66 65               	<unknown>
    519d: 72 5f                        	jb	0x51fe <.rodata+0x1fe>
    519f: 64 65 76 69                  	jbe	0x520c <.rodata+0x20c>
    51a3: 63 65 5f                     	movsxd	esp, dword ptr [rbp + 95]
    51a6: 61                           	<unknown>
    51a7: 64 64 72 65                  	jb	0x5210 <.rodata+0x210>
    51ab: 73 73                        	jae	0x5220 <.rodata+0x220>
    51ad: 00 76 6b                     	add	byte ptr [rsi + 107], dh
    51b0: 44 65                        	gs
    51b2: 73 74                        	jae	0x5228 <.rodata+0x228>
    51b4: 72 6f                        	jb	0x5225 <.rodata+0x225>
    51b6: 79 44                        	jns	0x51fc <.rodata+0x1fc>
    51b8: 65 62 75 67 55 74            	<unknown>
    51be: 69 6c 73 4d 65 73 73 65      	imul	ebp, dword ptr [rbx + 2*rsi + 77], 1702064997
    51c6: 6e                           	outsb	dx, byte ptr [rsi]
    51c7: 67 65 72 45                  	jb	0x5210 <.rodata+0x210>
    51cb: 58                           	pop	rax
    51cc: 54                           	push	rsp
    51cd: 00 76 61                     	add	byte ptr [rsi + 97], dh
    51d0: 6c                           	insb	byte ptr es:[rdi], dx
    51d1: 69 64 61 74 69 6f 6e 20      	imul	esp, dword ptr [rcx + 2*riz + 116], 544108393
    51d9: 6c                           	insb	byte ptr es:[rdi], dx
    51da: 61                           	<unknown>
    51db: 79 65                        	jns	0x5242 <.rodata+0x242>
    51dd: 72 3a                        	jb	0x5219 <.rodata+0x219>
    51df: 20 25 73 2e 20 53            	and	byte ptr [rip + 1394617971], ah # 0x53208058 <completed.0+0x53200e48>
    51e5: 65 76 65                     	jbe	0x524d <.rodata+0x24d>
    51e8: 72 69                        	jb	0x5253 <.rodata+0x253>
    51ea: 74 79                        	je	0x5265 <.rodata+0x265>
    51ec: 3a 20                        	cmp	ah, byte ptr [rax]
    51ee: 25 73 0a 00 56               	and	eax, 1442843251
    51f3: 45 52                        	push	r10
    51f5: 42 4f                        	<unknown>
    51f7: 53                           	push	rbx
    51f8: 45 00 49 4e                  	add	byte ptr [r9 + 78], r9b
    51fc: 46 4f                        	<unknown>
    51fe: 00 57 41                     	add	byte ptr [rdi + 65], dl
    5201: 52                           	push	rdx
    5202: 4e 49                        	<unknown>
    5204: 4e 47                        	<unknown>
    5206: 00 45 52                     	add	byte ptr [rbp + 82], al
    5209: 52                           	push	rdx
    520a: 4f 52                        	push	r10
    520c: 00 55 4e                     	add	byte ptr [rbp + 78], dl
    520f: 4b 4e                        	<unknown>
    5211: 4f 57                        	push	r15
    5213: 4e 00 76 6b                  	add	byte ptr [rsi + 107], r14b
    5217: 43 72 65                     	jb	0x527f <.rodata+0x27f>
    521a: 61                           	<unknown>
    521b: 74 65                        	je	0x5282 <.rodata+0x282>
    521d: 44 65                        	gs
    521f: 62 75 67 55 74               	<unknown>
    5224: 69 6c 73 4d 65 73 73 65      	imul	ebp, dword ptr [rbx + 2*rsi + 77], 1702064997
    522c: 6e                           	outsb	dx, byte ptr [rsi]
    522d: 67 65 72 45                  	jb	0x5276 <.rodata+0x276>
    5231: 58                           	pop	rax
    5232: 54                           	push	rsp
		...
    5243: 00 07                        	add	byte ptr [rdi], al
    5245: 00 00                        	add	byte ptr [rax], al
    5247: 00 01                        	add	byte ptr [rcx], al
    5249: 00 00                        	add	byte ptr [rax], al
    524b: 00 20                        	add	byte ptr [rax], ah
    524d: 00 00                        	add	byte ptr [rax], al
    524f: 00 01                        	add	byte ptr [rcx], al
    5251: 00 00                        	add	byte ptr [rax], al
    5253: 00 07                        	add	byte ptr [rdi], al
    5255: 00 00                        	add	byte ptr [rax], al
    5257: 00 01                        	add	byte ptr [rcx], al
    5259: 00 00                        	add	byte ptr [rax], al
    525b: 00 20                        	add	byte ptr [rax], ah
    525d: 00 00                        	add	byte ptr [rax], al
    525f: 00 02                        	add	byte ptr [rdx], al
    5261: 00 00                        	add	byte ptr [rax], al
    5263: 00 07                        	add	byte ptr [rdi], al
    5265: 00 00                        	add	byte ptr [rax], al
    5267: 00 01                        	add	byte ptr [rcx], al
    5269: 00 00                        	add	byte ptr [rax], al
    526b: 00 20                        	add	byte ptr [rax], ah
    526d: 00 00                        	add	byte ptr [rax], al
    526f: 00 5b 46                     	add	byte ptr [rbx + 70], bl
    5272: 41 54                        	push	r12
    5274: 41 4c                        	<unknown>
    5276: 5d                           	pop	rbp
    5277: 3a 20                        	cmp	ah, byte ptr [rax]
    5279: 46 61                        	<unknown>
    527b: 69 6c 65 64 20 74 6f 20      	imul	ebp, dword ptr [rbp + 2*riz + 100], 544175136
    5283: 6c                           	insb	byte ptr es:[rdi], dx
    5284: 6f                           	outsd	dx, dword ptr [rsi]
    5285: 61                           	<unknown>
    5286: 64 20 73 68                  	and	byte ptr fs:[rbx + 104], dh
    528a: 61                           	<unknown>
    528b: 64 65 72 2e                  	jb	0x52bd <.rodata+0x2bd>
    528f: 00 6d 61                     	add	byte ptr [rbp + 97], ch
    5292: 69 6e 00 73 68 61 64         	imul	ebp, dword ptr [rsi], 1684105331
    5299: 65 72 73                     	jb	0x530f <__GNU_EH_FRAME_HDR+0x37>
    529c: 2f                           	<unknown>
    529d: 63 6f 72                     	movsxd	ebp, dword ptr [rdi + 114]
    52a0: 72 65                        	jb	0x5307 <__GNU_EH_FRAME_HDR+0x2f>
    52a2: 6c                           	insb	byte ptr es:[rdi], dx
    52a3: 61                           	<unknown>
    52a4: 74 65                        	je	0x530b <__GNU_EH_FRAME_HDR+0x33>
    52a6: 32 64 5f 76                  	xor	ah, byte ptr [rdi + 2*rbx + 118]
    52aa: 61                           	<unknown>
    52ab: 6c                           	insb	byte ptr es:[rdi], dx
    52ac: 69 64 32 2e 73 70 76 00      	imul	esp, dword ptr [rdx + rsi + 46], 7762035
    52b4: 70 69                        	jo	0x531f <__GNU_EH_FRAME_HDR+0x47>
    52b6: 70 65                        	jo	0x531d <__GNU_EH_FRAME_HDR+0x45>
    52b8: 6c                           	insb	byte ptr es:[rdi], dx
    52b9: 69 6e 65 5f 63 61 63         	imul	ebp, dword ptr [rsi + 101], 1667326815
    52c0: 68 65 73 2f 70               	push	1882157925
    52c5: 69 70 65 6c 69 6e 65         	imul	esi, dword ptr [rax + 101], 1701734764
    52cc: 5f                           	pop	rdi
    52cd: 63 61 63                     	movsxd	esp, dword ptr [rcx + 99]
    52d0: 68 65 2e 64 61               	push	1633955429
    52d5: 74 61                        	je	0x5338 <__GNU_EH_FRAME_HDR+0x60>
    52d7: 00                           	<unknown>

Disassembly of section .eh_frame_hdr:

00000000000052d8 <__GNU_EH_FRAME_HDR>:
    52d8: 01 1b                        	add	dword ptr [rbx], ebx
    52da: 03 3b                        	add	edi, dword ptr [rbx]
    52dc: dc 00                        	fadd	qword ptr [rax]
    52de: 00 00                        	add	byte ptr [rax], al
    52e0: 1a 00                        	sbb	al, byte ptr [rax]
    52e2: 00 00                        	add	byte ptr [rax], al
    52e4: 48 cd ff                     	int	255
    52e7: ff f8                        	<unknown>
    52e9: 00 00                        	add	byte ptr [rax], al
    52eb: 00 b8 d0 ff ff 20            	add	byte ptr [rax + 553648080], bh
    52f1: 01 00                        	add	dword ptr [rax], eax
    52f3: 00 c8                        	add	al, cl
    52f5: d0 ff                        	sar	bh
    52f7: ff 38                        	<unknown>
    52f9: 01 00                        	add	dword ptr [rax], eax
    52fb: 00 a8 d1 ff ff 50            	add	byte ptr [rax + 1358954449], ch
    5301: 01 00                        	add	dword ptr [rax], eax
    5303: 00 f8                        	add	al, bh
    5305: de ff                        	fdivp	st(7), st
    5307: ff 80 01 00 00 a8            	inc	dword ptr [rax - 1476395007]
    530d: e0 ff                        	loopne	0x530e <__GNU_EH_FRAME_HDR+0x36>
    530f: ff c4                        	inc	esp
    5311: 01 00                        	add	dword ptr [rax], eax
    5313: 00 b8 eb ff ff f8            	add	byte ptr [rax - 117440533], bh
    5319: 01 00                        	add	dword ptr [rax], eax
    531b: 00 68 ec                     	add	byte ptr [rax - 20], ch
    531e: ff ff                        	<unknown>
    5320: 34 02                        	xor	al, 2
    5322: 00 00                        	add	byte ptr [rax], al
    5324: d8 ec                        	fsubr	st, st(4)
    5326: ff ff                        	<unknown>
    5328: 70 02                        	jo	0x532c <__GNU_EH_FRAME_HDR+0x54>
    532a: 00 00                        	add	byte ptr [rax], al
    532c: e8 ec ff ff 88               	call	0xffffffff8900531d <completed.0+0xffffffff88ffe10d>
    5331: 02 00                        	add	al, byte ptr [rax]
    5333: 00 d8                        	add	al, bl
    5335: ee                           	out	dx, al
    5336: ff ff                        	<unknown>
    5338: b8 02 00 00 78               	mov	eax, 2013265922
    533d: ef                           	out	dx, eax
    533e: ff ff                        	<unknown>
    5340: e4 02                        	in	al, 2
    5342: 00 00                        	add	byte ptr [rax], al
    5344: f8                           	clc
    5345: f0                           	lock
    5346: ff ff                        	<unknown>
    5348: 30 03                        	xor	byte ptr [rbx], al
    534a: 00 00                        	add	byte ptr [rax], al
    534c: 98                           	cwde
    534d: f1                           	<unknown>
    534e: ff ff                        	<unknown>
    5350: 5c                           	pop	rsp
    5351: 03 00                        	add	eax, dword ptr [rax]
    5353: 00 28                        	add	byte ptr [rax], ch
    5355: f2 ff ff                     	<unknown>
    5358: 8c 03                        	mov	word ptr [rbx], es
    535a: 00 00                        	add	byte ptr [rax], al
    535c: 68 f2 ff ff ac               	push	-1392508942
    5361: 03 00                        	add	eax, dword ptr [rax]
    5363: 00 b8 f2 ff ff c0            	add	byte ptr [rax - 1056964622], bh
    5369: 03 00                        	add	eax, dword ptr [rax]
    536b: 00 98 f3 ff ff e0            	add	byte ptr [rax - 520093709], bl
    5371: 03 00                        	add	eax, dword ptr [rax]
    5373: 00 b8 f3 ff ff f8            	add	byte ptr [rax - 117440525], bh
    5379: 03 00                        	add	eax, dword ptr [rax]
    537b: 00 f8                        	add	al, bh
    537d: f3 ff ff                     	<unknown>
    5380: 30 04 00                     	xor	byte ptr [rax + rax], al
    5383: 00 58 f4                     	add	byte ptr [rax - 12], bl
    5386: ff ff                        	<unknown>
    5388: 60                           	<unknown>
    5389: 04 00                        	add	al, 0
    538b: 00 c8                        	add	al, cl
    538d: f4                           	hlt
    538e: ff ff                        	<unknown>
    5390: 78 04                        	js	0x5396 <__GNU_EH_FRAME_HDR+0xbe>
    5392: 00 00                        	add	byte ptr [rax], al
    5394: f8                           	clc
    5395: f4                           	hlt
    5396: ff ff                        	<unknown>
    5398: 8c 04 00                     	mov	word ptr [rax + rax], es
    539b: 00 a8 f5 ff ff b8            	add	byte ptr [rax - 1191182347], ch
    53a1: 04 00                        	add	al, 0
    53a3: 00 d8                        	add	al, bl
    53a5: f8                           	clc
    53a6: ff ff                        	<unknown>
    53a8: 00 05 00 00 08 fc            	add	byte ptr [rip - 66584576], al # 0xfffffffffc0853ae <completed.0+0xfffffffffc07e19e>
    53ae: ff ff                        	<unknown>
    53b0: 40 05                        	<unknown>
    53b2: 00 00                        	add	byte ptr [rax], al

Disassembly of section .eh_frame:

00000000000053b8 <.eh_frame>:
    53b8: 14 00                        	adc	al, 0
    53ba: 00 00                        	add	byte ptr [rax], al
    53bc: 00 00                        	add	byte ptr [rax], al
    53be: 00 00                        	add	byte ptr [rax], al
    53c0: 01 7a 52                     	add	dword ptr [rdx + 82], edi
    53c3: 00 01                        	add	byte ptr [rcx], al
    53c5: 78 10                        	js	0x53d7 <.eh_frame+0x1f>
    53c7: 01 1b                        	add	dword ptr [rbx], ebx
    53c9: 0c 07                        	or	al, 7
    53cb: 08 90 01 00 00 24            	or	byte ptr [rax + 603979777], dl
    53d1: 00 00                        	add	byte ptr [rax], al
    53d3: 00 1c 00                     	add	byte ptr [rax + rax], bl
    53d6: 00 00                        	add	byte ptr [rax], al
    53d8: 48 cc                        	int3
    53da: ff ff                        	<unknown>
    53dc: 70 03                        	jo	0x53e1 <.eh_frame+0x29>
    53de: 00 00                        	add	byte ptr [rax], al
    53e0: 00 0e                        	add	byte ptr [rsi], cl
    53e2: 10 46 0e                     	adc	byte ptr [rsi + 14], al
    53e5: 18 4a 0f                     	sbb	byte ptr [rdx + 15], cl
    53e8: 0b 77 08                     	or	esi, dword ptr [rdi + 8]
    53eb: 80 00 3f                     	add	byte ptr [rax], 63
    53ee: 1a 3b                        	sbb	bh, byte ptr [rbx]
    53f0: 2a 33                        	sub	dh, byte ptr [rbx]
    53f2: 24 22                        	and	al, 34
    53f4: 00 00                        	add	byte ptr [rax], al
    53f6: 00 00                        	add	byte ptr [rax], al
    53f8: 14 00                        	adc	al, 0
    53fa: 00 00                        	add	byte ptr [rax], al
    53fc: 44 00 00                     	add	byte ptr [rax], r8b
    53ff: 00 90 cf ff ff 08            	add	byte ptr [rax + 150994895], dl
		...
    540d: 00 00                        	add	byte ptr [rax], al
    540f: 00 14 00                     	add	byte ptr [rax + rax], dl
    5412: 00 00                        	add	byte ptr [rax], al
    5414: 5c                           	pop	rsp
    5415: 00 00                        	add	byte ptr [rax], al
    5417: 00 88 cf ff ff 17            	add	byte ptr [rax + 402653135], cl
		...
    5425: 00 00                        	add	byte ptr [rax], al
    5427: 00 2c 00                     	add	byte ptr [rax + rax], ch
    542a: 00 00                        	add	byte ptr [rax], al
    542c: 74 00                        	je	0x542e <.eh_frame+0x76>
    542e: 00 00                        	add	byte ptr [rax], al
    5430: 50                           	push	rax
    5431: d0 ff                        	sar	bh
    5433: ff 4f 0d                     	dec	dword ptr [rdi + 13]
    5436: 00 00                        	add	byte ptr [rax], al
    5438: 00 41 0e                     	add	byte ptr [rcx + 14], al
    543b: 10 86 02 43 0d 06            	adc	byte ptr [rsi + 101532418], al
    5441: 54                           	push	rsp
    5442: 83 07 8c                     	add	dword ptr [rdi], -116
    5445: 06                           	<unknown>
    5446: 8d 05 8e 04 8f 03            	lea	eax, [rip + 59704462]   # 0x38f58da <completed.0+0x38ee6ca>
    544c: 03 f0                        	add	esi, eax
    544e: 09 0c 07                     	or	dword ptr [rdi + rax], ecx
    5451: 08 41 0c                     	or	byte ptr [rcx + 12], al
    5454: 06                           	<unknown>
    5455: 10 00                        	adc	byte ptr [rax], al
    5457: 00 40 00                     	add	byte ptr [rax], al
    545a: 00 00                        	add	byte ptr [rax], al
    545c: a4                           	movsb	byte ptr es:[rdi], byte ptr [rsi]
    545d: 00 00                        	add	byte ptr [rax], al
    545f: 00 70 dd                     	add	byte ptr [rax - 35], dh
    5462: ff ff                        	<unknown>
    5464: ad                           	lodsd	eax, dword ptr [rsi]
    5465: 01 00                        	add	dword ptr [rax], eax
    5467: 00 00                        	add	byte ptr [rax], al
    5469: 41 0e                        	<unknown>
    546b: 10 42 0e                     	adc	byte ptr [rdx + 14], al
    546e: 18 42 0e                     	sbb	byte ptr [rdx + 14], al
    5471: 20 42 0e                     	and	byte ptr [rdx + 14], al
    5474: 28 42 0e                     	sub	byte ptr [rdx + 14], al
    5477: 30 41 0e                     	xor	byte ptr [rcx + 14], al
    547a: 38 83 07 8c 06 8d            	cmp	byte ptr [rbx - 1928950777], al
    5480: 05 8e 04 8f 03               	add	eax, 59704462
    5485: 86 02                        	xchg	byte ptr [rdx], al
    5487: 03 99 01 0e 30 42            	add	ebx, dword ptr [rcx + 1110445569]
    548d: 0e                           	<unknown>
    548e: 28 42 0e                     	sub	byte ptr [rdx + 14], al
    5491: 20 42 0e                     	and	byte ptr [rdx + 14], al
    5494: 18 42 0e                     	sbb	byte ptr [rdx + 14], al
    5497: 10 41 0e                     	adc	byte ptr [rcx + 14], al
    549a: 08 00                        	or	byte ptr [rax], al
    549c: 30 00                        	xor	byte ptr [rax], al
    549e: 00 00                        	add	byte ptr [rax], al
    54a0: e8 00 00 00 dc               	call	0xffffffffdc0054a5 <completed.0+0xffffffffdbffe295>
    54a5: de ff                        	fdivp	st(7), st
    54a7: ff 02                        	inc	dword ptr [rdx]
    54a9: 0b 00                        	or	eax, dword ptr [rax]
    54ab: 00 00                        	add	byte ptr [rax], al
    54ad: 41 0e                        	<unknown>
    54af: 10 86 02 43 0d 06            	adc	byte ptr [rsi + 101532418], al
    54b5: 54                           	push	rsp
    54b6: 83 07 8c                     	add	dword ptr [rdi], -116
    54b9: 06                           	<unknown>
    54ba: 8d 05 8e 04 8f 03            	lea	eax, [rip + 59704462]   # 0x38f594e <completed.0+0x38ee73e>
    54c0: 03 2a                        	add	ebp, dword ptr [rdx]
    54c2: 08 0c 07                     	or	byte ptr [rdi + rax], cl
    54c5: 08 41 0c                     	or	byte ptr [rcx + 12], al
    54c8: 06                           	<unknown>
    54c9: 10 00                        	adc	byte ptr [rax], al
    54cb: 00 00                        	add	byte ptr [rax], al
    54cd: 00 00                        	add	byte ptr [rax], al
    54cf: 00 38                        	add	byte ptr [rax], bh
    54d1: 00 00                        	add	byte ptr [rax], al
    54d3: 00 1c 01                     	add	byte ptr [rcx + rax], bl
    54d6: 00 00                        	add	byte ptr [rax], al
    54d8: b8 e9 ff ff a3               	mov	eax, 2751463401
    54dd: 00 00                        	add	byte ptr [rax], al
    54df: 00 00                        	add	byte ptr [rax], al
    54e1: 42 0e                        	<unknown>
    54e3: 10 42 0e                     	adc	byte ptr [rdx + 14], al
    54e6: 18 42 0e                     	sbb	byte ptr [rdx + 14], al
    54e9: 20 41 0e                     	and	byte ptr [rcx + 14], al
    54ec: 28 41 0e                     	sub	byte ptr [rcx + 14], al
    54ef: 30 83 05 8c 04 8e            	xor	byte ptr [rbx - 1912304635], al
    54f5: 03 8f 02 02 6c 0e            	add	ecx, dword ptr [rdi + 241959426]
    54fb: 28 41 0e                     	sub	byte ptr [rcx + 14], al
    54fe: 20 42 0e                     	and	byte ptr [rdx + 14], al
    5501: 18 42 0e                     	sbb	byte ptr [rdx + 14], al
    5504: 10 42 0e                     	adc	byte ptr [rdx + 14], al
    5507: 08 41 0e                     	or	byte ptr [rcx + 14], al
    550a: 30 00                        	xor	byte ptr [rax], al
    550c: 38 00                        	cmp	byte ptr [rax], al
    550e: 00 00                        	add	byte ptr [rax], al
    5510: 58                           	pop	rax
    5511: 01 00                        	add	dword ptr [rax], eax
    5513: 00 2c ea                     	add	byte ptr [rdx + 8*rbp], ch
    5516: ff ff                        	<unknown>
    5518: 70 00                        	jo	0x551a <.eh_frame+0x162>
    551a: 00 00                        	add	byte ptr [rax], al
    551c: 00 42 0e                     	add	byte ptr [rdx + 14], al
    551f: 10 42 0e                     	adc	byte ptr [rdx + 14], al
    5522: 18 42 0e                     	sbb	byte ptr [rdx + 14], al
    5525: 20 41 0e                     	and	byte ptr [rcx + 14], al
    5528: 28 41 0e                     	sub	byte ptr [rcx + 14], al
    552b: 30 83 05 8c 04 8e            	xor	byte ptr [rbx - 1912304635], al
    5531: 03 8f 02 7e 0e 28            	add	ecx, dword ptr [rdi + 672038402]
    5537: 41 0e                        	<unknown>
    5539: 20 42 0e                     	and	byte ptr [rdx + 14], al
    553c: 18 42 0e                     	sbb	byte ptr [rdx + 14], al
    553f: 10 42 0e                     	adc	byte ptr [rdx + 14], al
    5542: 08 41 0e                     	or	byte ptr [rcx + 14], al
    5545: 30 00                        	xor	byte ptr [rax], al
    5547: 00 14 00                     	add	byte ptr [rax + rax], dl
    554a: 00 00                        	add	byte ptr [rax], al
    554c: 94                           	xchg	eax, esp
    554d: 01 00                        	add	dword ptr [rax], eax
    554f: 00 60 ea                     	add	byte ptr [rax - 22], ah
    5552: ff ff                        	<unknown>
    5554: 05 00 00 00 00               	add	eax, 0
    5559: 00 00                        	add	byte ptr [rax], al
    555b: 00 00                        	add	byte ptr [rax], al
    555d: 00 00                        	add	byte ptr [rax], al
    555f: 00 2c 00                     	add	byte ptr [rax + rax], ch
    5562: 00 00                        	add	byte ptr [rax], al
    5564: ac                           	lodsb	al, byte ptr [rsi]
    5565: 01 00                        	add	dword ptr [rax], eax
    5567: 00 58 ea                     	add	byte ptr [rax - 22], bl
    556a: ff ff                        	<unknown>
    556c: f0                           	lock
    556d: 01 00                        	add	dword ptr [rax], eax
    556f: 00 00                        	add	byte ptr [rax], al
    5571: 41 0e                        	<unknown>
    5573: 10 86 02 43 0d 06            	adc	byte ptr [rsi + 101532418], al
    5579: 54                           	push	rsp
    557a: 83 07 8c                     	add	dword ptr [rdi], -116
    557d: 06                           	<unknown>
    557e: 8d 05 8e 04 8f 03            	lea	eax, [rip + 59704462]   # 0x38f5a12 <completed.0+0x38ee802>
    5584: 03 ab 01 0c 07 08            	add	ebp, dword ptr [rbx + 134679553]
    558a: 41 0c 06                     	or	al, 6
    558d: 10 00                        	adc	byte ptr [rax], al
    558f: 00 28                        	add	byte ptr [rax], ch
    5591: 00 00                        	add	byte ptr [rax], al
    5593: 00 dc                        	add	ah, bl
    5595: 01 00                        	add	dword ptr [rax], eax
    5597: 00 18                        	add	byte ptr [rax], bl
    5599: ec                           	in	al, dx
    559a: ff ff                        	<unknown>
    559c: 96                           	xchg	eax, esi
    559d: 00 00                        	add	byte ptr [rax], al
    559f: 00 00                        	add	byte ptr [rax], al
    55a1: 42 0e                        	<unknown>
    55a3: 10 41 0e                     	adc	byte ptr [rcx + 14], al
    55a6: 18 41 0e                     	sbb	byte ptr [rcx + 14], al
    55a9: 20 83 03 8e 02 02            	and	byte ptr [rbx + 33721859], al
    55af: 43 0e                        	<unknown>
    55b1: 18 41 0e                     	sbb	byte ptr [rcx + 14], al
    55b4: 10 42 0e                     	adc	byte ptr [rdx + 14], al
    55b7: 08 41 0e                     	or	byte ptr [rcx + 14], al
    55ba: 20 00                        	and	byte ptr [rax], al
    55bc: 48 00 00                     	add	byte ptr [rax], al
    55bf: 00 08                        	add	byte ptr [rax], cl
    55c1: 02 00                        	add	al, byte ptr [rax]
    55c3: 00 8c ec ff ff 72 01         	add	byte ptr [rsp + 8*rbp + 24313855], cl
    55ca: 00 00                        	add	byte ptr [rax], al
    55cc: 00 41 0e                     	add	byte ptr [rcx + 14], al
    55cf: 10 42 0e                     	adc	byte ptr [rdx + 14], al
    55d2: 18 42 0e                     	sbb	byte ptr [rdx + 14], al
    55d5: 20 42 0e                     	and	byte ptr [rdx + 14], al
    55d8: 28 42 0e                     	sub	byte ptr [rdx + 14], al
    55db: 30 41 0e                     	xor	byte ptr [rcx + 14], al
    55de: 38 44 0e 50                  	cmp	byte ptr [rsi + rcx + 80], al
    55e2: 83 07 8c                     	add	dword ptr [rdi], -116
    55e5: 06                           	<unknown>
    55e6: 8d 05 8e 04 8f 03            	lea	eax, [rip + 59704462]   # 0x38f5a7a <completed.0+0x38ee86a>
    55ec: 86 02                        	xchg	byte ptr [rdx], al
    55ee: 03 03                        	add	eax, dword ptr [rbx]
    55f0: 01 0e                        	add	dword ptr [rsi], ecx
    55f2: 38 41 0e                     	cmp	byte ptr [rcx + 14], al
    55f5: 30 42 0e                     	xor	byte ptr [rdx + 14], al
    55f8: 28 42 0e                     	sub	byte ptr [rdx + 14], al
    55fb: 20 42 0e                     	and	byte ptr [rdx + 14], al
    55fe: 18 42 0e                     	sbb	byte ptr [rdx + 14], al
    5601: 10 41 0e                     	adc	byte ptr [rcx + 14], al
    5604: 08 41 0e                     	or	byte ptr [rcx + 14], al
    5607: 50                           	push	rax
    5608: 28 00                        	sub	byte ptr [rax], al
    560a: 00 00                        	add	byte ptr [rax], al
    560c: 54                           	push	rsp
    560d: 02 00                        	add	al, byte ptr [rax]
    560f: 00 c0                        	add	al, al
    5611: ed                           	in	eax, dx
    5612: ff ff                        	<unknown>
    5614: 96                           	xchg	eax, esi
    5615: 00 00                        	add	byte ptr [rax], al
    5617: 00 00                        	add	byte ptr [rax], al
    5619: 42 0e                        	<unknown>
    561b: 10 41 0e                     	adc	byte ptr [rcx + 14], al
    561e: 18 41 0e                     	sbb	byte ptr [rcx + 14], al
    5621: 20 83 03 8e 02 02            	and	byte ptr [rbx + 33721859], al
    5627: 43 0e                        	<unknown>
    5629: 18 41 0e                     	sbb	byte ptr [rcx + 14], al
    562c: 10 42 0e                     	adc	byte ptr [rdx + 14], al
    562f: 08 41 0e                     	or	byte ptr [rcx + 14], al
    5632: 20 00                        	and	byte ptr [rax], al
    5634: 2c 00                        	sub	al, 0
    5636: 00 00                        	add	byte ptr [rax], al
    5638: 80 02 00                     	add	byte ptr [rdx], 0
    563b: 00 34 ee                     	add	byte ptr [rsi + 8*rbp], dh
    563e: ff ff                        	<unknown>
    5640: 89 00                        	mov	dword ptr [rax], eax
    5642: 00 00                        	add	byte ptr [rax], al
    5644: 00 41 0e                     	add	byte ptr [rcx + 14], al
    5647: 10 42 0e                     	adc	byte ptr [rdx + 14], al
    564a: 18 41 0e                     	sbb	byte ptr [rcx + 14], al
    564d: 20 44 0e 30                  	and	byte ptr [rsi + rcx + 48], al
    5651: 83 04 8e 03                  	add	dword ptr [rsi + 4*rcx], 3
    5655: 86 02                        	xchg	byte ptr [rdx], al
    5657: 02 7c 0e 20                  	add	bh, byte ptr [rsi + rcx + 32]
    565b: 41 0e                        	<unknown>
    565d: 18 42 0e                     	sbb	byte ptr [rdx + 14], al
    5660: 10 41 0e                     	adc	byte ptr [rcx + 14], al
    5663: 08 1c 00                     	or	byte ptr [rax + rax], bl
    5666: 00 00                        	add	byte ptr [rax], al
    5668: b0 02                        	mov	al, 2
    566a: 00 00                        	add	byte ptr [rax], al
    566c: 94                           	xchg	eax, esp
    566d: ee                           	out	dx, al
    566e: ff ff                        	<unknown>
    5670: 3b 00                        	cmp	eax, dword ptr [rax]
    5672: 00 00                        	add	byte ptr [rax], al
    5674: 00 41 0e                     	add	byte ptr [rcx + 14], al
    5677: 10 47 0e                     	adc	byte ptr [rdi + 14], al
    567a: a0 04 83 02 6e 0e 10 41 0e   	movabs	al, byte ptr [1027119844178428676]
    5683: 08 10                        	or	byte ptr [rax], dl
    5685: 00 00                        	add	byte ptr [rax], al
    5687: 00 d0                        	add	al, dl
    5689: 02 00                        	add	al, byte ptr [rax]
    568b: 00 b4 ee ff ff 41 00         	add	byte ptr [rsi + 8*rbp + 4325375], dh
    5692: 00 00                        	add	byte ptr [rax], al
    5694: 00 00                        	add	byte ptr [rax], al
    5696: 00 00                        	add	byte ptr [rax], al
    5698: 1c 00                        	sbb	al, 0
    569a: 00 00                        	add	byte ptr [rax], al
    569c: e4 02                        	in	al, 2
    569e: 00 00                        	add	byte ptr [rax], al
    56a0: f0                           	lock
    56a1: ee                           	out	dx, al
    56a2: ff ff                        	<unknown>
    56a4: d7                           	xlatb
    56a5: 00 00                        	add	byte ptr [rax], al
    56a7: 00 00                        	add	byte ptr [rax], al
    56a9: 47 0e                        	<unknown>
    56ab: 90                           	nop
    56ac: 01 02                        	add	dword ptr [rdx], eax
    56ae: b3 0e                        	mov	bl, 14
    56b0: 08 41 0e                     	or	byte ptr [rcx + 14], al
    56b3: 90                           	nop
    56b4: 01 00                        	add	dword ptr [rax], eax
    56b6: 00 00                        	add	byte ptr [rax], al
    56b8: 14 00                        	adc	al, 0
    56ba: 00 00                        	add	byte ptr [rax], al
    56bc: 04 03                        	add	al, 3
    56be: 00 00                        	add	byte ptr [rax], al
    56c0: b0 ef                        	mov	al, -17
    56c2: ff ff                        	<unknown>
    56c4: 11 00                        	adc	dword ptr [rax], eax
    56c6: 00 00                        	add	byte ptr [rax], al
    56c8: 00 41 0e                     	add	byte ptr [rcx + 14], al
    56cb: 10 4f 0e                     	adc	byte ptr [rdi + 14], cl
    56ce: 08 00                        	or	byte ptr [rax], al
    56d0: 34 00                        	xor	al, 0
    56d2: 00 00                        	add	byte ptr [rax], al
    56d4: 1c 03                        	sbb	al, 3
    56d6: 00 00                        	add	byte ptr [rax], al
    56d8: b8 ef ff ff 35               	mov	eax, 905969647
    56dd: 00 00                        	add	byte ptr [rax], al
    56df: 00 00                        	add	byte ptr [rax], al
    56e1: 42 0e                        	<unknown>
    56e3: 10 42 0e                     	adc	byte ptr [rdx + 14], al
    56e6: 18 41 0e                     	sbb	byte ptr [rcx + 14], al
    56e9: 20 83 04 8e 03 8f            	and	byte ptr [rbx - 1895592444], al
    56ef: 02 64 0e 18                  	add	ah, byte ptr [rsi + rcx + 24]
    56f3: 42 0e                        	<unknown>
    56f5: 10 42 0e                     	adc	byte ptr [rdx + 14], al
    56f8: 08 42 0e                     	or	byte ptr [rdx + 14], al
    56fb: 20 41 0e                     	and	byte ptr [rcx + 14], al
    56fe: 18 42 0e                     	sbb	byte ptr [rdx + 14], al
    5701: 10 42 0e                     	adc	byte ptr [rdx + 14], al
    5704: 08 00                        	or	byte ptr [rax], al
    5706: 00 00                        	add	byte ptr [rax], al
    5708: 2c 00                        	sub	al, 0
    570a: 00 00                        	add	byte ptr [rax], al
    570c: 54                           	push	rsp
    570d: 03 00                        	add	eax, dword ptr [rax]
    570f: 00 c0                        	add	al, al
    5711: ef                           	out	dx, eax
    5712: ff ff                        	<unknown>
    5714: 5f                           	pop	rdi
    5715: 00 00                        	add	byte ptr [rax], al
    5717: 00 00                        	add	byte ptr [rax], al
    5719: 42 0e                        	<unknown>
    571b: 10 42 0e                     	adc	byte ptr [rdx + 14], al
    571e: 18 41 0e                     	sbb	byte ptr [rcx + 14], al
    5721: 20 44 0e 50                  	and	byte ptr [rsi + rcx + 80], al
    5725: 83 04 8e 03                  	add	dword ptr [rsi + 4*rcx], 3
    5729: 8f 02                        	pop	qword ptr [rdx]
    572b: 02 50 0e                     	add	dl, byte ptr [rax + 14]
    572e: 20 41 0e                     	and	byte ptr [rcx + 14], al
    5731: 18 42 0e                     	sbb	byte ptr [rdx + 14], al
    5734: 10 42 0e                     	adc	byte ptr [rdx + 14], al
    5737: 08 14 00                     	or	byte ptr [rax + rax], dl
    573a: 00 00                        	add	byte ptr [rax], al
    573c: 84 03                        	test	byte ptr [rbx], al
    573e: 00 00                        	add	byte ptr [rax], al
    5740: f0                           	lock
    5741: ef                           	out	dx, eax
    5742: ff ff                        	<unknown>
    5744: 64 00 00                     	add	byte ptr fs:[rax], al
    5747: 00 00                        	add	byte ptr [rax], al
    5749: 41 0e                        	<unknown>
    574b: 10 02                        	adc	byte ptr [rdx], al
    574d: 62                           	<unknown>
    574e: 0e                           	<unknown>
    574f: 08 10                        	or	byte ptr [rax], dl
    5751: 00 00                        	add	byte ptr [rax], al
    5753: 00 9c 03 00 00 48 f0         	add	byte ptr [rbx + rax - 263716864], bl
    575a: ff ff                        	<unknown>
    575c: 23 00                        	and	eax, dword ptr [rax]
    575e: 00 00                        	add	byte ptr [rax], al
    5760: 00 00                        	add	byte ptr [rax], al
    5762: 00 00                        	add	byte ptr [rax], al
    5764: 28 00                        	sub	byte ptr [rax], al
    5766: 00 00                        	add	byte ptr [rax], al
    5768: b0 03                        	mov	al, 3
    576a: 00 00                        	add	byte ptr [rax], al
    576c: 64 f0 ff ff                  	<unknown>
    5770: a2 00 00 00 00 42 0e 10 41   	movabs	byte ptr [4688262888723316736], al
    5779: 0e                           	<unknown>
    577a: 18 44 0e 50                  	sbb	byte ptr [rsi + rcx + 80], al
    577e: 83 03 8e                     	add	dword ptr [rbx], -114
    5781: 02 02                        	add	al, byte ptr [rdx]
    5783: 69 0e 18 41 0e 10            	imul	ecx, dword ptr [rsi], 269369624
    5789: 42 0e                        	<unknown>
    578b: 08 41 0e                     	or	byte ptr [rcx + 14], al
    578e: 50                           	push	rax
    578f: 00 44 00 00                  	add	byte ptr [rax + rax], al
    5793: 00 dc                        	add	ah, bl
    5795: 03 00                        	add	eax, dword ptr [rax]
    5797: 00 e8                        	add	al, ch
    5799: f0                           	lock
    579a: ff ff                        	<unknown>
    579c: 26 03 00                     	add	eax, dword ptr es:[rax]
    579f: 00 00                        	add	byte ptr [rax], al
    57a1: 42 0e                        	<unknown>
    57a3: 10 42 0e                     	adc	byte ptr [rdx + 14], al
    57a6: 18 42 0e                     	sbb	byte ptr [rdx + 14], al
    57a9: 20 42 0e                     	and	byte ptr [rdx + 14], al
    57ac: 28 41 0e                     	sub	byte ptr [rcx + 14], al
    57af: 30 47 0e                     	xor	byte ptr [rdi + 14], al
    57b2: b0 02                        	mov	al, 2
    57b4: 83 06 8c                     	add	dword ptr [rsi], -116
    57b7: 05 8d 04 8e 03               	add	eax, 59638925
    57bc: 8f 02                        	pop	qword ptr [rdx]
    57be: 03 39                        	add	edi, dword ptr [rcx]
    57c0: 02 0e                        	add	cl, byte ptr [rsi]
    57c2: 30 41 0e                     	xor	byte ptr [rcx + 14], al
    57c5: 28 42 0e                     	sub	byte ptr [rdx + 14], al
    57c8: 20 42 0e                     	and	byte ptr [rdx + 14], al
    57cb: 18 42 0e                     	sbb	byte ptr [rdx + 14], al
    57ce: 10 42 0e                     	adc	byte ptr [rdx + 14], al
    57d1: 08 41 0e                     	or	byte ptr [rcx + 14], al
    57d4: b0 02                        	mov	al, 2
    57d6: 00 00                        	add	byte ptr [rax], al
    57d8: 3c 00                        	cmp	al, 0
    57da: 00 00                        	add	byte ptr [rax], al
    57dc: 24 04                        	and	al, 4
    57de: 00 00                        	add	byte ptr [rax], al
    57e0: d0 f3                        	<unknown>
    57e2: ff ff                        	<unknown>
    57e4: 2c 03                        	sub	al, 3
    57e6: 00 00                        	add	byte ptr [rax], al
    57e8: 00 42 0e                     	add	byte ptr [rdx + 14], al
    57eb: 10 42 0e                     	adc	byte ptr [rdx + 14], al
    57ee: 18 42 0e                     	sbb	byte ptr [rdx + 14], al
    57f1: 20 41 0e                     	and	byte ptr [rcx + 14], al
    57f4: 28 47 0e                     	sub	byte ptr [rdi + 14], al
    57f7: b0 02                        	mov	al, 2
    57f9: 83 05 8c 04 8e 03 8f         	add	dword ptr [rip + 59638924], -113 # 0x38e5c8c <completed.0+0x38dea7c>
    5800: 02 03                        	add	al, byte ptr [rbx]
    5802: 41 02 0e                     	add	cl, byte ptr [r14]
    5805: 28 41 0e                     	sub	byte ptr [rcx + 14], al
    5808: 20 42 0e                     	and	byte ptr [rdx + 14], al
    580b: 18 42 0e                     	sbb	byte ptr [rdx + 14], al
    580e: 10 42 0e                     	adc	byte ptr [rdx + 14], al
    5811: 08 41 0e                     	or	byte ptr [rcx + 14], al
    5814: b0 02                        	mov	al, 2
    5816: 00 00                        	add	byte ptr [rax], al
    5818: 30 00                        	xor	byte ptr [rax], al
    581a: 00 00                        	add	byte ptr [rax], al
    581c: 64 04 00                     	add	al, 0
    581f: 00 c0                        	add	al, al
    5821: f6 ff                        	idiv	bh
    5823: ff ef                        	<unknown>
    5825: 00 00                        	add	byte ptr [rax], al
    5827: 00 00                        	add	byte ptr [rax], al
    5829: 42 0e                        	<unknown>
    582b: 10 42 0e                     	adc	byte ptr [rdx + 14], al
    582e: 18 41 0e                     	sbb	byte ptr [rcx + 14], al
    5831: 20 44 0e 30                  	and	byte ptr [rsi + rcx + 48], al
    5835: 83 04 8e 03                  	add	dword ptr [rsi + 4*rcx], 3
    5839: 8f 02                        	pop	qword ptr [rdx]
    583b: 02 6b 0e                     	add	ch, byte ptr [rbx + 14]
    583e: 20 41 0e                     	and	byte ptr [rcx + 14], al
    5841: 18 42 0e                     	sbb	byte ptr [rdx + 14], al
    5844: 10 42 0e                     	adc	byte ptr [rdx + 14], al
    5847: 08 41 0e                     	or	byte ptr [rcx + 14], al
    584a: 30 00                        	xor	byte ptr [rax], al

000000000000584c <__FRAME_END__>:
    584c: 00 00                        	add	byte ptr [rax], al
    584e: 00 00                        	add	byte ptr [rax], al

Disassembly of section .init_array:

0000000000006da0 <__frame_dummy_init_array_entry>:
    6da0: 70 24                        	jo	0x6dc6 <vkUpdateDescriptorSets+0x6dc6>
    6da2: 00 00                        	add	byte ptr [rax], al
    6da4: 00 00                        	add	byte ptr [rax], al
    6da6: 00 00                        	add	byte ptr [rax], al
    6da8: a0                           	<unknown>
    6da9: 23 00                        	and	eax, dword ptr [rax]
    6dab: 00 00                        	add	byte ptr [rax], al
    6dad: 00 00                        	add	byte ptr [rax], al
    6daf: 00                           	<unknown>

Disassembly of section .fini_array:

0000000000006db0 <__do_global_dtors_aux_fini_array_entry>:
    6db0: 30 24 00                     	xor	byte ptr [rax + rax], ah
    6db3: 00 00                        	add	byte ptr [rax], al
    6db5: 00 00                        	add	byte ptr [rax], al
    6db7: 00                           	<unknown>

Disassembly of section .data.rel.ro:

0000000000006db8 <.data.rel.ro>:
    6db8: 04 be                        	add	al, -66
    6dba: 9c                           	pushfq
    6dbb: 3b 00                        	cmp	eax, dword ptr [rax]
		...
    6dc9: 00 00                        	add	byte ptr [rax], al
    6dcb: 00 11                        	add	byte ptr [rcx], dl
    6dcd: 11 00                        	adc	dword ptr [rax], eax
    6dcf: 00 07                        	add	byte ptr [rdi], al
    6dd1: 00 00                        	add	byte ptr [rax], al
    6dd3: 00 00                        	add	byte ptr [rax], al
    6dd5: 00 00                        	add	byte ptr [rax], al
    6dd7: 00 30                        	add	byte ptr [rax], dh
    6dd9: 47 00 00                     	add	byte ptr [r8], r8b
		...

Disassembly of section .dynamic:

0000000000006de8 <_DYNAMIC>:
    6de8: 01 00                        	add	dword ptr [rax], eax
    6dea: 00 00                        	add	byte ptr [rax], al
    6dec: 00 00                        	add	byte ptr [rax], al
    6dee: 00 00                        	add	byte ptr [rax], al
    6df0: 11 06                        	adc	dword ptr [rsi], eax
    6df2: 00 00                        	add	byte ptr [rax], al
    6df4: 00 00                        	add	byte ptr [rax], al
    6df6: 00 00                        	add	byte ptr [rax], al
    6df8: 01 00                        	add	dword ptr [rax], eax
    6dfa: 00 00                        	add	byte ptr [rax], al
    6dfc: 00 00                        	add	byte ptr [rax], al
    6dfe: 00 00                        	add	byte ptr [rax], al
    6e00: 1e                           	<unknown>
    6e01: 06                           	<unknown>
    6e02: 00 00                        	add	byte ptr [rax], al
    6e04: 00 00                        	add	byte ptr [rax], al
    6e06: 00 00                        	add	byte ptr [rax], al
    6e08: 01 00                        	add	dword ptr [rax], eax
    6e0a: 00 00                        	add	byte ptr [rax], al
    6e0c: 00 00                        	add	byte ptr [rax], al
    6e0e: 00 00                        	add	byte ptr [rax], al
    6e10: 2d 06 00 00 00               	sub	eax, 6
    6e15: 00 00                        	add	byte ptr [rax], al
    6e17: 00 0e                        	add	byte ptr [rsi], cl
    6e19: 00 00                        	add	byte ptr [rax], al
    6e1b: 00 00                        	add	byte ptr [rax], al
    6e1d: 00 00                        	add	byte ptr [rax], al
    6e1f: 00 37                        	add	byte ptr [rdi], dh
    6e21: 06                           	<unknown>
    6e22: 00 00                        	add	byte ptr [rax], al
    6e24: 00 00                        	add	byte ptr [rax], al
    6e26: 00 00                        	add	byte ptr [rax], al
    6e28: 0c 00                        	or	al, 0
    6e2a: 00 00                        	add	byte ptr [rax], al
    6e2c: 00 00                        	add	byte ptr [rax], al
    6e2e: 00 00                        	add	byte ptr [rax], al
    6e30: 00 20                        	add	byte ptr [rax], ah
    6e32: 00 00                        	add	byte ptr [rax], al
    6e34: 00 00                        	add	byte ptr [rax], al
    6e36: 00 00                        	add	byte ptr [rax], al
    6e38: 0d 00 00 00 00               	or	eax, 0
    6e3d: 00 00                        	add	byte ptr [rax], al
    6e3f: 00 d0                        	add	al, dl
    6e41: 4f 00 00                     	add	byte ptr [r8], r8b
    6e44: 00 00                        	add	byte ptr [rax], al
    6e46: 00 00                        	add	byte ptr [rax], al
    6e48: 19 00                        	sbb	dword ptr [rax], eax
    6e4a: 00 00                        	add	byte ptr [rax], al
    6e4c: 00 00                        	add	byte ptr [rax], al
    6e4e: 00 00                        	add	byte ptr [rax], al
    6e50: a0 6d 00 00 00 00 00 00 1b   	movabs	al, byte ptr [1945555039024054381]
    6e59: 00 00                        	add	byte ptr [rax], al
    6e5b: 00 00                        	add	byte ptr [rax], al
    6e5d: 00 00                        	add	byte ptr [rax], al
    6e5f: 00 10                        	add	byte ptr [rax], dl
    6e61: 00 00                        	add	byte ptr [rax], al
    6e63: 00 00                        	add	byte ptr [rax], al
    6e65: 00 00                        	add	byte ptr [rax], al
    6e67: 00 1a                        	add	byte ptr [rdx], bl
    6e69: 00 00                        	add	byte ptr [rax], al
    6e6b: 00 00                        	add	byte ptr [rax], al
    6e6d: 00 00                        	add	byte ptr [rax], al
    6e6f: 00 b0 6d 00 00 00            	add	byte ptr [rax + 109], dh
    6e75: 00 00                        	add	byte ptr [rax], al
    6e77: 00 1c 00                     	add	byte ptr [rax + rax], bl
    6e7a: 00 00                        	add	byte ptr [rax], al
    6e7c: 00 00                        	add	byte ptr [rax], al
    6e7e: 00 00                        	add	byte ptr [rax], al
    6e80: 08 00                        	or	byte ptr [rax], al
    6e82: 00 00                        	add	byte ptr [rax], al
    6e84: 00 00                        	add	byte ptr [rax], al
    6e86: 00 00                        	add	byte ptr [rax], al
    6e88: f5                           	cmc
    6e89: fe ff                        	<unknown>
    6e8b: 6f                           	outsd	dx, dword ptr [rsi]
    6e8c: 00 00                        	add	byte ptr [rax], al
    6e8e: 00 00                        	add	byte ptr [rax], al
    6e90: 60                           	<unknown>
    6e91: 02 00                        	add	al, byte ptr [rax]
    6e93: 00 00                        	add	byte ptr [rax], al
    6e95: 00 00                        	add	byte ptr [rax], al
    6e97: 00 05 00 00 00 00            	add	byte ptr [rip], al      # 0x6e9d <_DYNAMIC+0xb5>
    6e9d: 00 00                        	add	byte ptr [rax], al
    6e9f: 00 70 0a                     	add	byte ptr [rax + 10], dh
    6ea2: 00 00                        	add	byte ptr [rax], al
    6ea4: 00 00                        	add	byte ptr [rax], al
    6ea6: 00 00                        	add	byte ptr [rax], al
    6ea8: 06                           	<unknown>
    6ea9: 00 00                        	add	byte ptr [rax], al
    6eab: 00 00                        	add	byte ptr [rax], al
    6ead: 00 00                        	add	byte ptr [rax], al
    6eaf: 00 20                        	add	byte ptr [rax], ah
    6eb1: 03 00                        	add	eax, dword ptr [rax]
    6eb3: 00 00                        	add	byte ptr [rax], al
    6eb5: 00 00                        	add	byte ptr [rax], al
    6eb7: 00 0a                        	add	byte ptr [rdx], cl
    6eb9: 00 00                        	add	byte ptr [rax], al
    6ebb: 00 00                        	add	byte ptr [rax], al
    6ebd: 00 00                        	add	byte ptr [rax], al
    6ebf: 00 5f 06                     	add	byte ptr [rdi + 6], bl
    6ec2: 00 00                        	add	byte ptr [rax], al
    6ec4: 00 00                        	add	byte ptr [rax], al
    6ec6: 00 00                        	add	byte ptr [rax], al
    6ec8: 0b 00                        	or	eax, dword ptr [rax]
    6eca: 00 00                        	add	byte ptr [rax], al
    6ecc: 00 00                        	add	byte ptr [rax], al
    6ece: 00 00                        	add	byte ptr [rax], al
    6ed0: 18 00                        	sbb	byte ptr [rax], al
    6ed2: 00 00                        	add	byte ptr [rax], al
    6ed4: 00 00                        	add	byte ptr [rax], al
    6ed6: 00 00                        	add	byte ptr [rax], al
    6ed8: 03 00                        	add	eax, dword ptr [rax]
    6eda: 00 00                        	add	byte ptr [rax], al
    6edc: 00 00                        	add	byte ptr [rax], al
    6ede: 00 00                        	add	byte ptr [rax], al
    6ee0: 00 70 00                     	add	byte ptr [rax], dh
    6ee3: 00 00                        	add	byte ptr [rax], al
    6ee5: 00 00                        	add	byte ptr [rax], al
    6ee7: 00 02                        	add	byte ptr [rdx], al
    6ee9: 00 00                        	add	byte ptr [rax], al
    6eeb: 00 00                        	add	byte ptr [rax], al
    6eed: 00 00                        	add	byte ptr [rax], al
    6eef: 00 10                        	add	byte ptr [rax], dl
    6ef1: 05 00 00 00 00               	add	eax, 0
    6ef6: 00 00                        	add	byte ptr [rax], al
    6ef8: 14 00                        	adc	al, 0
    6efa: 00 00                        	add	byte ptr [rax], al
    6efc: 00 00                        	add	byte ptr [rax], al
    6efe: 00 00                        	add	byte ptr [rax], al
    6f00: 07                           	<unknown>
    6f01: 00 00                        	add	byte ptr [rax], al
    6f03: 00 00                        	add	byte ptr [rax], al
    6f05: 00 00                        	add	byte ptr [rax], al
    6f07: 00 17                        	add	byte ptr [rdi], dl
    6f09: 00 00                        	add	byte ptr [rax], al
    6f0b: 00 00                        	add	byte ptr [rax], al
    6f0d: 00 00                        	add	byte ptr [rax], al
    6f0f: 00 08                        	add	byte ptr [rax], cl
    6f11: 13 00                        	adc	eax, dword ptr [rax]
    6f13: 00 00                        	add	byte ptr [rax], al
    6f15: 00 00                        	add	byte ptr [rax], al
    6f17: 00 07                        	add	byte ptr [rdi], al
    6f19: 00 00                        	add	byte ptr [rax], al
    6f1b: 00 00                        	add	byte ptr [rax], al
    6f1d: 00 00                        	add	byte ptr [rax], al
    6f1f: 00 a0 11 00 00 00            	add	byte ptr [rax + 17], ah
    6f25: 00 00                        	add	byte ptr [rax], al
    6f27: 00 08                        	add	byte ptr [rax], cl
    6f29: 00 00                        	add	byte ptr [rax], al
    6f2b: 00 00                        	add	byte ptr [rax], al
    6f2d: 00 00                        	add	byte ptr [rax], al
    6f2f: 00 68 01                     	add	byte ptr [rax + 1], ch
    6f32: 00 00                        	add	byte ptr [rax], al
    6f34: 00 00                        	add	byte ptr [rax], al
    6f36: 00 00                        	add	byte ptr [rax], al
    6f38: 09 00                        	or	dword ptr [rax], eax
    6f3a: 00 00                        	add	byte ptr [rax], al
    6f3c: 00 00                        	add	byte ptr [rax], al
    6f3e: 00 00                        	add	byte ptr [rax], al
    6f40: 18 00                        	sbb	byte ptr [rax], al
    6f42: 00 00                        	add	byte ptr [rax], al
    6f44: 00 00                        	add	byte ptr [rax], al
    6f46: 00 00                        	add	byte ptr [rax], al
    6f48: fe ff                        	<unknown>
    6f4a: ff 6f 00                     	jmp	[rdi]
    6f4d: 00 00                        	add	byte ptr [rax], al
    6f4f: 00 70 11                     	add	byte ptr [rax + 17], dh
    6f52: 00 00                        	add	byte ptr [rax], al
    6f54: 00 00                        	add	byte ptr [rax], al
    6f56: 00 00                        	add	byte ptr [rax], al
    6f58: ff ff                        	<unknown>
    6f5a: ff 6f 00                     	jmp	[rdi]
    6f5d: 00 00                        	add	byte ptr [rax], al
    6f5f: 00 01                        	add	byte ptr [rcx], al
    6f61: 00 00                        	add	byte ptr [rax], al
    6f63: 00 00                        	add	byte ptr [rax], al
    6f65: 00 00                        	add	byte ptr [rax], al
    6f67: 00 f0                        	add	al, dh
    6f69: ff ff                        	<unknown>
    6f6b: 6f                           	outsd	dx, dword ptr [rsi]
    6f6c: 00 00                        	add	byte ptr [rax], al
    6f6e: 00 00                        	add	byte ptr [rax], al
    6f70: d0 10                        	rcl	byte ptr [rax]
    6f72: 00 00                        	add	byte ptr [rax], al
    6f74: 00 00                        	add	byte ptr [rax], al
    6f76: 00 00                        	add	byte ptr [rax], al
    6f78: f9                           	stc
    6f79: ff ff                        	<unknown>
    6f7b: 6f                           	outsd	dx, dword ptr [rsi]
    6f7c: 00 00                        	add	byte ptr [rax], al
    6f7e: 00 00                        	add	byte ptr [rax], al
    6f80: 0a 00                        	or	al, byte ptr [rax]
		...
    6fd6: 00 00                        	add	byte ptr [rax], al

Disassembly of section .got:

0000000000006fd8 <.got>:
		...

Disassembly of section .got.plt:

0000000000007000 <_GLOBAL_OFFSET_TABLE_>:
    7000: e8 6d 00 00 00               	call	0x7072 <_GLOBAL_OFFSET_TABLE_+0x72>
		...
    7015: 00 00                        	add	byte ptr [rax], al
    7017: 00 36                        	add	byte ptr [rsi], dh
    7019: 20 00                        	and	byte ptr [rax], al
    701b: 00 00                        	add	byte ptr [rax], al
    701d: 00 00                        	add	byte ptr [rax], al
    701f: 00 46 20                     	add	byte ptr [rsi + 32], al
    7022: 00 00                        	add	byte ptr [rax], al
    7024: 00 00                        	add	byte ptr [rax], al
    7026: 00 00                        	add	byte ptr [rax], al
    7028: 56                           	push	rsi
    7029: 20 00                        	and	byte ptr [rax], al
    702b: 00 00                        	add	byte ptr [rax], al
    702d: 00 00                        	add	byte ptr [rax], al
    702f: 00 66 20                     	add	byte ptr [rsi + 32], ah
    7032: 00 00                        	add	byte ptr [rax], al
    7034: 00 00                        	add	byte ptr [rax], al
    7036: 00 00                        	add	byte ptr [rax], al
    7038: 76 20                        	jbe	0x705a <_GLOBAL_OFFSET_TABLE_+0x5a>
    703a: 00 00                        	add	byte ptr [rax], al
    703c: 00 00                        	add	byte ptr [rax], al
    703e: 00 00                        	add	byte ptr [rax], al
    7040: 86 20                        	xchg	byte ptr [rax], ah
    7042: 00 00                        	add	byte ptr [rax], al
    7044: 00 00                        	add	byte ptr [rax], al
    7046: 00 00                        	add	byte ptr [rax], al
    7048: 96                           	xchg	eax, esi
    7049: 20 00                        	and	byte ptr [rax], al
    704b: 00 00                        	add	byte ptr [rax], al
    704d: 00 00                        	add	byte ptr [rax], al
    704f: 00 a6 20 00 00 00            	add	byte ptr [rsi + 32], ah
    7055: 00 00                        	add	byte ptr [rax], al
    7057: 00 b6 20 00 00 00            	add	byte ptr [rsi + 32], dh
    705d: 00 00                        	add	byte ptr [rax], al
    705f: 00 c6                        	add	dh, al
    7061: 20 00                        	and	byte ptr [rax], al
    7063: 00 00                        	add	byte ptr [rax], al
    7065: 00 00                        	add	byte ptr [rax], al
    7067: 00 d6                        	add	dh, dl
    7069: 20 00                        	and	byte ptr [rax], al
    706b: 00 00                        	add	byte ptr [rax], al
    706d: 00 00                        	add	byte ptr [rax], al
    706f: 00 e6                        	add	dh, ah
    7071: 20 00                        	and	byte ptr [rax], al
    7073: 00 00                        	add	byte ptr [rax], al
    7075: 00 00                        	add	byte ptr [rax], al
    7077: 00 f6                        	add	dh, dh
    7079: 20 00                        	and	byte ptr [rax], al
    707b: 00 00                        	add	byte ptr [rax], al
    707d: 00 00                        	add	byte ptr [rax], al
    707f: 00 06                        	add	byte ptr [rsi], al
    7081: 21 00                        	and	dword ptr [rax], eax
    7083: 00 00                        	add	byte ptr [rax], al
    7085: 00 00                        	add	byte ptr [rax], al
    7087: 00 16                        	add	byte ptr [rsi], dl
    7089: 21 00                        	and	dword ptr [rax], eax
    708b: 00 00                        	add	byte ptr [rax], al
    708d: 00 00                        	add	byte ptr [rax], al
    708f: 00 26                        	add	byte ptr [rsi], ah
    7091: 21 00                        	and	dword ptr [rax], eax
    7093: 00 00                        	add	byte ptr [rax], al
    7095: 00 00                        	add	byte ptr [rax], al
    7097: 00 36                        	add	byte ptr [rsi], dh
    7099: 21 00                        	and	dword ptr [rax], eax
    709b: 00 00                        	add	byte ptr [rax], al
    709d: 00 00                        	add	byte ptr [rax], al
    709f: 00 46 21                     	add	byte ptr [rsi + 33], al
    70a2: 00 00                        	add	byte ptr [rax], al
    70a4: 00 00                        	add	byte ptr [rax], al
    70a6: 00 00                        	add	byte ptr [rax], al
    70a8: 56                           	push	rsi
    70a9: 21 00                        	and	dword ptr [rax], eax
    70ab: 00 00                        	add	byte ptr [rax], al
    70ad: 00 00                        	add	byte ptr [rax], al
    70af: 00 66 21                     	add	byte ptr [rsi + 33], ah
    70b2: 00 00                        	add	byte ptr [rax], al
    70b4: 00 00                        	add	byte ptr [rax], al
    70b6: 00 00                        	add	byte ptr [rax], al
    70b8: 76 21                        	jbe	0x70db <_GLOBAL_OFFSET_TABLE_+0xdb>
    70ba: 00 00                        	add	byte ptr [rax], al
    70bc: 00 00                        	add	byte ptr [rax], al
    70be: 00 00                        	add	byte ptr [rax], al
    70c0: 86 21                        	xchg	byte ptr [rcx], ah
    70c2: 00 00                        	add	byte ptr [rax], al
    70c4: 00 00                        	add	byte ptr [rax], al
    70c6: 00 00                        	add	byte ptr [rax], al
    70c8: 96                           	xchg	eax, esi
    70c9: 21 00                        	and	dword ptr [rax], eax
    70cb: 00 00                        	add	byte ptr [rax], al
    70cd: 00 00                        	add	byte ptr [rax], al
    70cf: 00 a6 21 00 00 00            	add	byte ptr [rsi + 33], ah
    70d5: 00 00                        	add	byte ptr [rax], al
    70d7: 00 b6 21 00 00 00            	add	byte ptr [rsi + 33], dh
    70dd: 00 00                        	add	byte ptr [rax], al
    70df: 00 c6                        	add	dh, al
    70e1: 21 00                        	and	dword ptr [rax], eax
    70e3: 00 00                        	add	byte ptr [rax], al
    70e5: 00 00                        	add	byte ptr [rax], al
    70e7: 00 d6                        	add	dh, dl
    70e9: 21 00                        	and	dword ptr [rax], eax
    70eb: 00 00                        	add	byte ptr [rax], al
    70ed: 00 00                        	add	byte ptr [rax], al
    70ef: 00 e6                        	add	dh, ah
    70f1: 21 00                        	and	dword ptr [rax], eax
    70f3: 00 00                        	add	byte ptr [rax], al
    70f5: 00 00                        	add	byte ptr [rax], al
    70f7: 00 f6                        	add	dh, dh
    70f9: 21 00                        	and	dword ptr [rax], eax
    70fb: 00 00                        	add	byte ptr [rax], al
    70fd: 00 00                        	add	byte ptr [rax], al
    70ff: 00 06                        	add	byte ptr [rsi], al
    7101: 22 00                        	and	al, byte ptr [rax]
    7103: 00 00                        	add	byte ptr [rax], al
    7105: 00 00                        	add	byte ptr [rax], al
    7107: 00 16                        	add	byte ptr [rsi], dl
    7109: 22 00                        	and	al, byte ptr [rax]
    710b: 00 00                        	add	byte ptr [rax], al
    710d: 00 00                        	add	byte ptr [rax], al
    710f: 00 26                        	add	byte ptr [rsi], ah
    7111: 22 00                        	and	al, byte ptr [rax]
    7113: 00 00                        	add	byte ptr [rax], al
    7115: 00 00                        	add	byte ptr [rax], al
    7117: 00 36                        	add	byte ptr [rsi], dh
    7119: 22 00                        	and	al, byte ptr [rax]
    711b: 00 00                        	add	byte ptr [rax], al
    711d: 00 00                        	add	byte ptr [rax], al
    711f: 00 46 22                     	add	byte ptr [rsi + 34], al
    7122: 00 00                        	add	byte ptr [rax], al
    7124: 00 00                        	add	byte ptr [rax], al
    7126: 00 00                        	add	byte ptr [rax], al
    7128: 56                           	push	rsi
    7129: 22 00                        	and	al, byte ptr [rax]
    712b: 00 00                        	add	byte ptr [rax], al
    712d: 00 00                        	add	byte ptr [rax], al
    712f: 00 66 22                     	add	byte ptr [rsi + 34], ah
    7132: 00 00                        	add	byte ptr [rax], al
    7134: 00 00                        	add	byte ptr [rax], al
    7136: 00 00                        	add	byte ptr [rax], al
    7138: 76 22                        	jbe	0x715c <_GLOBAL_OFFSET_TABLE_+0x15c>
    713a: 00 00                        	add	byte ptr [rax], al
    713c: 00 00                        	add	byte ptr [rax], al
    713e: 00 00                        	add	byte ptr [rax], al
    7140: 86 22                        	xchg	byte ptr [rdx], ah
    7142: 00 00                        	add	byte ptr [rax], al
    7144: 00 00                        	add	byte ptr [rax], al
    7146: 00 00                        	add	byte ptr [rax], al
    7148: 96                           	xchg	eax, esi
    7149: 22 00                        	and	al, byte ptr [rax]
    714b: 00 00                        	add	byte ptr [rax], al
    714d: 00 00                        	add	byte ptr [rax], al
    714f: 00 a6 22 00 00 00            	add	byte ptr [rsi + 34], ah
    7155: 00 00                        	add	byte ptr [rax], al
    7157: 00 b6 22 00 00 00            	add	byte ptr [rsi + 34], dh
    715d: 00 00                        	add	byte ptr [rax], al
    715f: 00 c6                        	add	dh, al
    7161: 22 00                        	and	al, byte ptr [rax]
    7163: 00 00                        	add	byte ptr [rax], al
    7165: 00 00                        	add	byte ptr [rax], al
    7167: 00 d6                        	add	dh, dl
    7169: 22 00                        	and	al, byte ptr [rax]
    716b: 00 00                        	add	byte ptr [rax], al
    716d: 00 00                        	add	byte ptr [rax], al
    716f: 00 e6                        	add	dh, ah
    7171: 22 00                        	and	al, byte ptr [rax]
    7173: 00 00                        	add	byte ptr [rax], al
    7175: 00 00                        	add	byte ptr [rax], al
    7177: 00 f6                        	add	dh, dh
    7179: 22 00                        	and	al, byte ptr [rax]
    717b: 00 00                        	add	byte ptr [rax], al
    717d: 00 00                        	add	byte ptr [rax], al
    717f: 00 06                        	add	byte ptr [rsi], al
    7181: 23 00                        	and	eax, dword ptr [rax]
    7183: 00 00                        	add	byte ptr [rax], al
    7185: 00 00                        	add	byte ptr [rax], al
    7187: 00 16                        	add	byte ptr [rsi], dl
    7189: 23 00                        	and	eax, dword ptr [rax]
    718b: 00 00                        	add	byte ptr [rax], al
    718d: 00 00                        	add	byte ptr [rax], al
    718f: 00 26                        	add	byte ptr [rsi], ah
    7191: 23 00                        	and	eax, dword ptr [rax]
    7193: 00 00                        	add	byte ptr [rax], al
    7195: 00 00                        	add	byte ptr [rax], al
    7197: 00 36                        	add	byte ptr [rsi], dh
    7199: 23 00                        	and	eax, dword ptr [rax]
    719b: 00 00                        	add	byte ptr [rax], al
    719d: 00 00                        	add	byte ptr [rax], al
    719f: 00 46 23                     	add	byte ptr [rsi + 35], al
    71a2: 00 00                        	add	byte ptr [rax], al
    71a4: 00 00                        	add	byte ptr [rax], al
    71a6: 00 00                        	add	byte ptr [rax], al
    71a8: 56                           	push	rsi
    71a9: 23 00                        	and	eax, dword ptr [rax]
    71ab: 00 00                        	add	byte ptr [rax], al
    71ad: 00 00                        	add	byte ptr [rax], al
    71af: 00 66 23                     	add	byte ptr [rsi + 35], ah
    71b2: 00 00                        	add	byte ptr [rax], al
    71b4: 00 00                        	add	byte ptr [rax], al
    71b6: 00 00                        	add	byte ptr [rax], al
    71b8: 76 23                        	jbe	0x71dd <__dso_handle+0xd>
    71ba: 00 00                        	add	byte ptr [rax], al
    71bc: 00 00                        	add	byte ptr [rax], al
    71be: 00 00                        	add	byte ptr [rax], al
    71c0: 86 23                        	xchg	byte ptr [rbx], ah
    71c2: 00 00                        	add	byte ptr [rax], al
    71c4: 00 00                        	add	byte ptr [rax], al
    71c6: 00 00                        	add	byte ptr [rax], al

Disassembly of section .data:

00000000000071d0 <__dso_handle>:
    71d0: d0 71 00                     	<unknown>
		...
    71df: 00 1b                        	add	byte ptr [rbx], bl

00000000000071e0 <validationLayers>:
    71e0: 1b 51 00                     	sbb	edx, dword ptr [rcx]
		...
    71ef: 00 37                        	add	byte ptr [rdi], dh

00000000000071f0 <enabledInstanceExtensions>:
    71f0: 37                           	<unknown>
    71f1: 51                           	push	rcx
    71f2: 00 00                        	add	byte ptr [rax], al
    71f4: 00 00                        	add	byte ptr [rax], al
    71f6: 00 00                        	add	byte ptr [rax], al
    71f8: 5e                           	pop	rsi
    71f9: 51                           	push	rcx
    71fa: 00 00                        	add	byte ptr [rax], al
    71fc: 00 00                        	add	byte ptr [rax], al
    71fe: 00 00                        	add	byte ptr [rax], al

0000000000007200 <enabledDeviceExtensions>:
    7200: 71 51                        	jno	0x7253 <completed.0+0x43>
    7202: 00 00                        	add	byte ptr [rax], al
    7204: 00 00                        	add	byte ptr [rax], al
    7206: 00 00                        	add	byte ptr [rax], al
    7208: 91                           	xchg	eax, ecx
    7209: 51                           	push	rcx
    720a: 00 00                        	add	byte ptr [rax], al
    720c: 00 00                        	add	byte ptr [rax], al
    720e: 00 00                        	add	byte ptr [rax], al

Disassembly of section .bss:

0000000000007210 <completed.0>:
...

Disassembly of section .comment:

0000000000000000 <.comment>:
       0: 47 43                        	<unknown>
       2: 43 3a 20                     	cmp	spl, byte ptr [r8]
       5: 28 55 62                     	sub	byte ptr [rbp + 98], dl
       8: 75 6e                        	jne	0x78 <.comment+0x78>
       a: 74 75                        	je	0x81 <.comment+0x81>
       c: 20 31                        	and	byte ptr [rcx], dh
       e: 33 2e                        	xor	ebp, dword ptr [rsi]
      10: 31 2e                        	xor	dword ptr [rsi], ebp
      12: 30 2d 38 75 62 75            	xor	byte ptr [rip + 1969386808], ch # 0x75627550 <completed.0+0x75620340>
      18: 6e                           	outsb	dx, byte ptr [rsi]
      19: 74 75                        	je	0x90 <.comment+0x90>
      1b: 31 7e 32                     	xor	dword ptr [rsi + 50], edi
      1e: 32 2e                        	xor	ch, byte ptr [rsi]
      20: 30 34 29                     	xor	byte ptr [rcx + rbp], dh
      23: 20 31                        	and	byte ptr [rcx], dh
      25: 33 2e                        	xor	ebp, dword ptr [rsi]
      27: 31 2e                        	xor	dword ptr [rsi], ebp
      29: 30 00                        	xor	byte ptr [rax], al
      2b: 55                           	push	rbp
      2c: 62 75 6e 74 75               	<unknown>
      31: 20 63 6c                     	and	byte ptr [rbx + 108], ah
      34: 61                           	<unknown>
      35: 6e                           	outsb	dx, byte ptr [rsi]
      36: 67 20 76 65                  	and	byte ptr [esi + 101], dh
      3a: 72 73                        	jb	0xaf <.comment+0xaf>
      3c: 69 6f 6e 20 31 34 2e         	imul	ebp, dword ptr [rdi + 110], 775172384
      43: 30 2e                        	xor	byte ptr [rsi], ch
      45: 30 2d 31 75 62 75            	xor	byte ptr [rip + 1969386801], ch # 0x7562757c <completed.0+0x7562036c>
      4b: 6e                           	outsb	dx, byte ptr [rsi]
      4c: 74 75                        	je	0xc3 <.comment+0xc3>
      4e: 31 2e                        	xor	dword ptr [rsi], ebp
      50: 31 00                        	xor	dword ptr [rax], eax

Disassembly of section .debug_aranges:

0000000000000000 <.debug_aranges>:
       0: 2c 00                        	sub	al, 0
       2: 00 00                        	add	byte ptr [rax], al
       4: 02 00                        	add	al, byte ptr [rax]
       6: 00 00                        	add	byte ptr [rax], al
       8: 00 00                        	add	byte ptr [rax], al
       a: 08 00                        	or	byte ptr [rax], al
       c: 00 00                        	add	byte ptr [rax], al
       e: 00 00                        	add	byte ptr [rax], al
      10: a0 23 00 00 00 00 00 00 17   	movabs	al, byte ptr [1657324662872342563]
		...
      2d: 00 00                        	add	byte ptr [rax], al
      2f: 00                           	<unknown>

Disassembly of section .debug_info:

0000000000000000 <.debug_info>:
       0: 61                           	<unknown>
       1: 00 00                        	add	byte ptr [rax], al
       3: 00 05 00 01 08 00            	add	byte ptr [rip + 524544], al # 0x80109 <completed.0+0x78ef9>
       9: 00 00                        	add	byte ptr [rax], al
       b: 00 01                        	add	byte ptr [rcx], al
       d: 00 00                        	add	byte ptr [rax], al
       f: 00 00                        	add	byte ptr [rax], al
      11: 1d 00 00 00 00               	sbb	eax, 0
      16: 2e 00 00                     	add	byte ptr cs:[rax], al
      19: 00 0c 00                     	add	byte ptr [rax + rax], cl
		...
      28: 00 00                        	add	byte ptr [rax], al
      2a: 02 fa                        	add	bh, dl
      2c: 00 00                        	add	byte ptr [rax], al
      2e: 00 01                        	add	byte ptr [rcx], al
      30: 53                           	push	rbx
      31: 01 a0 23 00 00 00            	add	dword ptr [rax + 35], esp
      37: 00 00                        	add	byte ptr [rax], al
      39: 00 17                        	add	byte ptr [rdi], dl
      3b: 00 00                        	add	byte ptr [rax], al
      3d: 00 00                        	add	byte ptr [rax], al
      3f: 00 00                        	add	byte ptr [rax], al
      41: 00 01                        	add	byte ptr [rcx], al
      43: 9c                           	pushfq
      44: 5d                           	pop	rbp
      45: 00 00                        	add	byte ptr [rax], al
      47: 00 03                        	add	byte ptr [rbx], al
      49: e7 00                        	out	0, eax
      4b: 00 00                        	add	byte ptr [rax], al
      4d: 01 5e 10                     	add	dword ptr [rsi + 16], ebx
      50: 5d                           	pop	rbp
      51: 00 00                        	add	byte ptr [rax], al
      53: 00 12                        	add	byte ptr [rdx], dl
      55: 00 00                        	add	byte ptr [rax], al
      57: 00 0c 00                     	add	byte ptr [rax + rax], cl
      5a: 00 00                        	add	byte ptr [rax], al
      5c: 00 04 04                     	add	byte ptr [rsp + rax], al
      5f: 07                           	<unknown>
      60: ed                           	in	eax, dx
      61: 00 00                        	add	byte ptr [rax], al
      63: 00 00                        	add	byte ptr [rax], al

Disassembly of section .debug_abbrev:

0000000000000000 <.debug_abbrev>:
       0: 01 11                        	add	dword ptr [rcx], edx
       2: 01 25 0e 13 0b 03            	add	dword ptr [rip + 51057422], esp # 0x30b1316 <completed.0+0x30aa106>
       8: 1f                           	<unknown>
       9: 1b 1f                        	sbb	ebx, dword ptr [rdi]
       b: 55                           	push	rbp
       c: 17                           	<unknown>
       d: 11 01                        	adc	dword ptr [rcx], eax
       f: 10 17                        	adc	byte ptr [rdi], dl
      11: 00 00                        	add	byte ptr [rax], al
      13: 02 2e                        	add	ch, byte ptr [rsi]
      15: 01 03                        	add	dword ptr [rbx], eax
      17: 0e                           	<unknown>
      18: 3a 0b                        	cmp	cl, byte ptr [rbx]
      1a: 3b 0b                        	cmp	ecx, dword ptr [rbx]
      1c: 39 0b                        	cmp	dword ptr [rbx], ecx
      1e: 27                           	<unknown>
      1f: 19 11                        	sbb	dword ptr [rcx], edx
      21: 01 12                        	add	dword ptr [rdx], edx
      23: 07                           	<unknown>
      24: 40 18 7a 19                  	sbb	byte ptr [rdx + 25], dil
      28: 01 13                        	add	dword ptr [rbx], edx
      2a: 00 00                        	add	byte ptr [rax], al
      2c: 03 34 00                     	add	esi, dword ptr [rax + rax]
      2f: 03 0e                        	add	ecx, dword ptr [rsi]
      31: 3a 0b                        	cmp	cl, byte ptr [rbx]
      33: 3b 0b                        	cmp	ecx, dword ptr [rbx]
      35: 39 0b                        	cmp	dword ptr [rbx], ecx
      37: 49 13 02                     	adc	rax, qword ptr [r10]
      3a: 17                           	<unknown>
      3b: b7 42                        	mov	bh, 66
      3d: 17                           	<unknown>
      3e: 00 00                        	add	byte ptr [rax], al
      40: 04 24                        	add	al, 36
      42: 00 0b                        	add	byte ptr [rbx], cl
      44: 0b 3e                        	or	edi, dword ptr [rsi]
      46: 0b 03                        	or	eax, dword ptr [rbx]
      48: 0e                           	<unknown>
      49: 00 00                        	add	byte ptr [rax], al
      4b: 00                           	<unknown>

Disassembly of section .debug_line:

0000000000000000 <.debug_line>:
       0: 5f                           	pop	rdi
       1: 00 00                        	add	byte ptr [rax], al
       3: 00 05 00 08 00 2e            	add	byte ptr [rip + 771753984], al # 0x2e000809 <completed.0+0x2dff95f9>
       9: 00 00                        	add	byte ptr [rax], al
       b: 00 01                        	add	byte ptr [rcx], al
       d: 01 01                        	add	dword ptr [rcx], eax
       f: fb                           	sti
      10: 0e                           	<unknown>
      11: 0d 00 01 01 01               	or	eax, 16843008
      16: 01 00                        	add	dword ptr [rax], eax
      18: 00 00                        	add	byte ptr [rax], al
      1a: 01 00                        	add	dword ptr [rax], eax
      1c: 00 01                        	add	byte ptr [rcx], al
      1e: 01 01                        	add	dword ptr [rcx], eax
      20: 1f                           	<unknown>
      21: 02 2e                        	add	ch, byte ptr [rsi]
      23: 00 00                        	add	byte ptr [rax], al
      25: 00 6f 00                     	add	byte ptr [rdi], ch
      28: 00 00                        	add	byte ptr [rax], al
      2a: 02 01                        	add	al, byte ptr [rcx]
      2c: 1f                           	<unknown>
      2d: 02 0f                        	add	cl, byte ptr [rdi]
      2f: 02 20                        	add	ah, byte ptr [rax]
      31: 00 00                        	add	byte ptr [rax], al
      33: 00 01                        	add	byte ptr [rcx], al
      35: 20 00                        	and	byte ptr [rax], al
      37: 00 00                        	add	byte ptr [rax], al
      39: 01 05 01 00 09 02            	add	dword ptr [rip + 34144257], eax # 0x2090040 <completed.0+0x2088e30>
      3f: a0 23 00 00 00 00 00 00 03   	movabs	al, byte ptr [216172782113783843]
      48: d3 00                        	rol	dword ptr [rax], cl
      4a: 01 05 03 03 0a 4a            	add	dword ptr [rip + 1242170115], eax # 0x4a0a0353 <completed.0+0x4a099143>
      50: 05 18 06 01 05               	add	eax, 83953176
      55: 03 06                        	add	eax, dword ptr [rsi]
      57: 59                           	pop	rcx
      58: 13 06                        	adc	eax, dword ptr [rsi]
      5a: 82                           	<unknown>
      5b: 05 01 5a 02 01               	add	eax, 16931329
      60: 00 01                        	add	byte ptr [rcx], al
      62: 01                           	<unknown>

Disassembly of section .debug_str:

0000000000000000 <.debug_str>:
       0: 47 4e                        	<unknown>
       2: 55                           	push	rbp
       3: 20 43 31                     	and	byte ptr [rbx + 49], al
       6: 37                           	<unknown>
       7: 20 31                        	and	byte ptr [rcx], dh
       9: 33 2e                        	xor	ebp, dword ptr [rsi]
       b: 31 2e                        	xor	dword ptr [rsi], ebp
       d: 30 20                        	xor	byte ptr [rax], ah
       f: 2d 6d 6c 6f 6e               	sub	eax, 1852796013
      14: 67 2d 64 6f 75 62            	sub	eax, 1651863396
      1a: 6c                           	insb	byte ptr es:[rdi], dx
      1b: 65 2d 38 30 20 2d            	sub	eax, 757084216
      21: 6d                           	insd	dword ptr es:[rdi], dx
      22: 73 68                        	jae	0x8c <.debug_str+0x8c>
      24: 73 74                        	jae	0x9a <.debug_str+0x9a>
      26: 6b 20 2d                     	imul	esp, dword ptr [rax], 45
      29: 6d                           	insd	dword ptr es:[rdi], dx
      2a: 74 75                        	je	0xa1 <.debug_str+0xa1>
      2c: 6e                           	outsb	dx, byte ptr [rsi]
      2d: 65 3d 67 65 6e 65            	cmp	eax, 1701733735
      33: 72 69                        	jb	0x9e <.debug_str+0x9e>
      35: 63 20                        	movsxd	esp, dword ptr [rax]
      37: 2d 6d 61 72 63               	sub	eax, 1668440429
      3c: 68 3d 78 38 36               	push	909670461
      41: 2d 36 34 20 2d               	sub	eax, 757085238
      46: 67 20 2d 67 20 2d 67         	and	byte ptr [eip + 1731010663], ch
      4d: 20 2d 4f 32 20 2d            	and	byte ptr [rip + 757084751], ch # 0x2d2032a2 <completed.0+0x2d1fc092>
      53: 4f 32 20                     	xor	r12b, byte ptr [r8]
      56: 2d 4f 32 20 2d               	sub	eax, 757084751
      5b: 66 63 66 2d                  	movsxd	sp, dword ptr [rsi + 45]
      5f: 70 72                        	jo	0xd3 <.debug_str+0xd3>
      61: 6f                           	outsd	dx, dword ptr [rsi]
      62: 74 65                        	je	0xc9 <.debug_str+0xc9>
      64: 63 74 69 6f                  	movsxd	esi, dword ptr [rcx + 2*rbp + 111]
      68: 6e                           	outsb	dx, byte ptr [rsi]
      69: 3d 66 75 6c 6c               	cmp	eax, 1819047270
      6e: 20 2d 66 62 75 69            	and	byte ptr [rip + 1769300582], ch # 0x697562da <completed.0+0x6974f0ca>
      74: 6c                           	insb	byte ptr es:[rdi], dx
      75: 64 69 6e 67 2d 6c 69 62      	imul	ebp, dword ptr fs:[rsi + 103], 1651076141
      7d: 67 63 63 20                  	movsxd	esp, dword ptr [ebx + 32]
      81: 2d 66 6e 6f 2d               	sub	eax, 762277478
      86: 73 74                        	jae	0xfc <.debug_str+0xfc>
      88: 61                           	<unknown>
      89: 63 6b 2d                     	movsxd	ebp, dword ptr [rbx + 45]
      8c: 70 72                        	jo	0x100 <.debug_str+0x100>
      8e: 6f                           	outsd	dx, dword ptr [rsi]
      8f: 74 65                        	je	0xf6 <.debug_str+0xf6>
      91: 63 74 6f 72                  	movsxd	esi, dword ptr [rdi + 2*rbp + 114]
      95: 20 2d 66 70 69 63            	and	byte ptr [rip + 1667854438], ch # 0x63697101 <completed.0+0x6368fef1>
      9b: 20 2d 66 63 66 2d            	and	byte ptr [rip + 761684838], ch # 0x2d666407 <completed.0+0x2d65f1f7>
      a1: 70 72                        	jo	0x115 <.debug_str+0x115>
      a3: 6f                           	outsd	dx, dword ptr [rsi]
      a4: 74 65                        	je	0x10b <.debug_str+0x10b>
      a6: 63 74 69 6f                  	movsxd	esi, dword ptr [rcx + 2*rbp + 111]
      aa: 6e                           	outsb	dx, byte ptr [rsi]
      ab: 3d 66 75 6c 6c               	cmp	eax, 1819047270
      b0: 20 2d 66 61 73 79            	and	byte ptr [rip + 2037604710], ch # 0x7973621c <completed.0+0x7972f00c>
      b6: 6e                           	outsb	dx, byte ptr [rsi]
      b7: 63 68 72                     	movsxd	ebp, dword ptr [rax + 114]
      ba: 6f                           	outsd	dx, dword ptr [rsi]
      bb: 6e                           	outsb	dx, byte ptr [rsi]
      bc: 6f                           	outsd	dx, dword ptr [rsi]
      bd: 75 73                        	jne	0x132 <.debug_str+0x132>
      bf: 2d 75 6e 77 69               	sub	eax, 1769434741
      c4: 6e                           	outsb	dx, byte ptr [rsi]
      c5: 64 2d 74 61 62 6c            	sub	eax, 1818386804
      cb: 65 73 20                     	jae	0xee <.debug_str+0xee>
      ce: 2d 66 73 74 61               	sub	eax, 1635021670
      d3: 63 6b 2d                     	movsxd	ebp, dword ptr [rbx + 45]
      d6: 63 6c 61 73                  	movsxd	ebp, dword ptr [rcx + 2*riz + 115]
      da: 68 2d 70 72 6f               	push	1869770797
      df: 74 65                        	je	0x146 <.debug_str+0x146>
      e1: 63 74 69 6f                  	movsxd	esi, dword ptr [rcx + 2*rbp + 111]
      e5: 6e                           	outsb	dx, byte ptr [rsi]
      e6: 00 6d 78                     	add	byte ptr [rbp + 120], ch
      e9: 63 73 72                     	movsxd	esi, dword ptr [rbx + 114]
      ec: 00 75 6e                     	add	byte ptr [rbp + 110], dh
      ef: 73 69                        	jae	0x15a <.debug_str+0x15a>
      f1: 67 6e                        	outsb	dx, byte ptr [esi]
      f3: 65 64 20 69 6e               	and	byte ptr fs:[rcx + 110], ch
      f8: 74 00                        	je	0xfa <.debug_str+0xfa>
      fa: 73 65                        	jae	0x161 <.debug_str+0x161>
      fc: 74 5f                        	je	0x15d <.debug_str+0x15d>
      fe: 66 61                        	<unknown>
     100: 73 74                        	jae	0x176 <.debug_str+0x176>
     102: 5f                           	pop	rdi
     103: 6d                           	insd	dword ptr es:[rdi], dx
     104: 61                           	<unknown>
     105: 74 68                        	je	0x16f <.debug_str+0x16f>
     107: 00                           	<unknown>

Disassembly of section .debug_line_str:

0000000000000000 <.debug_line_str>:
       0: 2e 2e 2f                     	<unknown>
       3: 2e 2e 2f                     	<unknown>
       6: 2e 2e 2f                     	<unknown>
       9: 73 72                        	jae	0x7d <.debug_str+0x7d>
       b: 63 2f                        	movsxd	ebp, dword ptr [rdi]
       d: 6c                           	insb	byte ptr es:[rdi], dx
       e: 69 62 67 63 63 2f 63         	imul	esp, dword ptr [rdx + 103], 1664050019
      15: 6f                           	outsd	dx, dword ptr [rsi]
      16: 6e                           	outsb	dx, byte ptr [rsi]
      17: 66 69 67 2f 69 33            	imul	sp, word ptr [rdi + 47], 13161
      1d: 38 36                        	cmp	byte ptr [rsi], dh
      1f: 2f                           	<unknown>
      20: 63 72 74                     	movsxd	esi, dword ptr [rdx + 116]
      23: 66 61                        	<unknown>
      25: 73 74                        	jae	0x9b <.debug_str+0x9b>
      27: 6d                           	insd	dword ptr es:[rdi], dx
      28: 61                           	<unknown>
      29: 74 68                        	je	0x93 <.debug_str+0x93>
      2b: 2e 63 00                     	movsxd	eax, dword ptr cs:[rax]
      2e: 2f                           	<unknown>
      2f: 62                           	<unknown>
      30: 75 69                        	jne	0x9b <.debug_str+0x9b>
      32: 6c                           	insb	byte ptr es:[rdi], dx
      33: 64 2f                        	<unknown>
      35: 67 63 63 2d                  	movsxd	esp, dword ptr [ebx + 45]
      39: 31 33                        	xor	dword ptr [rbx], esi
      3b: 2d 49 76 7a 4b               	sub	eax, 1266316873
      40: 61                           	<unknown>
      41: 49 2f                        	<unknown>
      43: 67 63 63 2d                  	movsxd	esp, dword ptr [ebx + 45]
      47: 31 33                        	xor	dword ptr [rbx], esi
      49: 2d 31 33 2e 31               	sub	eax, 825111345
      4e: 2e 30 2f                     	xor	byte ptr cs:[rdi], ch
      51: 62                           	<unknown>
      52: 75 69                        	jne	0xbd <.debug_str+0xbd>
      54: 6c                           	insb	byte ptr es:[rdi], dx
      55: 64 2f                        	<unknown>
      57: 78 38                        	js	0x91 <.debug_str+0x91>
      59: 36 5f                        	pop	rdi
      5b: 36 34 2d                     	xor	al, 45
      5e: 6c                           	insb	byte ptr es:[rdi], dx
      5f: 69 6e 75 78 2d 67 6e         	imul	ebp, dword ptr [rsi + 117], 1852255608
      66: 75 2f                        	jne	0x97 <.debug_str+0x97>
      68: 6c                           	insb	byte ptr es:[rdi], dx
      69: 69 62 67 63 63 00 2e         	imul	esp, dword ptr [rdx + 103], 771777379
      70: 2e 2f                        	<unknown>
      72: 2e 2e 2f                     	<unknown>
      75: 2e 2e 2f                     	<unknown>
      78: 73 72                        	jae	0xec <.debug_str+0xec>
      7a: 63 2f                        	movsxd	ebp, dword ptr [rdi]
      7c: 6c                           	insb	byte ptr es:[rdi], dx
      7d: 69 62 67 63 63 2f 63         	imul	esp, dword ptr [rdx + 103], 1664050019
      84: 6f                           	outsd	dx, dword ptr [rsi]
      85: 6e                           	outsb	dx, byte ptr [rsi]
      86: 66 69 67 2f 69 33            	imul	sp, word ptr [rdi + 47], 13161
      8c: 38 36                        	cmp	byte ptr [rsi], dh
      8e: 00                           	<unknown>

Disassembly of section .debug_loclists:

0000000000000000 <.debug_loclists>:
       0: 31 00                        	xor	dword ptr [rax], eax
       2: 00 00                        	add	byte ptr [rax], al
       4: 05 00 08 00 00               	add	eax, 2048
       9: 00 00                        	add	byte ptr [rax], al
       b: 00 00                        	add	byte ptr [rax], al
       d: 01 01                        	add	dword ptr [rcx], eax
       f: 00 00                        	add	byte ptr [rax], al
      11: 00 06                        	add	byte ptr [rsi], al
      13: a9 23 00 00 00               	test	eax, 35
      18: 00 00                        	add	byte ptr [rax], al
      1a: 00 04 00                     	add	byte ptr [rax + rax], al
      1d: 00 02                        	add	byte ptr [rdx], al
      1f: 91                           	xchg	eax, ecx
      20: 74 04                        	je	0x26 <.debug_str+0x26>
      22: 00 08                        	add	byte ptr [rax], cl
      24: 09 91 74 94 04 0a            	or	dword ptr [rcx + 168072308], edx
      2a: 40 80 21 9f                  	and	byte ptr [rcx], -97
      2e: 04 08                        	add	al, 8
      30: 0e                           	<unknown>
      31: 02 91                        	<unknown>
      33: 74 00                        	je	0x35 <.debug_str+0x35>

Disassembly of section .debug_rnglists:

0000000000000000 <.debug_rnglists>:
       0: 13 00                        	adc	eax, dword ptr [rax]
       2: 00 00                        	add	byte ptr [rax], al
       4: 05 00 08 00 00               	add	eax, 2048
       9: 00 00                        	add	byte ptr [rax], al
       b: 00 07                        	add	byte ptr [rdi], al
       d: a0 23 00 00 00 00 00 00 17   	movabs	al, byte ptr [1657324662872342563]
      16: 00                           	<unknown>

Disassembly of section .symtab:

0000000000000000 <.symtab>:
		...
      18: 01 00                        	add	dword ptr [rax], eax
      1a: 00 00                        	add	byte ptr [rax], al
      1c: 04 00                        	add	al, 0
      1e: f1                           	<unknown>
      1f: ff 00                        	inc	dword ptr [rax]
		...
      2d: 00 00                        	add	byte ptr [rax], al
      2f: 00 0f                        	add	byte ptr [rdi], cl
      31: 00 00                        	add	byte ptr [rax], al
      33: 00 02                        	add	byte ptr [rdx], al
      35: 00 0c 00                     	add	byte ptr [rax + rax], cl
      38: a0 23 00 00 00 00 00 00 17   	movabs	al, byte ptr [1657324662872342563]
      41: 00 00                        	add	byte ptr [rax], al
      43: 00 00                        	add	byte ptr [rax], al
      45: 00 00                        	add	byte ptr [rax], al
      47: 00 1d 00 00 00 04            	add	byte ptr [rip + 67108864], bl # 0x400004d <completed.0+0x3ff8e3d>
      4d: 00 f1                        	add	cl, dh
      4f: ff 00                        	inc	dword ptr [rax]
		...
      5d: 00 00                        	add	byte ptr [rax], al
      5f: 00 28                        	add	byte ptr [rax], ch
      61: 00 00                        	add	byte ptr [rax], al
      63: 00 02                        	add	byte ptr [rdx], al
      65: 00 0c 00                     	add	byte ptr [rax + rax], cl
      68: c0 23 00                     	shl	byte ptr [rbx], 0
		...
      77: 00 2a                        	add	byte ptr [rdx], ch
      79: 00 00                        	add	byte ptr [rax], al
      7b: 00 02                        	add	byte ptr [rdx], al
      7d: 00 0c 00                     	add	byte ptr [rax + rax], cl
      80: f0                           	lock
      81: 23 00                        	and	eax, dword ptr [rax]
		...
      8f: 00 3d 00 00 00 02            	add	byte ptr [rip + 33554432], bh # 0x2000095 <completed.0+0x1ff8e85>
      95: 00 0c 00                     	add	byte ptr [rax + rax], cl
      98: 30 24 00                     	xor	byte ptr [rax + rax], ah
		...
      a7: 00 53 00                     	add	byte ptr [rbx], dl
      aa: 00 00                        	add	byte ptr [rax], al
      ac: 01 00                        	add	dword ptr [rax], eax
      ae: 18 00                        	sbb	byte ptr [rax], al
      b0: 10 72 00                     	adc	byte ptr [rdx], dh
      b3: 00 00                        	add	byte ptr [rax], al
      b5: 00 00                        	add	byte ptr [rax], al
      b7: 00 01                        	add	byte ptr [rcx], al
      b9: 00 00                        	add	byte ptr [rax], al
      bb: 00 00                        	add	byte ptr [rax], al
      bd: 00 00                        	add	byte ptr [rax], al
      bf: 00 5f 00                     	add	byte ptr [rdi], bl
      c2: 00 00                        	add	byte ptr [rax], al
      c4: 01 00                        	add	dword ptr [rax], eax
      c6: 12 00                        	adc	al, byte ptr [rax]
      c8: b0 6d                        	mov	al, 109
		...
      d6: 00 00                        	add	byte ptr [rax], al
      d8: 86 00                        	xchg	byte ptr [rax], al
      da: 00 00                        	add	byte ptr [rax], al
      dc: 02 00                        	add	al, byte ptr [rax]
      de: 0c 00                        	or	al, 0
      e0: 70 24                        	jo	0x106 <.symtab+0x106>
		...
      ee: 00 00                        	add	byte ptr [rax], al
      f0: 92                           	xchg	eax, edx
      f1: 00 00                        	add	byte ptr [rax], al
      f3: 00 01                        	add	byte ptr [rcx], al
      f5: 00 11                        	add	byte ptr [rcx], dl
      f7: 00 a0 6d 00 00 00            	add	byte ptr [rax + 109], ah
		...
     105: 00 00                        	add	byte ptr [rax], al
     107: 00 b1 00 00 00 04            	add	byte ptr [rcx + 67108864], dh
     10d: 00 f1                        	add	cl, dh
     10f: ff 00                        	inc	dword ptr [rax]
		...
     11d: 00 00                        	add	byte ptr [rax], al
     11f: 00 c7                        	add	bh, al
     121: 00 00                        	add	byte ptr [rax], al
     123: 00 04 00                     	add	byte ptr [rax + rax], al
     126: f1                           	<unknown>
     127: ff 00                        	inc	dword ptr [rax]
		...
     135: 00 00                        	add	byte ptr [rax], al
     137: 00 ec                        	add	ah, ch
     139: 00 00                        	add	byte ptr [rax], al
     13b: 00 04 00                     	add	byte ptr [rax + rax], al
     13e: f1                           	<unknown>
     13f: ff 00                        	inc	dword ptr [rax]
		...
     14d: 00 00                        	add	byte ptr [rax], al
     14f: 00 fc                        	add	ah, bh
     151: 00 00                        	add	byte ptr [rax], al
     153: 00 04 00                     	add	byte ptr [rax + rax], al
     156: f1                           	<unknown>
     157: ff 00                        	inc	dword ptr [rax]
		...
     165: 00 00                        	add	byte ptr [rax], al
     167: 00 08                        	add	byte ptr [rax], cl
     169: 01 00                        	add	dword ptr [rax], eax
     16b: 00 04 00                     	add	byte ptr [rax + rax], al
     16e: f1                           	<unknown>
     16f: ff 00                        	inc	dword ptr [rax]
		...
     17d: 00 00                        	add	byte ptr [rax], al
     17f: 00 14 01                     	add	byte ptr [rcx + rax], dl
     182: 00 00                        	add	byte ptr [rax], al
     184: 01 00                        	add	dword ptr [rax], eax
     186: 17                           	<unknown>
     187: 00 e0                        	add	al, ah
     189: 71 00                        	jno	0x18b <.symtab+0x18b>
     18b: 00 00                        	add	byte ptr [rax], al
     18d: 00 00                        	add	byte ptr [rax], al
     18f: 00 08                        	add	byte ptr [rax], cl
     191: 00 00                        	add	byte ptr [rax], al
     193: 00 00                        	add	byte ptr [rax], al
     195: 00 00                        	add	byte ptr [rax], al
     197: 00 25 01 00 00 01            	add	byte ptr [rip + 16777217], ah # 0x100019e <completed.0+0xff8f8e>
     19d: 00 17                        	add	byte ptr [rdi], dl
     19f: 00 f0                        	add	al, dh
     1a1: 71 00                        	jno	0x1a3 <.symtab+0x1a3>
     1a3: 00 00                        	add	byte ptr [rax], al
     1a5: 00 00                        	add	byte ptr [rax], al
     1a7: 00 10                        	add	byte ptr [rax], dl
     1a9: 00 00                        	add	byte ptr [rax], al
     1ab: 00 00                        	add	byte ptr [rax], al
     1ad: 00 00                        	add	byte ptr [rax], al
     1af: 00 3f                        	add	byte ptr [rdi], bh
     1b1: 01 00                        	add	dword ptr [rax], eax
     1b3: 00 01                        	add	byte ptr [rcx], al
     1b5: 00 17                        	add	byte ptr [rdi], dl
     1b7: 00 00                        	add	byte ptr [rax], al
     1b9: 72 00                        	jb	0x1bb <.symtab+0x1bb>
     1bb: 00 00                        	add	byte ptr [rax], al
     1bd: 00 00                        	add	byte ptr [rax], al
     1bf: 00 10                        	add	byte ptr [rax], dl
     1c1: 00 00                        	add	byte ptr [rax], al
     1c3: 00 00                        	add	byte ptr [rax], al
     1c5: 00 00                        	add	byte ptr [rax], al
     1c7: 00 57 01                     	add	byte ptr [rdi + 1], dl
     1ca: 00 00                        	add	byte ptr [rax], al
     1cc: 04 00                        	add	al, 0
     1ce: f1                           	<unknown>
     1cf: ff 00                        	inc	dword ptr [rax]
		...
     1dd: 00 00                        	add	byte ptr [rax], al
     1df: 00 69 01                     	add	byte ptr [rcx + 1], ch
     1e2: 00 00                        	add	byte ptr [rax], al
     1e4: 02 00                        	add	al, byte ptr [rax]
     1e6: 0c 00                        	or	al, 0
     1e8: 30 47 00                     	xor	byte ptr [rdi], al
     1eb: 00 00                        	add	byte ptr [rax], al
     1ed: 00 00                        	add	byte ptr [rax], al
     1ef: 00 64 00 00                  	add	byte ptr [rax + rax], ah
     1f3: 00 00                        	add	byte ptr [rax], al
     1f5: 00 00                        	add	byte ptr [rax], al
     1f7: 00 77 01                     	add	byte ptr [rdi + 1], dh
     1fa: 00 00                        	add	byte ptr [rax], al
     1fc: 04 00                        	add	al, 0
     1fe: f1                           	<unknown>
     1ff: ff 00                        	inc	dword ptr [rax]
		...
     20d: 00 00                        	add	byte ptr [rax], al
     20f: 00 1d 00 00 00 04            	add	byte ptr [rip + 67108864], bl # 0x4000215 <completed.0+0x3ff9005>
     215: 00 f1                        	add	cl, dh
     217: ff 00                        	inc	dword ptr [rax]
		...
     225: 00 00                        	add	byte ptr [rax], al
     227: 00 8c 01 00 00 01 00         	add	byte ptr [rcx + rax + 65536], cl
     22e: 10 00                        	adc	byte ptr [rax], al
     230: 4c 58                        	pop	rax
		...
     242: 00 00                        	add	byte ptr [rax], al
     244: 04 00                        	add	al, 0
     246: f1                           	<unknown>
     247: ff 00                        	inc	dword ptr [rax]
		...
     255: 00 00                        	add	byte ptr [rax], al
     257: 00 9a 01 00 00 02            	add	byte ptr [rdx + 33554433], bl
     25d: 00 0d 00 d0 4f 00            	add	byte ptr [rip + 5230592], cl # 0x4fd263 <completed.0+0x4f6053>
		...
     26f: 00 a0 01 00 00 01            	add	byte ptr [rax + 16777217], ah
     275: 00 17                        	add	byte ptr [rdi], dl
     277: 00 d0                        	add	al, dl
     279: 71 00                        	jno	0x27b <.gnu.hash+0x1b>
		...
     287: 00 ad 01 00 00 01            	add	byte ptr [rbp + 16777217], ch
     28d: 00 14 00                     	add	byte ptr [rax + rax], dl
     290: e8 6d 00 00 00               	call	0x302 <.gnu.hash+0xa2>
		...
     29d: 00 00                        	add	byte ptr [rax], al
     29f: 00 b6 01 00 00 00            	add	byte ptr [rsi + 1], dh
     2a5: 00 0f                        	add	byte ptr [rdi], cl
     2a7: 00 d8                        	add	al, bl
     2a9: 52                           	push	rdx
		...
     2b6: 00 00                        	add	byte ptr [rax], al
     2b8: c9                           	leave
     2b9: 01 00                        	add	dword ptr [rax], eax
     2bb: 00 01                        	add	byte ptr [rcx], al
     2bd: 00 17                        	add	byte ptr [rdi], dl
     2bf: 00 10                        	add	byte ptr [rax], dl
     2c1: 72 00                        	jb	0x2c3 <.gnu.hash+0x63>
		...
     2cf: 00 d5                        	add	ch, dl
     2d1: 01 00                        	add	dword ptr [rax], eax
     2d3: 00 01                        	add	byte ptr [rcx], al
     2d5: 00 16                        	add	byte ptr [rsi], dl
     2d7: 00 00                        	add	byte ptr [rax], al
     2d9: 70 00                        	jo	0x2db <.gnu.hash+0x7b>
		...
     2e7: 00 eb                        	add	bl, ch
     2e9: 01 00                        	add	dword ptr [rax], eax
     2eb: 00 02                        	add	byte ptr [rdx], al
     2ed: 00 09                        	add	byte ptr [rcx], cl
     2ef: 00 00                        	add	byte ptr [rax], al
     2f1: 20 00                        	and	byte ptr [rax], al
		...
     2ff: 00 f1                        	add	cl, dh
     301: 01 00                        	add	dword ptr [rax], eax
     303: 00 12                        	add	byte ptr [rdx], dl
		...
     315: 00 00                        	add	byte ptr [rax], al
     317: 00 0c 02                     	add	byte ptr [rdx + rax], cl
     31a: 00 00                        	add	byte ptr [rax], al
     31c: 12 00                        	adc	al, byte ptr [rax]
     31e: 0c 00                        	or	al, 0
     320: 80 24 00 00                  	and	byte ptr [rax + rax], 0
     324: 00 00                        	add	byte ptr [rax], al
     326: 00 00                        	add	byte ptr [rax], al
     328: 4f 0d 00 00 00 00            	or	rax, 0
     32e: 00 00                        	add	byte ptr [rax], al
     330: 26 02 00                     	add	al, byte ptr es:[rax]
     333: 00 12                        	add	byte ptr [rdx], dl
		...
     345: 00 00                        	add	byte ptr [rax], al
     347: 00 42 02                     	add	byte ptr [rdx + 2], al
     34a: 00 00                        	add	byte ptr [rax], al
     34c: 12 00                        	adc	al, byte ptr [rax]
		...
     35e: 00 00                        	add	byte ptr [rax], al
     360: 53                           	push	rbx
     361: 02 00                        	add	al, byte ptr [rax]
     363: 00 12                        	add	byte ptr [rdx], dl
		...
     375: 00 00                        	add	byte ptr [rax], al
     377: 00 6b 02                     	add	byte ptr [rbx + 2], ch
     37a: 00 00                        	add	byte ptr [rax], al
     37c: 12 00                        	adc	al, byte ptr [rax]
		...
     38e: 00 00                        	add	byte ptr [rax], al
     390: 7b 02                        	jnp	0x394 <.dynsym+0x74>
     392: 00 00                        	add	byte ptr [rax], al
     394: 12 00                        	adc	al, byte ptr [rax]
     396: 0c 00                        	or	al, 0
     398: e0 4e                        	loopne	0x3e8 <.dynsym+0xc8>
     39a: 00 00                        	add	byte ptr [rax], al
     39c: 00 00                        	add	byte ptr [rax], al
     39e: 00 00                        	add	byte ptr [rax], al
     3a0: ef                           	out	dx, eax
     3a1: 00 00                        	add	byte ptr [rax], al
     3a3: 00 00                        	add	byte ptr [rax], al
     3a5: 00 00                        	add	byte ptr [rax], al
     3a7: 00 91 02 00 00 12            	add	byte ptr [rcx + 301989890], dl
     3ad: 00 0c 00                     	add	byte ptr [rax + rax], cl
     3b0: 40 45                        	<unknown>
     3b2: 00 00                        	add	byte ptr [rax], al
     3b4: 00 00                        	add	byte ptr [rax], al
     3b6: 00 00                        	add	byte ptr [rax], al
     3b8: 41 00 00                     	add	byte ptr [r8], al
     3bb: 00 00                        	add	byte ptr [rax], al
     3bd: 00 00                        	add	byte ptr [rax], al
     3bf: 00 a8 02 00 00 20            	add	byte ptr [rax + 536870914], ch
		...
     3d5: 00 00                        	add	byte ptr [rax], al
     3d7: 00 c4                        	add	ah, al
     3d9: 02 00                        	add	al, byte ptr [rax]
     3db: 00 12                        	add	byte ptr [rdx], dl
		...
     3ed: 00 00                        	add	byte ptr [rax], al
     3ef: 00 d6                        	add	dh, dl
     3f1: 02 00                        	add	al, byte ptr [rax]
     3f3: 00 12                        	add	byte ptr [rdx], dl
		...
     405: 00 00                        	add	byte ptr [rax], al
     407: 00 e8                        	add	al, ch
     409: 02 00                        	add	al, byte ptr [rax]
     40b: 00 12                        	add	byte ptr [rdx], dl
		...
     41d: 00 00                        	add	byte ptr [rax], al
     41f: 00 11                        	add	byte ptr [rcx], dl
     421: 03 00                        	add	eax, dword ptr [rax]
     423: 00 12                        	add	byte ptr [rdx], dl
		...
     435: 00 00                        	add	byte ptr [rax], al
     437: 00 36                        	add	byte ptr [rsi], dh
     439: 03 00                        	add	eax, dword ptr [rax]
     43b: 00 12                        	add	byte ptr [rdx], dl
		...
     44d: 00 00                        	add	byte ptr [rax], al
     44f: 00 49 03                     	add	byte ptr [rcx + 3], cl
     452: 00 00                        	add	byte ptr [rax], al
     454: 12 00                        	adc	al, byte ptr [rax]
		...
     466: 00 00                        	add	byte ptr [rax], al
     468: 5f                           	pop	rdi
     469: 03 00                        	add	eax, dword ptr [rax]
     46b: 00 12                        	add	byte ptr [rdx], dl
     46d: 00 0c 00                     	add	byte ptr [rax + rax], cl
     470: 50                           	push	rax
     471: 42 00 00                     	add	byte ptr [rax], al
     474: 00 00                        	add	byte ptr [rax], al
     476: 00 00                        	add	byte ptr [rax], al
     478: 72 01                        	jb	0x47b <.dynsym+0x15b>
     47a: 00 00                        	add	byte ptr [rax], al
     47c: 00 00                        	add	byte ptr [rax], al
     47e: 00 00                        	add	byte ptr [rax], al
     480: 89 03                        	mov	dword ptr [rbx], eax
     482: 00 00                        	add	byte ptr [rax], al
     484: 12 00                        	adc	al, byte ptr [rax]
		...
     496: 00 00                        	add	byte ptr [rax], al
     498: 9d                           	popfq
     499: 03 00                        	add	eax, dword ptr [rax]
     49b: 00 12                        	add	byte ptr [rdx], dl
     49d: 00 0c 00                     	add	byte ptr [rax + rax], cl
     4a0: b0 4b                        	mov	al, 75
     4a2: 00 00                        	add	byte ptr [rax], al
     4a4: 00 00                        	add	byte ptr [rax], al
     4a6: 00 00                        	add	byte ptr [rax], al
     4a8: 2c 03                        	sub	al, 3
     4aa: 00 00                        	add	byte ptr [rax], al
     4ac: 00 00                        	add	byte ptr [rax], al
     4ae: 00 00                        	add	byte ptr [rax], al
     4b0: c7 03 00 00 12 00            	mov	dword ptr [rbx], 1179648
     4b6: 0c 00                        	or	al, 0
     4b8: 70 44                        	jo	0x4fe <.dynsym+0x1de>
     4ba: 00 00                        	add	byte ptr [rax], al
     4bc: 00 00                        	add	byte ptr [rax], al
     4be: 00 00                        	add	byte ptr [rax], al
     4c0: 89 00                        	mov	dword ptr [rax], eax
     4c2: 00 00                        	add	byte ptr [rax], al
     4c4: 00 00                        	add	byte ptr [rax], al
     4c6: 00 00                        	add	byte ptr [rax], al
     4c8: 28 05 00 00 12 00            	sub	byte ptr [rip + 1179648], al # 0x1204ce <completed.0+0x1192be>
		...
     4de: 00 00                        	add	byte ptr [rax], al
     4e0: e0 03                        	loopne	0x4e5 <.dynsym+0x1c5>
     4e2: 00 00                        	add	byte ptr [rax], al
     4e4: 12 00                        	adc	al, byte ptr [rax]
		...
     4f6: 00 00                        	add	byte ptr [rax], al
     4f8: f3 03 00                     	rep		add	eax, dword ptr [rax]
     4fb: 00 12                        	add	byte ptr [rdx], dl
		...
     50d: 00 00                        	add	byte ptr [rax], al
     50f: 00 04 04                     	add	byte ptr [rsp + rax], al
     512: 00 00                        	add	byte ptr [rax], al
     514: 12 00                        	adc	al, byte ptr [rax]
		...
     526: 00 00                        	add	byte ptr [rax], al
     528: 22 04 00                     	and	al, byte ptr [rax + rax]
     52b: 00 12                        	add	byte ptr [rdx], dl
		...
     53d: 00 00                        	add	byte ptr [rax], al
     53f: 00 30                        	add	byte ptr [rax], dh
     541: 04 00                        	add	al, 0
     543: 00 12                        	add	byte ptr [rdx], dl
     545: 00 0c 00                     	add	byte ptr [rax + rax], cl
     548: 90                           	nop
     549: 45 00 00                     	add	byte ptr [r8], r8b
     54c: 00 00                        	add	byte ptr [rax], al
     54e: 00 00                        	add	byte ptr [rax], al
     550: d7                           	xlatb
     551: 00 00                        	add	byte ptr [rax], al
     553: 00 00                        	add	byte ptr [rax], al
     555: 00 00                        	add	byte ptr [rax], al
     557: 00 41 04                     	add	byte ptr [rcx + 4], al
     55a: 00 00                        	add	byte ptr [rax], al
     55c: 12 00                        	adc	al, byte ptr [rax]
     55e: 0c 00                        	or	al, 0
     560: a0 47 00 00 00 00 00 00 23   	movabs	al, byte ptr [2522015791327477831]
     569: 00 00                        	add	byte ptr [rax], al
     56b: 00 00                        	add	byte ptr [rax], al
     56d: 00 00                        	add	byte ptr [rax], al
     56f: 00 73 04                     	add	byte ptr [rbx + 4], dh
     572: 00 00                        	add	byte ptr [rax], al
     574: 12 00                        	adc	al, byte ptr [rax]
		...
     586: 00 00                        	add	byte ptr [rax], al
     588: 89 04 00                     	mov	dword ptr [rax + rax], eax
     58b: 00 12                        	add	byte ptr [rdx], dl
		...
     59d: 00 00                        	add	byte ptr [rax], al
     59f: 00 a0 04 00 00 12            	add	byte ptr [rax + 301989892], ah
		...
     5b5: 00 00                        	add	byte ptr [rax], al
     5b7: 00 ae 04 00 00 12            	add	byte ptr [rsi + 301989892], ch
		...
     5cd: 00 00                        	add	byte ptr [rax], al
     5cf: 00 c1                        	add	cl, al
     5d1: 04 00                        	add	al, 0
     5d3: 00 12                        	add	byte ptr [rdx], dl
		...
     5e5: 00 00                        	add	byte ptr [rax], al
     5e7: 00 d3                        	add	bl, dl
     5e9: 04 00                        	add	al, 0
     5eb: 00 12                        	add	byte ptr [rdx], dl
     5ed: 00 0c 00                     	add	byte ptr [rax + rax], cl
     5f0: 90                           	nop
     5f1: 3e 00 00                     	add	byte ptr ds:[rax], al
     5f4: 00 00                        	add	byte ptr [rax], al
     5f6: 00 00                        	add	byte ptr [rax], al
     5f8: a3 00 00 00 00 00 00 00 e4   	movabs	dword ptr [-2017612633061982208], eax
     601: 04 00                        	add	al, 0
     603: 00 12                        	add	byte ptr [rdx], dl
     605: 00 0c 00                     	add	byte ptr [rax + rax], cl
     608: c0 3f 00                     	sar	byte ptr [rdi], 0
     60b: 00 00                        	add	byte ptr [rax], al
     60d: 00 00                        	add	byte ptr [rax], al
     60f: 00 f0                        	add	al, dh
     611: 01 00                        	add	dword ptr [rax], eax
     613: 00 00                        	add	byte ptr [rax], al
     615: 00 00                        	add	byte ptr [rax], al
     617: 00 fe                        	add	dh, bh
     619: 04 00                        	add	al, 0
     61b: 00 12                        	add	byte ptr [rdx], dl
		...
     62d: 00 00                        	add	byte ptr [rax], al
     62f: 00 11                        	add	byte ptr [rcx], dl
     631: 05 00 00 12 00               	add	eax, 1179648
		...
     646: 00 00                        	add	byte ptr [rax], al
     648: 27                           	<unknown>
     649: 05 00 00 12 00               	add	eax, 1179648
		...
     65e: 00 00                        	add	byte ptr [rax], al
     660: 3b 05 00 00 12 00            	cmp	eax, dword ptr [rip + 1179648] # 0x120666 <completed.0+0x119456>
		...
     676: 00 00                        	add	byte ptr [rax], al
     678: 4d 05 00 00 12 00            	add	rax, 1179648
		...
     68e: 00 00                        	add	byte ptr [rax], al
     690: 66 05 00 00                  	add	ax, 0
     694: 20 00                        	and	byte ptr [rax], al
		...
     6a6: 00 00                        	add	byte ptr [rax], al
     6a8: 75 05                        	jne	0x6af <.dynsym+0x38f>
     6aa: 00 00                        	add	byte ptr [rax], al
     6ac: 12 00                        	adc	al, byte ptr [rax]
     6ae: 0c 00                        	or	al, 0
     6b0: 70 46                        	jo	0x6f8 <.dynsym+0x3d8>
     6b2: 00 00                        	add	byte ptr [rax], al
     6b4: 00 00                        	add	byte ptr [rax], al
     6b6: 00 00                        	add	byte ptr [rax], al
     6b8: 11 00                        	adc	dword ptr [rax], eax
     6ba: 00 00                        	add	byte ptr [rax], al
     6bc: 00 00                        	add	byte ptr [rax], al
     6be: 00 00                        	add	byte ptr [rax], al
     6c0: 88 05 00 00 12 00            	mov	byte ptr [rip + 1179648], al # 0x1206c6 <completed.0+0x1194b6>
		...
     6d6: 00 00                        	add	byte ptr [rax], al
     6d8: 9a                           	<unknown>
     6d9: 05 00 00 12 00               	add	eax, 1179648
		...
     6ee: 00 00                        	add	byte ptr [rax], al
     6f0: be 05 00 00 12               	mov	esi, 301989893
     6f5: 00 0c 00                     	add	byte ptr [rax + rax], cl
     6f8: d0 46 00                     	rol	byte ptr [rsi]
     6fb: 00 00                        	add	byte ptr [rax], al
     6fd: 00 00                        	add	byte ptr [rax], al
     6ff: 00 5f 00                     	add	byte ptr [rdi], bl
     702: 00 00                        	add	byte ptr [rax], al
     704: 00 00                        	add	byte ptr [rax], al
     706: 00 00                        	add	byte ptr [rax], al
     708: dc 05 00 00 12 00            	fadd	qword ptr [rip + 1179648] # 0x12070e <completed.0+0x1194fe>
     70e: 0c 00                        	or	al, 0
     710: b0 3f                        	mov	al, 63
     712: 00 00                        	add	byte ptr [rax], al
     714: 00 00                        	add	byte ptr [rax], al
     716: 00 00                        	add	byte ptr [rax], al
     718: 05 00 00 00 00               	add	eax, 0
     71d: 00 00                        	add	byte ptr [rax], al
     71f: 00 e9                        	add	cl, ch
     721: 05 00 00 12 00               	add	eax, 1179648
     726: 0c 00                        	or	al, 0
     728: 80 48 00 00                  	or	byte ptr [rax], 0
     72c: 00 00                        	add	byte ptr [rax], al
     72e: 00 00                        	add	byte ptr [rax], al
     730: 26 03 00                     	add	eax, dword ptr es:[rax]
     733: 00 00                        	add	byte ptr [rax], al
     735: 00 00                        	add	byte ptr [rax], al
     737: 00 15 06 00 00 12            	add	byte ptr [rip + 301989894], dl # 0x12000743 <completed.0+0x11ff9533>
     73d: 00 0c 00                     	add	byte ptr [rax + rax], cl
     740: b0 41                        	mov	al, 65
     742: 00 00                        	add	byte ptr [rax], al
     744: 00 00                        	add	byte ptr [rax], al
     746: 00 00                        	add	byte ptr [rax], al
     748: 96                           	xchg	eax, esi
     749: 00 00                        	add	byte ptr [rax], al
     74b: 00 00                        	add	byte ptr [rax], al
     74d: 00 00                        	add	byte ptr [rax], al
     74f: 00 2a                        	add	byte ptr [rdx], ch
     751: 06                           	<unknown>
     752: 00 00                        	add	byte ptr [rax], al
     754: 12 00                        	adc	al, byte ptr [rax]
		...
     766: 00 00                        	add	byte ptr [rax], al
     768: 3b 06                        	cmp	eax, dword ptr [rsi]
     76a: 00 00                        	add	byte ptr [rax], al
     76c: 12 00                        	adc	al, byte ptr [rax]
		...
     77e: 00 00                        	add	byte ptr [rax], al
     780: 4e 06                        	<unknown>
     782: 00 00                        	add	byte ptr [rax], al
     784: 12 00                        	adc	al, byte ptr [rax]
		...
     796: 00 00                        	add	byte ptr [rax], al
     798: 5a                           	pop	rdx
     799: 06                           	<unknown>
     79a: 00 00                        	add	byte ptr [rax], al
     79c: 12 00                        	adc	al, byte ptr [rax]
		...
     7ae: 00 00                        	add	byte ptr [rax], al
     7b0: 73 06                        	jae	0x7b8 <.dynsym+0x498>
     7b2: 00 00                        	add	byte ptr [rax], al
     7b4: 12 00                        	adc	al, byte ptr [rax]
		...
     7c6: 00 00                        	add	byte ptr [rax], al
     7c8: 82                           	<unknown>
     7c9: 06                           	<unknown>
     7ca: 00 00                        	add	byte ptr [rax], al
     7cc: 12 00                        	adc	al, byte ptr [rax]
		...
     7de: 00 00                        	add	byte ptr [rax], al
     7e0: 99                           	cdq
     7e1: 06                           	<unknown>
     7e2: 00 00                        	add	byte ptr [rax], al
     7e4: 12 00                        	adc	al, byte ptr [rax]
		...
     7f6: 00 00                        	add	byte ptr [rax], al
     7f8: ab                           	stosd	dword ptr es:[rdi], eax
     7f9: 06                           	<unknown>
     7fa: 00 00                        	add	byte ptr [rax], al
     7fc: 12 00                        	adc	al, byte ptr [rax]
		...
     80e: 00 00                        	add	byte ptr [rax], al
     810: ba 06 00 00 12               	mov	edx, 301989894
     815: 00 0c 00                     	add	byte ptr [rax + rax], cl
     818: 00 45 00                     	add	byte ptr [rbp], al
     81b: 00 00                        	add	byte ptr [rax], al
     81d: 00 00                        	add	byte ptr [rax], al
     81f: 00 3b                        	add	byte ptr [rbx], bh
     821: 00 00                        	add	byte ptr [rax], al
     823: 00 00                        	add	byte ptr [rax], al
     825: 00 00                        	add	byte ptr [rax], al
     827: 00 d0                        	add	al, dl
     829: 06                           	<unknown>
     82a: 00 00                        	add	byte ptr [rax], al
     82c: 12 00                        	adc	al, byte ptr [rax]
		...
     83e: 00 00                        	add	byte ptr [rax], al
     840: e5 06                        	in	eax, 6
     842: 00 00                        	add	byte ptr [rax], al
     844: 12 00                        	adc	al, byte ptr [rax]
		...
     856: 00 00                        	add	byte ptr [rax], al
     858: fe 06                        	inc	byte ptr [rsi]
     85a: 00 00                        	add	byte ptr [rax], al
     85c: 12 00                        	adc	al, byte ptr [rax]
		...
     86e: 00 00                        	add	byte ptr [rax], al
     870: 0c 07                        	or	al, 7
     872: 00 00                        	add	byte ptr [rax], al
     874: 12 00                        	adc	al, byte ptr [rax]
		...
     886: 00 00                        	add	byte ptr [rax], al
     888: 23 07                        	and	eax, dword ptr [rdi]
     88a: 00 00                        	add	byte ptr [rax], al
     88c: 12 00                        	adc	al, byte ptr [rax]
		...
     89e: 00 00                        	add	byte ptr [rax], al
     8a0: 35 07 00 00 12               	xor	eax, 301989895
		...
     8b5: 00 00                        	add	byte ptr [rax], al
     8b7: 00 4c 07 00                  	add	byte ptr [rdi + rax], cl
     8bb: 00 12                        	add	byte ptr [rdx], dl
     8bd: 00 0c 00                     	add	byte ptr [rax + rax], cl
     8c0: d0 43 00                     	rol	byte ptr [rbx]
     8c3: 00 00                        	add	byte ptr [rax], al
     8c5: 00 00                        	add	byte ptr [rax], al
     8c7: 00 96 00 00 00 00            	add	byte ptr [rsi], dl
     8cd: 00 00                        	add	byte ptr [rax], al
     8cf: 00 63 07                     	add	byte ptr [rbx + 7], ah
     8d2: 00 00                        	add	byte ptr [rax], al
     8d4: 12 00                        	adc	al, byte ptr [rax]
     8d6: 0c 00                        	or	al, 0
     8d8: d0 31                        	<unknown>
     8da: 00 00                        	add	byte ptr [rax], al
     8dc: 00 00                        	add	byte ptr [rax], al
     8de: 00 00                        	add	byte ptr [rax], al
     8e0: ad                           	lodsd	eax, dword ptr [rsi]
     8e1: 01 00                        	add	dword ptr [rax], eax
     8e3: 00 00                        	add	byte ptr [rax], al
     8e5: 00 00                        	add	byte ptr [rax], al
     8e7: 00 7e 07                     	add	byte ptr [rsi + 7], bh
     8ea: 00 00                        	add	byte ptr [rax], al
     8ec: 12 00                        	adc	al, byte ptr [rax]
     8ee: 0c 00                        	or	al, 0
     8f0: 40 3f                        	<unknown>
     8f2: 00 00                        	add	byte ptr [rax], al
     8f4: 00 00                        	add	byte ptr [rax], al
     8f6: 00 00                        	add	byte ptr [rax], al
     8f8: 70 00                        	jo	0x8fa <.dynsym+0x5da>
     8fa: 00 00                        	add	byte ptr [rax], al
     8fc: 00 00                        	add	byte ptr [rax], al
     8fe: 00 00                        	add	byte ptr [rax], al
     900: 90                           	nop
     901: 07                           	<unknown>
     902: 00 00                        	add	byte ptr [rax], al
     904: 12 00                        	adc	al, byte ptr [rax]
		...
     916: 00 00                        	add	byte ptr [rax], al
     918: a1 07 00 00 12 00 00 00 00   	movabs	eax, dword ptr [301989895]
		...
     92d: 00 00                        	add	byte ptr [rax], al
     92f: 00 b2 07 00 00 12            	add	byte ptr [rdx + 301989895], dh
		...
     945: 00 00                        	add	byte ptr [rax], al
     947: 00 c9                        	add	cl, cl
     949: 07                           	<unknown>
     94a: 00 00                        	add	byte ptr [rax], al
     94c: 12 00                        	adc	al, byte ptr [rax]
		...
     95e: 00 00                        	add	byte ptr [rax], al
     960: dc 07                        	fadd	qword ptr [rdi]
     962: 00 00                        	add	byte ptr [rax], al
     964: 12 00                        	adc	al, byte ptr [rax]
		...
     976: 00 00                        	add	byte ptr [rax], al
     978: f1                           	<unknown>
     979: 07                           	<unknown>
     97a: 00 00                        	add	byte ptr [rax], al
     97c: 12 00                        	adc	al, byte ptr [rax]
		...
     98e: 00 00                        	add	byte ptr [rax], al
     990: 14 08                        	adc	al, 8
     992: 00 00                        	add	byte ptr [rax], al
     994: 20 00                        	and	byte ptr [rax], al
		...
     9a6: 00 00                        	add	byte ptr [rax], al
     9a8: 2e 08 00                     	or	byte ptr cs:[rax], al
     9ab: 00 12                        	add	byte ptr [rdx], dl
		...
     9bd: 00 00                        	add	byte ptr [rax], al
     9bf: 00 41 08                     	add	byte ptr [rcx + 8], al
     9c2: 00 00                        	add	byte ptr [rax], al
     9c4: 12 00                        	adc	al, byte ptr [rax]
     9c6: 0c 00                        	or	al, 0
     9c8: 80 33 00                     	xor	byte ptr [rbx], 0
     9cb: 00 00                        	add	byte ptr [rax], al
     9cd: 00 00                        	add	byte ptr [rax], al
     9cf: 00 02                        	add	byte ptr [rdx], al
     9d1: 0b 00                        	or	eax, dword ptr [rax]
     9d3: 00 00                        	add	byte ptr [rax], al
     9d5: 00 00                        	add	byte ptr [rax], al
     9d7: 00 5c 08 00                  	add	byte ptr [rax + rcx], bl
     9db: 00 12                        	add	byte ptr [rdx], dl
     9dd: 00 0c 00                     	add	byte ptr [rax + rax], cl
     9e0: 90                           	nop
     9e1: 46 00 00                     	add	byte ptr [rax], r8b
     9e4: 00 00                        	add	byte ptr [rax], al
     9e6: 00 00                        	add	byte ptr [rax], al
     9e8: 35 00 00 00 00               	xor	eax, 0
     9ed: 00 00                        	add	byte ptr [rax], al
     9ef: 00 7a 08                     	add	byte ptr [rdx + 8], bh
     9f2: 00 00                        	add	byte ptr [rax], al
     9f4: 22 00                        	and	al, byte ptr [rax]
		...
     a06: 00 00                        	add	byte ptr [rax], al
     a08: 95                           	xchg	eax, ebp
     a09: 08 00                        	or	byte ptr [rax], al
     a0b: 00 12                        	add	byte ptr [rdx], dl
     a0d: 00 0c 00                     	add	byte ptr [rax + rax], cl
     a10: d0 47 00                     	rol	byte ptr [rdi]
     a13: 00 00                        	add	byte ptr [rax], al
     a15: 00 00                        	add	byte ptr [rax], al
     a17: 00 a2 00 00 00 00            	add	byte ptr [rdx], ah
     a1d: 00 00                        	add	byte ptr [rax], al
     a1f: 00 ad 08 00 00 11            	add	byte ptr [rbp + 285212680], ch
		...
     a35: 00 00                        	add	byte ptr [rax], al
     a37: 00                           	<unknown>

Disassembly of section .strtab:

0000000000000000 <.strtab>:
       0: 00 63 72                     	add	byte ptr [rbx + 114], ah
       3: 74 66                        	je	0x6b <.symtab+0x6b>
       5: 61                           	<unknown>
       6: 73 74                        	jae	0x7c <.symtab+0x7c>
       8: 6d                           	insd	dword ptr es:[rdi], dx
       9: 61                           	<unknown>
       a: 74 68                        	je	0x74 <.symtab+0x74>
       c: 2e 63 00                     	movsxd	eax, dword ptr cs:[rax]
       f: 73 65                        	jae	0x76 <.symtab+0x76>
      11: 74 5f                        	je	0x72 <.symtab+0x72>
      13: 66 61                        	<unknown>
      15: 73 74                        	jae	0x8b <.symtab+0x8b>
      17: 5f                           	pop	rdi
      18: 6d                           	insd	dword ptr es:[rdi], dx
      19: 61                           	<unknown>
      1a: 74 68                        	je	0x84 <.symtab+0x84>
      1c: 00 63 72                     	add	byte ptr [rbx + 114], ah
      1f: 74 73                        	je	0x94 <.symtab+0x94>
      21: 74 75                        	je	0x98 <.symtab+0x98>
      23: 66 66 2e 63 00               	movsxd	ax, dword ptr cs:[rax]
      28: 64 65 72 65                  	jb	0x91 <.symtab+0x91>
      2c: 67 69 73 74 65 72 5f 74      	imul	esi, dword ptr [ebx + 116], 1952412261
      34: 6d                           	insd	dword ptr es:[rdi], dx
      35: 5f                           	pop	rdi
      36: 63 6c 6f 6e                  	movsxd	ebp, dword ptr [rdi + 2*rbp + 110]
      3a: 65 73 00                     	jae	0x3d <.symtab+0x3d>
      3d: 5f                           	pop	rdi
      3e: 5f                           	pop	rdi
      3f: 64 6f                        	outsd	dx, dword ptr fs:[rsi]
      41: 5f                           	pop	rdi
      42: 67 6c                        	insb	byte ptr es:[edi], dx
      44: 6f                           	outsd	dx, dword ptr [rsi]
      45: 62 61 6c 5f 64               	<unknown>
      4a: 74 6f                        	je	0xbb <.symtab+0xbb>
      4c: 72 73                        	jb	0xc1 <.symtab+0xc1>
      4e: 5f                           	pop	rdi
      4f: 61                           	<unknown>
      50: 75 78                        	jne	0xca <.symtab+0xca>
      52: 00 63 6f                     	add	byte ptr [rbx + 111], ah
      55: 6d                           	insd	dword ptr es:[rdi], dx
      56: 70 6c                        	jo	0xc4 <.symtab+0xc4>
      58: 65 74 65                     	je	0xc0 <.symtab+0xc0>
      5b: 64 2e 30 00                  	xor	byte ptr cs:[rax], al
      5f: 5f                           	pop	rdi
      60: 5f                           	pop	rdi
      61: 64 6f                        	outsd	dx, dword ptr fs:[rsi]
      63: 5f                           	pop	rdi
      64: 67 6c                        	insb	byte ptr es:[edi], dx
      66: 6f                           	outsd	dx, dword ptr [rsi]
      67: 62 61 6c 5f 64               	<unknown>
      6c: 74 6f                        	je	0xdd <.symtab+0xdd>
      6e: 72 73                        	jb	0xe3 <.symtab+0xe3>
      70: 5f                           	pop	rdi
      71: 61                           	<unknown>
      72: 75 78                        	jne	0xec <.symtab+0xec>
      74: 5f                           	pop	rdi
      75: 66 69 6e 69 5f 61            	imul	bp, word ptr [rsi + 105], 24927
      7b: 72 72                        	jb	0xef <.symtab+0xef>
      7d: 61                           	<unknown>
      7e: 79 5f                        	jns	0xdf <.symtab+0xdf>
      80: 65 6e                        	outsb	dx, byte ptr gs:[rsi]
      82: 74 72                        	je	0xf6 <.symtab+0xf6>
      84: 79 00                        	jns	0x86 <.symtab+0x86>
      86: 66 72 61                     	jb	0xea <.symtab+0xea>
      89: 6d                           	insd	dword ptr es:[rdi], dx
      8a: 65 5f                        	pop	rdi
      8c: 64 75 6d                     	jne	0xfc <.symtab+0xfc>
      8f: 6d                           	insd	dword ptr es:[rdi], dx
      90: 79 00                        	jns	0x92 <.symtab+0x92>
      92: 5f                           	pop	rdi
      93: 5f                           	pop	rdi
      94: 66 72 61                     	jb	0xf8 <.symtab+0xf8>
      97: 6d                           	insd	dword ptr es:[rdi], dx
      98: 65 5f                        	pop	rdi
      9a: 64 75 6d                     	jne	0x10a <.symtab+0x10a>
      9d: 6d                           	insd	dword ptr es:[rdi], dx
      9e: 79 5f                        	jns	0xff <.symtab+0xff>
      a0: 69 6e 69 74 5f 61 72         	imul	ebp, dword ptr [rsi + 105], 1918984052
      a7: 72 61                        	jb	0x10a <.symtab+0x10a>
      a9: 79 5f                        	jns	0x10a <.symtab+0x10a>
      ab: 65 6e                        	outsb	dx, byte ptr gs:[rsi]
      ad: 74 72                        	je	0x121 <.symtab+0x121>
      af: 79 00                        	jns	0xb1 <.symtab+0xb1>
      b1: 6e                           	outsb	dx, byte ptr [rsi]
      b2: 6e                           	outsb	dx, byte ptr [rsi]
      b3: 5f                           	pop	rdi
      b4: 63 6f 6d                     	movsxd	ebp, dword ptr [rdi + 109]
      b7: 70 75                        	jo	0x12e <.symtab+0x12e>
      b9: 74 65                        	je	0x120 <.symtab+0x120>
      bb: 5f                           	pop	rdi
      bc: 33 6c 61 79                  	xor	ebp, dword ptr [rcx + 2*riz + 121]
      c0: 6f                           	outsd	dx, dword ptr [rsi]
      c1: 75 74                        	jne	0x137 <.symtab+0x137>
      c3: 73 2e                        	jae	0xf3 <.symtab+0xf3>
      c5: 63 00                        	movsxd	eax, dword ptr [rax]
      c7: 6e                           	outsb	dx, byte ptr [rsi]
      c8: 6e                           	outsb	dx, byte ptr [rsi]
      c9: 5f                           	pop	rdi
      ca: 63 6f 6d                     	movsxd	ebp, dword ptr [rdi + 109]
      cd: 70 75                        	jo	0x144 <.symtab+0x144>
      cf: 74 65                        	je	0x136 <.symtab+0x136>
      d1: 5f                           	pop	rdi
      d2: 76 61                        	jbe	0x135 <.symtab+0x135>
      d4: 6c                           	insb	byte ptr es:[rdi], dx
      d5: 69 64 5f 63 72 6f 73 73      	imul	esp, dword ptr [rdi + 2*rbx + 99], 1936945010
      dd: 5f                           	pop	rdi
      de: 63 6f 72                     	movsxd	ebp, dword ptr [rdi + 114]
      e1: 72 65                        	jb	0x148 <.symtab+0x148>
      e3: 6c                           	insb	byte ptr es:[rdi], dx
      e4: 61                           	<unknown>
      e5: 74 69                        	je	0x150 <.symtab+0x150>
      e7: 6f                           	outsd	dx, dword ptr [rsi]
      e8: 6e                           	outsb	dx, byte ptr [rsi]
      e9: 2e 63 00                     	movsxd	eax, dword ptr cs:[rax]
      ec: 6e                           	outsb	dx, byte ptr [rsi]
      ed: 6e                           	outsb	dx, byte ptr [rsi]
      ee: 5f                           	pop	rdi
      ef: 66 69 6c 65 73 79 73         	imul	bp, word ptr [rbp + 2*riz + 115], 29561
      f6: 74 65                        	je	0x15d <.symtab+0x15d>
      f8: 6d                           	insd	dword ptr es:[rdi], dx
      f9: 2e 63 00                     	movsxd	eax, dword ptr cs:[rax]
      fc: 6e                           	outsb	dx, byte ptr [rsi]
      fd: 6e                           	outsb	dx, byte ptr [rsi]
      fe: 5f                           	pop	rdi
      ff: 6d                           	insd	dword ptr es:[rdi], dx
     100: 65 6d                        	insd	dword ptr es:[rdi], dx
     102: 6f                           	outsd	dx, dword ptr [rsi]
     103: 72 79                        	jb	0x17e <.symtab+0x17e>
     105: 2e 63 00                     	movsxd	eax, dword ptr cs:[rax]
     108: 6e                           	outsb	dx, byte ptr [rsi]
     109: 6e                           	outsb	dx, byte ptr [rsi]
     10a: 5f                           	pop	rdi
     10b: 76 75                        	jbe	0x182 <.symtab+0x182>
     10d: 6c                           	insb	byte ptr es:[rdi], dx
     10e: 6b 61 6e 2e                  	imul	esp, dword ptr [rcx + 110], 46
     112: 63 00                        	movsxd	eax, dword ptr [rax]
     114: 76 61                        	jbe	0x177 <.symtab+0x177>
     116: 6c                           	insb	byte ptr es:[rdi], dx
     117: 69 64 61 74 69 6f 6e 4c      	imul	esp, dword ptr [rcx + 2*riz + 116], 1282305897
     11f: 61                           	<unknown>
     120: 79 65                        	jns	0x187 <.symtab+0x187>
     122: 72 73                        	jb	0x197 <.symtab+0x197>
     124: 00 65 6e                     	add	byte ptr [rbp + 110], ah
     127: 61                           	<unknown>
     128: 62                           	<unknown>
     129: 6c                           	insb	byte ptr es:[rdi], dx
     12a: 65 64 49 6e                  	outsb	dx, byte ptr fs:[rsi]
     12e: 73 74                        	jae	0x1a4 <.symtab+0x1a4>
     130: 61                           	<unknown>
     131: 6e                           	outsb	dx, byte ptr [rsi]
     132: 63 65 45                     	movsxd	esp, dword ptr [rbp + 69]
     135: 78 74                        	js	0x1ab <.symtab+0x1ab>
     137: 65 6e                        	outsb	dx, byte ptr gs:[rsi]
     139: 73 69                        	jae	0x1a4 <.symtab+0x1a4>
     13b: 6f                           	outsd	dx, dword ptr [rsi]
     13c: 6e                           	outsb	dx, byte ptr [rsi]
     13d: 73 00                        	jae	0x13f <.symtab+0x13f>
     13f: 65 6e                        	outsb	dx, byte ptr gs:[rsi]
     141: 61                           	<unknown>
     142: 62                           	<unknown>
     143: 6c                           	insb	byte ptr es:[rdi], dx
     144: 65 64 44 65                  	gs
     148: 76 69                        	jbe	0x1b3 <.symtab+0x1b3>
     14a: 63 65 45                     	movsxd	esp, dword ptr [rbp + 69]
     14d: 78 74                        	js	0x1c3 <.symtab+0x1c3>
     14f: 65 6e                        	outsb	dx, byte ptr gs:[rsi]
     151: 73 69                        	jae	0x1bc <.symtab+0x1bc>
     153: 6f                           	outsd	dx, dword ptr [rsi]
     154: 6e                           	outsb	dx, byte ptr [rsi]
     155: 73 00                        	jae	0x157 <.symtab+0x157>
     157: 6e                           	outsb	dx, byte ptr [rsi]
     158: 6e                           	outsb	dx, byte ptr [rsi]
     159: 5f                           	pop	rdi
     15a: 76 75                        	jbe	0x1d1 <.symtab+0x1d1>
     15c: 6c                           	insb	byte ptr es:[rdi], dx
     15d: 6b 61 6e 5f                  	imul	esp, dword ptr [rcx + 110], 95
     161: 64 65 62 75 67 2e 63         	<unknown>
     168: 00 64 65 62                  	add	byte ptr [rbp + 2*riz + 98], ah
     16c: 75 67                        	jne	0x1d5 <.symtab+0x1d5>
     16e: 43 61                        	<unknown>
     170: 6c                           	insb	byte ptr es:[rdi], dx
     171: 6c                           	insb	byte ptr es:[rdi], dx
     172: 62                           	<unknown>
     173: 61                           	<unknown>
     174: 63 6b 00                     	movsxd	ebp, dword ptr [rbx]
     177: 6e                           	outsb	dx, byte ptr [rsi]
     178: 6e                           	outsb	dx, byte ptr [rsi]
     179: 5f                           	pop	rdi
     17a: 76 75                        	jbe	0x1f1 <.symtab+0x1f1>
     17c: 6c                           	insb	byte ptr es:[rdi], dx
     17d: 6b 61 6e 5f                  	imul	esp, dword ptr [rcx + 110], 95
     181: 70 69                        	jo	0x1ec <.symtab+0x1ec>
     183: 70 65                        	jo	0x1ea <.symtab+0x1ea>
     185: 6c                           	insb	byte ptr es:[rdi], dx
     186: 69 6e 65 2e 63 00 5f         	imul	ebp, dword ptr [rsi + 101], 1593860910
     18d: 5f                           	pop	rdi
     18e: 46 52                        	push	rdx
     190: 41 4d                        	<unknown>
     192: 45 5f                        	pop	r15
     194: 45 4e                        	<unknown>
     196: 44 5f                        	pop	rdi
     198: 5f                           	pop	rdi
     199: 00 5f 66                     	add	byte ptr [rdi + 102], bl
     19c: 69 6e 69 00 5f 5f 64         	imul	ebp, dword ptr [rsi + 105], 1683971840
     1a3: 73 6f                        	jae	0x214 <.symtab+0x214>
     1a5: 5f                           	pop	rdi
     1a6: 68 61 6e 64 6c               	push	1818521185
     1ab: 65 00 5f 44                  	add	byte ptr gs:[rdi + 68], bl
     1af: 59                           	pop	rcx
     1b0: 4e 41                        	<unknown>
     1b2: 4d 49                        	<unknown>
     1b4: 43 00 5f 5f                  	add	byte ptr [r15 + 95], bl
     1b8: 47 4e                        	<unknown>
     1ba: 55                           	push	rbp
     1bb: 5f                           	pop	rdi
     1bc: 45 48                        	rex64
     1be: 5f                           	pop	rdi
     1bf: 46 52                        	push	rdx
     1c1: 41 4d                        	<unknown>
     1c3: 45 5f                        	pop	r15
     1c5: 48 44                        	<unknown>
     1c7: 52                           	push	rdx
     1c8: 00 5f 5f                     	add	byte ptr [rdi + 95], bl
     1cb: 54                           	push	rsp
     1cc: 4d 43                        	<unknown>
     1ce: 5f                           	pop	rdi
     1cf: 45 4e                        	<unknown>
     1d1: 44 5f                        	pop	rdi
     1d3: 5f                           	pop	rdi
     1d4: 00 5f 47                     	add	byte ptr [rdi + 71], bl
     1d7: 4c 4f                        	<unknown>
     1d9: 42 41                        	<unknown>
     1db: 4c 5f                        	pop	rdi
     1dd: 4f 46                        	<unknown>
     1df: 46 53                        	push	rbx
     1e1: 45 54                        	push	r12
     1e3: 5f                           	pop	rdi
     1e4: 54                           	push	rsp
     1e5: 41 42                        	<unknown>
     1e7: 4c 45                        	<unknown>
     1e9: 5f                           	pop	rdi
     1ea: 00 5f 69                     	add	byte ptr [rdi + 105], bl
     1ed: 6e                           	outsb	dx, byte ptr [rsi]
     1ee: 69 74 00 76 6b 45 6e 75      	imul	esi, dword ptr [rax + rax + 118], 1970161003
     1f6: 6d                           	insd	dword ptr es:[rdi], dx
     1f7: 65 72 61                     	jb	0x25b <.note.gnu.build-id+0x23>
     1fa: 74 65                        	je	0x261 <.gnu.hash+0x1>
     1fc: 50                           	push	rax
     1fd: 68 79 73 69 63               	push	1667855225
     202: 61                           	<unknown>
     203: 6c                           	insb	byte ptr es:[rdi], dx
     204: 44 65                        	gs
     206: 76 69                        	jbe	0x271 <.gnu.hash+0x11>
     208: 63 65 73                     	movsxd	esp, dword ptr [rbp + 115]
     20b: 00 6e 6e                     	add	byte ptr [rsi + 110], ch
     20e: 52                           	push	rdx
     20f: 75 6e                        	jne	0x27f <.gnu.hash+0x1f>
     211: 54                           	push	rsp
     212: 77 6f                        	ja	0x283 <.gnu.hash+0x23>
     214: 4d 61                        	<unknown>
     216: 74 72                        	je	0x28a <.gnu.hash+0x2a>
     218: 69 63 65 73 41 6e 64         	imul	esp, dword ptr [rbx + 101], 1684947315
     21f: 4f 75 74                     	jne	0x296 <.gnu.hash+0x36>
     222: 70 75                        	jo	0x299 <.gnu.hash+0x39>
     224: 74 00                        	je	0x226 <.symtab+0x226>
     226: 76 6b                        	jbe	0x293 <.gnu.hash+0x33>
     228: 43 72 65                     	jb	0x290 <.gnu.hash+0x30>
     22b: 61                           	<unknown>
     22c: 74 65                        	je	0x293 <.gnu.hash+0x33>
     22e: 44 65                        	gs
     230: 73 63                        	jae	0x295 <.gnu.hash+0x35>
     232: 72 69                        	jb	0x29d <.gnu.hash+0x3d>
     234: 70 74                        	jo	0x2aa <.gnu.hash+0x4a>
     236: 6f                           	outsd	dx, dword ptr [rsi]
     237: 72 53                        	jb	0x28c <.gnu.hash+0x2c>
     239: 65 74 4c                     	je	0x288 <.gnu.hash+0x28>
     23c: 61                           	<unknown>
     23d: 79 6f                        	jns	0x2ae <.gnu.hash+0x4e>
     23f: 75 74                        	jne	0x2b5 <.gnu.hash+0x55>
     241: 00 66 72                     	add	byte ptr [rsi + 114], ah
     244: 65 65 40 47                  	<unknown>
     248: 4c 49                        	<unknown>
     24a: 42 43                        	<unknown>
     24c: 5f                           	pop	rdi
     24d: 32 2e                        	xor	ch, byte ptr [rsi]
     24f: 32 2e                        	xor	ch, byte ptr [rsi]
     251: 35 00 76 6b 43               	xor	eax, 1131116032
     256: 6d                           	insd	dword ptr es:[rdi], dx
     257: 64 42 69 6e 64 44 65 73 63   	imul	ebp, dword ptr fs:[rsi + 100], 1668506948
     260: 72 69                        	jb	0x2cb <.gnu.hash+0x6b>
     262: 70 74                        	jo	0x2d8 <.gnu.hash+0x78>
     264: 6f                           	outsd	dx, dword ptr [rsi]
     265: 72 53                        	jb	0x2ba <.gnu.hash+0x5a>
     267: 65 74 73                     	je	0x2dd <.gnu.hash+0x7d>
     26a: 00 76 6b                     	add	byte ptr [rsi + 107], dh
     26d: 51                           	push	rcx
     26e: 75 65                        	jne	0x2d5 <.gnu.hash+0x75>
     270: 75 65                        	jne	0x2d7 <.gnu.hash+0x77>
     272: 57                           	push	rdi
     273: 61                           	<unknown>
     274: 69 74 49 64 6c 65 00 6e      	imul	esi, dword ptr [rcx + 2*rcx + 100], 1845519724
     27c: 6e                           	outsb	dx, byte ptr [rsi]
     27d: 53                           	push	rbx
     27e: 61                           	<unknown>
     27f: 76 65                        	jbe	0x2e6 <.gnu.hash+0x86>
     281: 56                           	push	rsi
     282: 6b 50 69 70                  	imul	edx, dword ptr [rax + 105], 112
     286: 65 6c                        	insb	byte ptr es:[rdi], dx
     288: 69 6e 65 43 61 63 68         	imul	ebp, dword ptr [rsi + 101], 1751343427
     28f: 65 00 6e 6e                  	add	byte ptr gs:[rsi + 110], ch
     293: 46 69 6e 64 4d 65 6d 6f      	imul	r13d, dword ptr [rsi + 100], 1869440333
     29b: 72 79                        	jb	0x316 <.gnu.hash+0xb6>
     29d: 50                           	push	rax
     29e: 72 6f                        	jb	0x30f <.gnu.hash+0xaf>
     2a0: 70 65                        	jo	0x307 <.gnu.hash+0xa7>
     2a2: 72 74                        	jb	0x318 <.gnu.hash+0xb8>
     2a4: 69 65 73 00 5f 49 54         	imul	esp, dword ptr [rbp + 115], 1414094592
     2ab: 4d 5f                        	pop	r15
     2ad: 64 65 72 65                  	jb	0x316 <.gnu.hash+0xb6>
     2b1: 67 69 73 74 65 72 54 4d      	imul	esi, dword ptr [ebx + 116], 1297379941
     2b9: 43 6c                        	insb	byte ptr es:[rdi], dx
     2bb: 6f                           	outsd	dx, dword ptr [rsi]
     2bc: 6e                           	outsb	dx, byte ptr [rsi]
     2bd: 65 54                        	push	rsp
     2bf: 61                           	<unknown>
     2c0: 62                           	<unknown>
     2c1: 6c                           	insb	byte ptr es:[rdi], dx
     2c2: 65 00 66 72                  	add	byte ptr gs:[rsi + 114], ah
     2c6: 65 61                        	<unknown>
     2c8: 64 40 47                     	<unknown>
     2cb: 4c 49                        	<unknown>
     2cd: 42 43                        	<unknown>
     2cf: 5f                           	pop	rdi
     2d0: 32 2e                        	xor	ch, byte ptr [rsi]
     2d2: 32 2e                        	xor	ch, byte ptr [rsi]
     2d4: 35 00 76 6b 43               	xor	eax, 1131116032
     2d9: 6d                           	insd	dword ptr es:[rdi], dx
     2da: 64 42 69 6e 64 50 69 70 65   	imul	ebp, dword ptr fs:[rsi + 100], 1701865808
     2e3: 6c                           	insb	byte ptr es:[rdi], dx
     2e4: 69 6e 65 00 76 6b 47         	imul	ebp, dword ptr [rsi + 101], 1198224896
     2eb: 65 74 50                     	je	0x33e <.dynsym+0x1e>
     2ee: 68 79 73 69 63               	push	1667855225
     2f3: 61                           	<unknown>
     2f4: 6c                           	insb	byte ptr es:[rdi], dx
     2f5: 44 65                        	gs
     2f7: 76 69                        	jbe	0x362 <.dynsym+0x42>
     2f9: 63 65 51                     	movsxd	esp, dword ptr [rbp + 81]
     2fc: 75 65                        	jne	0x363 <.dynsym+0x43>
     2fe: 75 65                        	jne	0x365 <.dynsym+0x45>
     300: 46 61                        	<unknown>
     302: 6d                           	insd	dword ptr es:[rdi], dx
     303: 69 6c 79 50 72 6f 70 65      	imul	ebp, dword ptr [rcx + 2*rdi + 80], 1701867378
     30b: 72 74                        	jb	0x381 <.dynsym+0x61>
     30d: 69 65 73 00 76 6b 45         	imul	esp, dword ptr [rbp + 115], 1164670464
     314: 6e                           	outsb	dx, byte ptr [rsi]
     315: 75 6d                        	jne	0x384 <.dynsym+0x64>
     317: 65 72 61                     	jb	0x37b <.dynsym+0x5b>
     31a: 74 65                        	je	0x381 <.dynsym+0x61>
     31c: 44 65                        	gs
     31e: 76 69                        	jbe	0x389 <.dynsym+0x69>
     320: 63 65 45                     	movsxd	esp, dword ptr [rbp + 69]
     323: 78 74                        	js	0x399 <.dynsym+0x79>
     325: 65 6e                        	outsb	dx, byte ptr gs:[rsi]
     327: 73 69                        	jae	0x392 <.dynsym+0x72>
     329: 6f                           	outsd	dx, dword ptr [rsi]
     32a: 6e                           	outsb	dx, byte ptr [rsi]
     32b: 50                           	push	rax
     32c: 72 6f                        	jb	0x39d <.dynsym+0x7d>
     32e: 70 65                        	jo	0x395 <.dynsym+0x75>
     330: 72 74                        	jb	0x3a6 <.dynsym+0x86>
     332: 69 65 73 00 66 63 6c         	imul	esp, dword ptr [rbp + 115], 1818453504
     339: 6f                           	outsd	dx, dword ptr [rsi]
     33a: 73 65                        	jae	0x3a1 <.dynsym+0x81>
     33c: 40 47                        	<unknown>
     33e: 4c 49                        	<unknown>
     340: 42 43                        	<unknown>
     342: 5f                           	pop	rdi
     343: 32 2e                        	xor	ch, byte ptr [rsi]
     345: 32 2e                        	xor	ch, byte ptr [rsi]
     347: 35 00 76 6b 43               	xor	eax, 1131116032
     34c: 72 65                        	jb	0x3b3 <.dynsym+0x93>
     34e: 61                           	<unknown>
     34f: 74 65                        	je	0x3b6 <.dynsym+0x96>
     351: 50                           	push	rax
     352: 69 70 65 6c 69 6e 65         	imul	esi, dword ptr [rax + 101], 1701734764
     359: 43 61                        	<unknown>
     35b: 63 68 65                     	movsxd	ebp, dword ptr [rax + 101]
     35e: 00 6e 6e                     	add	byte ptr [rsi + 110], ch
     361: 47 65                        	gs
     363: 74 56                        	je	0x3bb <.dynsym+0x9b>
     365: 6b 50 68 79                  	imul	edx, dword ptr [rax + 104], 121
     369: 73 69                        	jae	0x3d4 <.dynsym+0xb4>
     36b: 63 61 6c                     	movsxd	esp, dword ptr [rcx + 108]
     36e: 44 65                        	gs
     370: 76 69                        	jbe	0x3db <.dynsym+0xbb>
     372: 63 65 49                     	movsxd	esp, dword ptr [rbp + 73]
     375: 6e                           	outsb	dx, byte ptr [rsi]
     376: 64 65 78 42                  	js	0x3bc <.dynsym+0x9c>
     37a: 79 45                        	jns	0x3c1 <.dynsym+0xa1>
     37c: 78 74                        	js	0x3f2 <.dynsym+0xd2>
     37e: 65 6e                        	outsb	dx, byte ptr gs:[rsi]
     380: 73 69                        	jae	0x3eb <.dynsym+0xcb>
     382: 6f                           	outsd	dx, dword ptr [rsi]
     383: 6e                           	outsb	dx, byte ptr [rsi]
     384: 4e 61                        	<unknown>
     386: 6d                           	insd	dword ptr es:[rdi], dx
     387: 65 00 76 6b                  	add	byte ptr gs:[rsi + 107], dh
     38b: 43 72 65                     	jb	0x3f3 <.dynsym+0xd3>
     38e: 61                           	<unknown>
     38f: 74 65                        	je	0x3f6 <.dynsym+0xd6>
     391: 43 6f                        	outsd	dx, dword ptr [rsi]
     393: 6d                           	insd	dword ptr es:[rdi], dx
     394: 6d                           	insd	dword ptr es:[rdi], dx
     395: 61                           	<unknown>
     396: 6e                           	outsb	dx, byte ptr [rsi]
     397: 64 50                        	push	rax
     399: 6f                           	outsd	dx, dword ptr [rsi]
     39a: 6f                           	outsd	dx, dword ptr [rsi]
     39b: 6c                           	insb	byte ptr es:[rdi], dx
     39c: 00 6e 6e                     	add	byte ptr [rsi + 110], ch
     39f: 43 72 65                     	jb	0x407 <.dynsym+0xe7>
     3a2: 61                           	<unknown>
     3a3: 74 65                        	je	0x40a <.dynsym+0xea>
     3a5: 56                           	push	rsi
     3a6: 6b 43 6f 6d                  	imul	eax, dword ptr [rbx + 111], 109
     3aa: 70 75                        	jo	0x421 <.dynsym+0x101>
     3ac: 74 65                        	je	0x413 <.dynsym+0xf3>
     3ae: 50                           	push	rax
     3af: 69 70 65 6c 69 6e 65         	imul	esi, dword ptr [rax + 101], 1701734764
     3b6: 43 6f                        	outsd	dx, dword ptr [rsi]
     3b8: 72 72                        	jb	0x42c <.dynsym+0x10c>
     3ba: 65 6c                        	insb	byte ptr es:[rdi], dx
     3bc: 61                           	<unknown>
     3bd: 74 65                        	je	0x424 <.dynsym+0x104>
     3bf: 32 64 56 61                  	xor	ah, byte ptr [rsi + 2*rdx + 97]
     3c3: 6c                           	insb	byte ptr es:[rdi], dx
     3c4: 69 64 00 6e 6e 47 65 74      	imul	esp, dword ptr [rax + rax + 110], 1952794478
     3cc: 56                           	push	rsi
     3cd: 6b 51 75 65                  	imul	edx, dword ptr [rcx + 117], 101
     3d1: 75 65                        	jne	0x438 <.dynsym+0x118>
     3d3: 43 6f                        	outsd	dx, dword ptr [rsi]
     3d5: 6d                           	insd	dword ptr es:[rdi], dx
     3d6: 70 75                        	jo	0x44d <.dynsym+0x12d>
     3d8: 74 65                        	je	0x43f <.dynsym+0x11f>
     3da: 49 6e                        	outsb	dx, byte ptr [rsi]
     3dc: 64 65 78 00                  	js	0x3e0 <.dynsym+0xc0>
     3e0: 72 65                        	jb	0x447 <.dynsym+0x127>
     3e2: 77 69                        	ja	0x44d <.dynsym+0x12d>
     3e4: 6e                           	outsb	dx, byte ptr [rsi]
     3e5: 64 40 47                     	<unknown>
     3e8: 4c 49                        	<unknown>
     3ea: 42 43                        	<unknown>
     3ec: 5f                           	pop	rdi
     3ed: 32 2e                        	xor	ch, byte ptr [rsi]
     3ef: 32 2e                        	xor	ch, byte ptr [rsi]
     3f1: 35 00 76 6b 47               	xor	eax, 1198224896
     3f6: 65 74 44                     	je	0x43d <.dynsym+0x11d>
     3f9: 65 76 69                     	jbe	0x465 <.dynsym+0x145>
     3fc: 63 65 51                     	movsxd	esp, dword ptr [rbp + 81]
     3ff: 75 65                        	jne	0x466 <.dynsym+0x146>
     401: 75 65                        	jne	0x468 <.dynsym+0x148>
     403: 00 76 6b                     	add	byte ptr [rsi + 107], dh
     406: 47 65                        	gs
     408: 74 42                        	je	0x44c <.dynsym+0x12c>
     40a: 75 66                        	jne	0x472 <.dynsym+0x152>
     40c: 66 65 72 4d                  	jb	0x45d <.dynsym+0x13d>
     410: 65 6d                        	insd	dword ptr es:[rdi], dx
     412: 6f                           	outsd	dx, dword ptr [rsi]
     413: 72 79                        	jb	0x48e <.dynsym+0x16e>
     415: 52                           	push	rdx
     416: 65 71 75                     	jno	0x48e <.dynsym+0x16e>
     419: 69 72 65 6d 65 6e 74         	imul	esi, dword ptr [rdx + 101], 1953391981
     420: 73 00                        	jae	0x422 <.dynsym+0x102>
     422: 76 6b                        	jbe	0x48f <.dynsym+0x16f>
     424: 55                           	push	rbp
     425: 6e                           	outsb	dx, byte ptr [rsi]
     426: 6d                           	insd	dword ptr es:[rdi], dx
     427: 61                           	<unknown>
     428: 70 4d                        	jo	0x477 <.dynsym+0x157>
     42a: 65 6d                        	insd	dword ptr es:[rdi], dx
     42c: 6f                           	outsd	dx, dword ptr [rsi]
     42d: 72 79                        	jb	0x4a8 <.dynsym+0x188>
     42f: 00 6e 6e                     	add	byte ptr [rsi + 110], ch
     432: 43 72 65                     	jb	0x49a <.dynsym+0x17a>
     435: 61                           	<unknown>
     436: 74 65                        	je	0x49d <.dynsym+0x17d>
     438: 56                           	push	rsi
     439: 6b 44 65 76 69               	imul	eax, dword ptr [rbp + 2*riz + 118], 105
     43e: 63 65 00                     	movsxd	esp, dword ptr [rbp]
     441: 6e                           	outsb	dx, byte ptr [rsi]
     442: 6e                           	outsb	dx, byte ptr [rsi]
     443: 43 72 65                     	jb	0x4ab <.dynsym+0x18b>
     446: 61                           	<unknown>
     447: 74 65                        	je	0x4ae <.dynsym+0x18e>
     449: 56                           	push	rsi
     44a: 6b 44 65 73 63               	imul	eax, dword ptr [rbp + 2*riz + 115], 99
     44f: 72 69                        	jb	0x4ba <.dynsym+0x19a>
     451: 70 74                        	jo	0x4c7 <.dynsym+0x1a7>
     453: 6f                           	outsd	dx, dword ptr [rsi]
     454: 72 53                        	jb	0x4a9 <.dynsym+0x189>
     456: 65 74 4c                     	je	0x4a5 <.dynsym+0x185>
     459: 61                           	<unknown>
     45a: 79 6f                        	jns	0x4cb <.dynsym+0x1ab>
     45c: 75 74                        	jne	0x4d2 <.dynsym+0x1b2>
     45e: 42 69 6e 64 69 6e 67 53      	imul	ebp, dword ptr [rsi + 100], 1399287401
     466: 74 6f                        	je	0x4d7 <.dynsym+0x1b7>
     468: 72 61                        	jb	0x4cb <.dynsym+0x1ab>
     46a: 67 65 42 75 66               	jne	0x4d5 <.dynsym+0x1b5>
     46f: 66 65 72 00                  	jb	0x473 <.dynsym+0x153>
     473: 76 6b                        	jbe	0x4e0 <.dynsym+0x1c0>
     475: 47 65                        	gs
     477: 74 49                        	je	0x4c2 <.dynsym+0x1a2>
     479: 6e                           	outsb	dx, byte ptr [rsi]
     47a: 73 74                        	jae	0x4f0 <.dynsym+0x1d0>
     47c: 61                           	<unknown>
     47d: 6e                           	outsb	dx, byte ptr [rsi]
     47e: 63 65 50                     	movsxd	esp, dword ptr [rbp + 80]
     481: 72 6f                        	jb	0x4f2 <.dynsym+0x1d2>
     483: 63 41 64                     	movsxd	eax, dword ptr [rcx + 100]
     486: 64 72 00                     	jb	0x489 <.dynsym+0x169>
     489: 76 6b                        	jbe	0x4f6 <.dynsym+0x1d6>
     48b: 44 65                        	gs
     48d: 73 74                        	jae	0x503 <.dynsym+0x1e3>
     48f: 72 6f                        	jb	0x500 <.dynsym+0x1e0>
     491: 79 50                        	jns	0x4e3 <.dynsym+0x1c3>
     493: 69 70 65 6c 69 6e 65         	imul	esi, dword ptr [rax + 101], 1701734764
     49a: 43 61                        	<unknown>
     49c: 63 68 65                     	movsxd	ebp, dword ptr [rax + 101]
     49f: 00 76 6b                     	add	byte ptr [rsi + 107], dh
     4a2: 51                           	push	rcx
     4a3: 75 65                        	jne	0x50a <.dynsym+0x1ea>
     4a5: 75 65                        	jne	0x50c <.dynsym+0x1ec>
     4a7: 53                           	push	rbx
     4a8: 75 62                        	jne	0x50c <.dynsym+0x1ec>
     4aa: 6d                           	insd	dword ptr es:[rdi], dx
     4ab: 69 74 00 76 6b 45 6e 64      	imul	esi, dword ptr [rax + rax + 118], 1684948331
     4b3: 43 6f                        	outsd	dx, dword ptr [rsi]
     4b5: 6d                           	insd	dword ptr es:[rdi], dx
     4b6: 6d                           	insd	dword ptr es:[rdi], dx
     4b7: 61                           	<unknown>
     4b8: 6e                           	outsb	dx, byte ptr [rsi]
     4b9: 64 42 75 66                  	jne	0x523 <.dynsym+0x203>
     4bd: 66 65 72 00                  	jb	0x4c1 <.dynsym+0x1a1>
     4c1: 66 70 75                     	jo	0x539 <.dynsym+0x219>
     4c4: 74 63                        	je	0x529 <.dynsym+0x209>
     4c6: 40 47                        	<unknown>
     4c8: 4c 49                        	<unknown>
     4ca: 42 43                        	<unknown>
     4cc: 5f                           	pop	rdi
     4cd: 32 2e                        	xor	ch, byte ptr [rsi]
     4cf: 32 2e                        	xor	ch, byte ptr [rsi]
     4d1: 35 00 6e 6e 52               	xor	eax, 1382968832
     4d6: 65 61                        	<unknown>
     4d8: 64 42 69 6e 61 72 79 46 69   	imul	ebp, dword ptr fs:[rsi + 97], 1766226290
     4e1: 6c                           	insb	byte ptr es:[rdi], dx
     4e2: 65 00 6e 6e                  	add	byte ptr gs:[rsi + 110], ch
     4e6: 43 72 65                     	jb	0x54e <.dynsym+0x22e>
     4e9: 61                           	<unknown>
     4ea: 74 65                        	je	0x551 <.dynsym+0x231>
     4ec: 44 65                        	gs
     4ee: 66 61                        	<unknown>
     4f0: 75 6c                        	jne	0x55e <.dynsym+0x23e>
     4f2: 74 56                        	je	0x54a <.dynsym+0x22a>
     4f4: 6b 49 6e 73                  	imul	ecx, dword ptr [rcx + 110], 115
     4f8: 74 61                        	je	0x55b <.dynsym+0x23b>
     4fa: 6e                           	outsb	dx, byte ptr [rsi]
     4fb: 63 65 00                     	movsxd	esp, dword ptr [rbp]
     4fe: 73 74                        	jae	0x574 <.dynsym+0x254>
     500: 72 63                        	jb	0x565 <.dynsym+0x245>
     502: 6d                           	insd	dword ptr es:[rdi], dx
     503: 70 40                        	jo	0x545 <.dynsym+0x225>
     505: 47 4c                        	<unknown>
     507: 49 42                        	<unknown>
     509: 43 5f                        	pop	r15
     50b: 32 2e                        	xor	ch, byte ptr [rsi]
     50d: 32 2e                        	xor	ch, byte ptr [rsi]
     50f: 35 00 76 6b 44               	xor	eax, 1147893248
     514: 65 73 74                     	jae	0x58b <.dynsym+0x26b>
     517: 72 6f                        	jb	0x588 <.dynsym+0x268>
     519: 79 53                        	jns	0x56e <.dynsym+0x24e>
     51b: 68 61 64 65 72               	push	1919247457
     520: 4d 6f                        	outsd	dx, dword ptr [rsi]
     522: 64 75 6c                     	jne	0x591 <.dynsym+0x271>
     525: 65 00 66 70                  	add	byte ptr gs:[rsi + 112], ah
     529: 72 69                        	jb	0x594 <.dynsym+0x274>
     52b: 6e                           	outsb	dx, byte ptr [rsi]
     52c: 74 66                        	je	0x594 <.dynsym+0x274>
     52e: 40 47                        	<unknown>
     530: 4c 49                        	<unknown>
     532: 42 43                        	<unknown>
     534: 5f                           	pop	rdi
     535: 32 2e                        	xor	ch, byte ptr [rsi]
     537: 32 2e                        	xor	ch, byte ptr [rsi]
     539: 35 00 66 74 65               	xor	eax, 1702127104
     53e: 6c                           	insb	byte ptr es:[rdi], dx
     53f: 6c                           	insb	byte ptr es:[rdi], dx
     540: 40 47                        	<unknown>
     542: 4c 49                        	<unknown>
     544: 42 43                        	<unknown>
     546: 5f                           	pop	rdi
     547: 32 2e                        	xor	ch, byte ptr [rsi]
     549: 32 2e                        	xor	ch, byte ptr [rsi]
     54b: 35 00 76 6b 43               	xor	eax, 1131116032
     550: 72 65                        	jb	0x5b7 <.dynsym+0x297>
     552: 61                           	<unknown>
     553: 74 65                        	je	0x5ba <.dynsym+0x29a>
     555: 43 6f                        	outsd	dx, dword ptr [rsi]
     557: 6d                           	insd	dword ptr es:[rdi], dx
     558: 70 75                        	jo	0x5cf <.dynsym+0x2af>
     55a: 74 65                        	je	0x5c1 <.dynsym+0x2a1>
     55c: 50                           	push	rax
     55d: 69 70 65 6c 69 6e 65         	imul	esi, dword ptr [rax + 101], 1701734764
     564: 73 00                        	jae	0x566 <.dynsym+0x246>
     566: 5f                           	pop	rdi
     567: 5f                           	pop	rdi
     568: 67 6d                        	insd	dword ptr es:[edi], dx
     56a: 6f                           	outsd	dx, dword ptr [rsi]
     56b: 6e                           	outsb	dx, byte ptr [rsi]
     56c: 5f                           	pop	rdi
     56d: 73 74                        	jae	0x5e3 <.dynsym+0x2c3>
     56f: 61                           	<unknown>
     570: 72 74                        	jb	0x5e6 <.dynsym+0x2c6>
     572: 5f                           	pop	rdi
     573: 5f                           	pop	rdi
     574: 00 6e 6e                     	add	byte ptr [rsi + 110], ch
     577: 47 65                        	gs
     579: 74 56                        	je	0x5d1 <.dynsym+0x2b1>
     57b: 6b 44 65 76 69               	imul	eax, dword ptr [rbp + 2*riz + 118], 105
     580: 63 65 51                     	movsxd	esp, dword ptr [rbp + 81]
     583: 75 65                        	jne	0x5ea <.dynsym+0x2ca>
     585: 75 65                        	jne	0x5ec <.dynsym+0x2cc>
     587: 00 6d 65                     	add	byte ptr [rbp + 101], ch
     58a: 6d                           	insd	dword ptr es:[rdi], dx
     58b: 63 70 79                     	movsxd	esi, dword ptr [rax + 121]
     58e: 40 47                        	<unknown>
     590: 4c 49                        	<unknown>
     592: 42 43                        	<unknown>
     594: 5f                           	pop	rdi
     595: 32 2e                        	xor	ch, byte ptr [rsi]
     597: 31 34 00                     	xor	dword ptr [rax + rax], esi
     59a: 76 6b                        	jbe	0x607 <.dynsym+0x2e7>
     59c: 47 65                        	gs
     59e: 74 50                        	je	0x5f0 <.dynsym+0x2d0>
     5a0: 68 79 73 69 63               	push	1667855225
     5a5: 61                           	<unknown>
     5a6: 6c                           	insb	byte ptr es:[rdi], dx
     5a7: 44 65                        	gs
     5a9: 76 69                        	jbe	0x614 <.dynsym+0x2f4>
     5ab: 63 65 4d                     	movsxd	esp, dword ptr [rbp + 77]
     5ae: 65 6d                        	insd	dword ptr es:[rdi], dx
     5b0: 6f                           	outsd	dx, dword ptr [rsi]
     5b1: 72 79                        	jb	0x62c <.dynsym+0x30c>
     5b3: 50                           	push	rax
     5b4: 72 6f                        	jb	0x625 <.dynsym+0x305>
     5b6: 70 65                        	jo	0x61d <.dynsym+0x2fd>
     5b8: 72 74                        	jb	0x62e <.dynsym+0x30e>
     5ba: 69 65 73 00 6e 6e 43         	imul	esp, dword ptr [rbp + 115], 1131310592
     5c1: 72 65                        	jb	0x628 <.dynsym+0x308>
     5c3: 61                           	<unknown>
     5c4: 74 65                        	je	0x62b <.dynsym+0x30b>
     5c6: 56                           	push	rsi
     5c7: 6b 44 65 62 75               	imul	eax, dword ptr [rbp + 2*riz + 98], 117
     5cc: 67 55                        	push	rbp
     5ce: 74 69                        	je	0x639 <.dynsym+0x319>
     5d0: 6c                           	insb	byte ptr es:[rdi], dx
     5d1: 73 4d                        	jae	0x620 <.dynsym+0x300>
     5d3: 65 73 73                     	jae	0x649 <.dynsym+0x329>
     5d6: 65 6e                        	outsb	dx, byte ptr gs:[rsi]
     5d8: 67 65 72 00                  	jb	0x5dc <.dynsym+0x2bc>
     5dc: 6e                           	outsb	dx, byte ptr [rsi]
     5dd: 6e                           	outsb	dx, byte ptr [rsi]
     5de: 4d 65                        	gs
     5e0: 6d                           	insd	dword ptr es:[rdi], dx
     5e1: 6f                           	outsd	dx, dword ptr [rsi]
     5e2: 72 79                        	jb	0x65d <.dynsym+0x33d>
     5e4: 43 6f                        	outsd	dx, dword ptr [rsi]
     5e6: 70 79                        	jo	0x661 <.dynsym+0x341>
     5e8: 00 6e 6e                     	add	byte ptr [rsi + 110], ch
     5eb: 43 72 65                     	jb	0x653 <.dynsym+0x333>
     5ee: 61                           	<unknown>
     5ef: 74 65                        	je	0x656 <.dynsym+0x336>
     5f1: 56                           	push	rsi
     5f2: 6b 43 6f 6d                  	imul	eax, dword ptr [rbx + 111], 109
     5f6: 70 75                        	jo	0x66d <.dynsym+0x34d>
     5f8: 74 65                        	je	0x65f <.dynsym+0x33f>
     5fa: 50                           	push	rax
     5fb: 69 70 65 6c 69 6e 65         	imul	esi, dword ptr [rax + 101], 1701734764
     602: 32 4d 61                     	xor	cl, byte ptr [rbp + 97]
     605: 74 72                        	je	0x679 <.dynsym+0x359>
     607: 69 63 65 73 41 6e 64         	imul	esp, dword ptr [rbx + 101], 1684947315
     60e: 4f 75 74                     	jne	0x685 <.dynsym+0x365>
     611: 70 75                        	jo	0x688 <.dynsym+0x368>
     613: 74 00                        	je	0x615 <.dynsym+0x2f5>
     615: 76 6b                        	jbe	0x682 <.dynsym+0x362>
     617: 47 65                        	gs
     619: 74 50                        	je	0x66b <.dynsym+0x34b>
     61b: 68 79 73 69 63               	push	1667855225
     620: 61                           	<unknown>
     621: 6c                           	insb	byte ptr es:[rdi], dx
     622: 44 65                        	gs
     624: 76 69                        	jbe	0x68f <.dynsym+0x36f>
     626: 63 65 73                     	movsxd	esp, dword ptr [rbp + 115]
     629: 00 76 6b                     	add	byte ptr [rsi + 107], dh
     62c: 41 6c                        	insb	byte ptr es:[rdi], dx
     62e: 6c                           	insb	byte ptr es:[rdi], dx
     62f: 6f                           	outsd	dx, dword ptr [rsi]
     630: 63 61 74                     	movsxd	esp, dword ptr [rcx + 116]
     633: 65 4d 65                     	gs
     636: 6d                           	insd	dword ptr es:[rdi], dx
     637: 6f                           	outsd	dx, dword ptr [rsi]
     638: 72 79                        	jb	0x6b3 <.dynsym+0x393>
     63a: 00 6d 61                     	add	byte ptr [rbp + 97], ch
     63d: 6c                           	insb	byte ptr es:[rdi], dx
     63e: 6c                           	insb	byte ptr es:[rdi], dx
     63f: 6f                           	outsd	dx, dword ptr [rsi]
     640: 63 40 47                     	movsxd	eax, dword ptr [rax + 71]
     643: 4c 49                        	<unknown>
     645: 42 43                        	<unknown>
     647: 5f                           	pop	rdi
     648: 32 2e                        	xor	ch, byte ptr [rsi]
     64a: 32 2e                        	xor	ch, byte ptr [rsi]
     64c: 35 00 76 6b 4d               	xor	eax, 1298888192
     651: 61                           	<unknown>
     652: 70 4d                        	jo	0x6a1 <.dynsym+0x381>
     654: 65 6d                        	insd	dword ptr es:[rdi], dx
     656: 6f                           	outsd	dx, dword ptr [rsi]
     657: 72 79                        	jb	0x6d2 <.dynsym+0x3b2>
     659: 00 76 6b                     	add	byte ptr [rsi + 107], dh
     65c: 41 6c                        	insb	byte ptr es:[rdi], dx
     65e: 6c                           	insb	byte ptr es:[rdi], dx
     65f: 6f                           	outsd	dx, dword ptr [rsi]
     660: 63 61 74                     	movsxd	esp, dword ptr [rcx + 116]
     663: 65 44 65                     	gs
     666: 73 63                        	jae	0x6cb <.dynsym+0x3ab>
     668: 72 69                        	jb	0x6d3 <.dynsym+0x3b3>
     66a: 70 74                        	jo	0x6e0 <.dynsym+0x3c0>
     66c: 6f                           	outsd	dx, dword ptr [rsi]
     66d: 72 53                        	jb	0x6c2 <.dynsym+0x3a2>
     66f: 65 74 73                     	je	0x6e5 <.dynsym+0x3c5>
     672: 00 76 6b                     	add	byte ptr [rsi + 107], dh
     675: 43 72 65                     	jb	0x6dd <.dynsym+0x3bd>
     678: 61                           	<unknown>
     679: 74 65                        	je	0x6e0 <.dynsym+0x3c0>
     67b: 42 75 66                     	jne	0x6e4 <.dynsym+0x3c4>
     67e: 66 65 72 00                  	jb	0x682 <.dynsym+0x362>
     682: 76 6b                        	jbe	0x6ef <.dynsym+0x3cf>
     684: 43 72 65                     	jb	0x6ec <.dynsym+0x3cc>
     687: 61                           	<unknown>
     688: 74 65                        	je	0x6ef <.dynsym+0x3cf>
     68a: 50                           	push	rax
     68b: 69 70 65 6c 69 6e 65         	imul	esi, dword ptr [rax + 101], 1701734764
     692: 4c 61                        	<unknown>
     694: 79 6f                        	jns	0x705 <.dynsym+0x3e5>
     696: 75 74                        	jne	0x70c <.dynsym+0x3ec>
     698: 00 66 73                     	add	byte ptr [rsi + 115], ah
     69b: 65 65 6b 40 47 4c            	imul	eax, dword ptr gs:[rax + 71], 76
     6a1: 49 42                        	<unknown>
     6a3: 43 5f                        	pop	r15
     6a5: 32 2e                        	xor	ch, byte ptr [rsi]
     6a7: 32 2e                        	xor	ch, byte ptr [rsi]
     6a9: 35 00 76 6b 43               	xor	eax, 1131116032
     6ae: 72 65                        	jb	0x715 <.dynsym+0x3f5>
     6b0: 61                           	<unknown>
     6b1: 74 65                        	je	0x718 <.dynsym+0x3f8>
     6b3: 44 65                        	gs
     6b5: 76 69                        	jbe	0x720 <.dynsym+0x400>
     6b7: 63 65 00                     	movsxd	esp, dword ptr [rbp]
     6ba: 6e                           	outsb	dx, byte ptr [rsi]
     6bb: 6e                           	outsb	dx, byte ptr [rsi]
     6bc: 47 65                        	gs
     6be: 74 4d                        	je	0x70d <.dynsym+0x3ed>
     6c0: 65 6d                        	insd	dword ptr es:[rdi], dx
     6c2: 6f                           	outsd	dx, dword ptr [rsi]
     6c3: 72 79                        	jb	0x73e <.dynsym+0x41e>
     6c5: 50                           	push	rax
     6c6: 72 6f                        	jb	0x737 <.dynsym+0x417>
     6c8: 70 65                        	jo	0x72f <.dynsym+0x40f>
     6ca: 72 74                        	jb	0x740 <.dynsym+0x420>
     6cc: 69 65 73 00 76 6b 43         	imul	esp, dword ptr [rbp + 115], 1131116032
     6d3: 72 65                        	jb	0x73a <.dynsym+0x41a>
     6d5: 61                           	<unknown>
     6d6: 74 65                        	je	0x73d <.dynsym+0x41d>
     6d8: 53                           	push	rbx
     6d9: 68 61 64 65 72               	push	1919247457
     6de: 4d 6f                        	outsd	dx, dword ptr [rsi]
     6e0: 64 75 6c                     	jne	0x74f <.dynsym+0x42f>
     6e3: 65 00 76 6b                  	add	byte ptr gs:[rsi + 107], dh
     6e7: 41 6c                        	insb	byte ptr es:[rdi], dx
     6e9: 6c                           	insb	byte ptr es:[rdi], dx
     6ea: 6f                           	outsd	dx, dword ptr [rsi]
     6eb: 63 61 74                     	movsxd	esp, dword ptr [rcx + 116]
     6ee: 65 43 6f                     	outsd	dx, dword ptr gs:[rsi]
     6f1: 6d                           	insd	dword ptr es:[rdi], dx
     6f2: 6d                           	insd	dword ptr es:[rdi], dx
     6f3: 61                           	<unknown>
     6f4: 6e                           	outsb	dx, byte ptr [rsi]
     6f5: 64 42 75 66                  	jne	0x75f <.dynsym+0x43f>
     6f9: 66 65 72 73                  	jb	0x770 <.dynsym+0x450>
     6fd: 00 76 6b                     	add	byte ptr [rsi + 107], dh
     700: 43 6d                        	insd	dword ptr es:[rdi], dx
     702: 64 44 69 73 70 61 74 63 68   	imul	r14d, dword ptr fs:[rbx + 112], 1751348321
     70b: 00 76 6b                     	add	byte ptr [rsi + 107], dh
     70e: 55                           	push	rbp
     70f: 70 64                        	jo	0x775 <.dynsym+0x455>
     711: 61                           	<unknown>
     712: 74 65                        	je	0x779 <.dynsym+0x459>
     714: 44 65                        	gs
     716: 73 63                        	jae	0x77b <.dynsym+0x45b>
     718: 72 69                        	jb	0x783 <.dynsym+0x463>
     71a: 70 74                        	jo	0x790 <.dynsym+0x470>
     71c: 6f                           	outsd	dx, dword ptr [rsi]
     71d: 72 53                        	jb	0x772 <.dynsym+0x452>
     71f: 65 74 73                     	je	0x795 <.dynsym+0x475>
     722: 00 66 6f                     	add	byte ptr [rsi + 111], ah
     725: 70 65                        	jo	0x78c <.dynsym+0x46c>
     727: 6e                           	outsb	dx, byte ptr [rsi]
     728: 40 47                        	<unknown>
     72a: 4c 49                        	<unknown>
     72c: 42 43                        	<unknown>
     72e: 5f                           	pop	rdi
     72f: 32 2e                        	xor	ch, byte ptr [rsi]
     731: 32 2e                        	xor	ch, byte ptr [rsi]
     733: 35 00 76 6b 47               	xor	eax, 1198224896
     738: 65 74 50                     	je	0x78b <.dynsym+0x46b>
     73b: 69 70 65 6c 69 6e 65         	imul	esi, dword ptr [rax + 101], 1701734764
     742: 43 61                        	<unknown>
     744: 63 68 65                     	movsxd	ebp, dword ptr [rax + 101]
     747: 44 61                        	<unknown>
     749: 74 61                        	je	0x7ac <.dynsym+0x48c>
     74b: 00 6e 6e                     	add	byte ptr [rsi + 110], ch
     74e: 47 65                        	gs
     750: 74 56                        	je	0x7a8 <.dynsym+0x488>
     752: 6b 50 68 79                  	imul	edx, dword ptr [rax + 104], 121
     756: 73 69                        	jae	0x7c1 <.dynsym+0x4a1>
     758: 63 61 6c                     	movsxd	esp, dword ptr [rcx + 108]
     75b: 44 65                        	gs
     75d: 76 69                        	jbe	0x7c8 <.dynsym+0x4a8>
     75f: 63 65 73                     	movsxd	esp, dword ptr [rbp + 115]
     762: 00 6e 6e                     	add	byte ptr [rsi + 110], ch
     765: 56                           	push	rsi
     766: 61                           	<unknown>
     767: 6c                           	insb	byte ptr es:[rdi], dx
     768: 69 64 43 72 6f 73 73 43      	imul	esp, dword ptr [rbx + 2*rax + 114], 1131639663
     770: 6f                           	outsd	dx, dword ptr [rsi]
     771: 72 72                        	jb	0x7e5 <.dynsym+0x4c5>
     773: 65 6c                        	insb	byte ptr es:[rdi], dx
     775: 61                           	<unknown>
     776: 74 69                        	je	0x7e1 <.dynsym+0x4c1>
     778: 6f                           	outsd	dx, dword ptr [rsi]
     779: 6e                           	outsb	dx, byte ptr [rsi]
     77a: 43 70 75                     	jo	0x7f2 <.dynsym+0x4d2>
     77d: 00 6e 6e                     	add	byte ptr [rsi + 110], ch
     780: 57                           	push	rdi
     781: 72 69                        	jb	0x7ec <.dynsym+0x4cc>
     783: 74 65                        	je	0x7ea <.dynsym+0x4ca>
     785: 42 69 6e 61 72 79 46 69      	imul	ebp, dword ptr [rsi + 97], 1766226290
     78d: 6c                           	insb	byte ptr es:[rdi], dx
     78e: 65 00 76 6b                  	add	byte ptr gs:[rsi + 107], dh
     792: 43 72 65                     	jb	0x7fa <.dynsym+0x4da>
     795: 61                           	<unknown>
     796: 74 65                        	je	0x7fd <.dynsym+0x4dd>
     798: 49 6e                        	outsb	dx, byte ptr [rsi]
     79a: 73 74                        	jae	0x810 <.dynsym+0x4f0>
     79c: 61                           	<unknown>
     79d: 6e                           	outsb	dx, byte ptr [rsi]
     79e: 63 65 00                     	movsxd	esp, dword ptr [rbp]
     7a1: 65 78 69                     	js	0x80d <.dynsym+0x4ed>
     7a4: 74 40                        	je	0x7e6 <.dynsym+0x4c6>
     7a6: 47 4c                        	<unknown>
     7a8: 49 42                        	<unknown>
     7aa: 43 5f                        	pop	r15
     7ac: 32 2e                        	xor	ch, byte ptr [rsi]
     7ae: 32 2e                        	xor	ch, byte ptr [rsi]
     7b0: 35 00 76 6b 43               	xor	eax, 1131116032
     7b5: 72 65                        	jb	0x81c <.dynsym+0x4fc>
     7b7: 61                           	<unknown>
     7b8: 74 65                        	je	0x81f <.dynsym+0x4ff>
     7ba: 44 65                        	gs
     7bc: 73 63                        	jae	0x821 <.dynsym+0x501>
     7be: 72 69                        	jb	0x829 <.dynsym+0x509>
     7c0: 70 74                        	jo	0x836 <.dynsym+0x516>
     7c2: 6f                           	outsd	dx, dword ptr [rsi]
     7c3: 72 50                        	jb	0x815 <.dynsym+0x4f5>
     7c5: 6f                           	outsd	dx, dword ptr [rsi]
     7c6: 6f                           	outsd	dx, dword ptr [rsi]
     7c7: 6c                           	insb	byte ptr es:[rdi], dx
     7c8: 00 66 77                     	add	byte ptr [rsi + 119], ah
     7cb: 72 69                        	jb	0x836 <.dynsym+0x516>
     7cd: 74 65                        	je	0x834 <.dynsym+0x514>
     7cf: 40 47                        	<unknown>
     7d1: 4c 49                        	<unknown>
     7d3: 42 43                        	<unknown>
     7d5: 5f                           	pop	rdi
     7d6: 32 2e                        	xor	ch, byte ptr [rsi]
     7d8: 32 2e                        	xor	ch, byte ptr [rsi]
     7da: 35 00 76 6b 42               	xor	eax, 1114338816
     7df: 65 67 69 6e 43 6f 6d 6d 61   	imul	ebp, dword ptr gs:[esi + 67], 1634561391
     7e8: 6e                           	outsb	dx, byte ptr [rsi]
     7e9: 64 42 75 66                  	jne	0x853 <.dynsym+0x533>
     7ed: 66 65 72 00                  	jb	0x7f1 <.dynsym+0x4d1>
     7f1: 76 6b                        	jbe	0x85e <.dynsym+0x53e>
     7f3: 45 6e                        	outsb	dx, byte ptr [rsi]
     7f5: 75 6d                        	jne	0x864 <.dynsym+0x544>
     7f7: 65 72 61                     	jb	0x85b <.dynsym+0x53b>
     7fa: 74 65                        	je	0x861 <.dynsym+0x541>
     7fc: 49 6e                        	outsb	dx, byte ptr [rsi]
     7fe: 73 74                        	jae	0x874 <.dynsym+0x554>
     800: 61                           	<unknown>
     801: 6e                           	outsb	dx, byte ptr [rsi]
     802: 63 65 4c                     	movsxd	esp, dword ptr [rbp + 76]
     805: 61                           	<unknown>
     806: 79 65                        	jns	0x86d <.dynsym+0x54d>
     808: 72 50                        	jb	0x85a <.dynsym+0x53a>
     80a: 72 6f                        	jb	0x87b <.dynsym+0x55b>
     80c: 70 65                        	jo	0x873 <.dynsym+0x553>
     80e: 72 74                        	jb	0x884 <.dynsym+0x564>
     810: 69 65 73 00 5f 49 54         	imul	esp, dword ptr [rbp + 115], 1414094592
     817: 4d 5f                        	pop	r15
     819: 72 65                        	jb	0x880 <.dynsym+0x560>
     81b: 67 69 73 74 65 72 54 4d      	imul	esi, dword ptr [ebx + 116], 1297379941
     823: 43 6c                        	insb	byte ptr es:[rdi], dx
     825: 6f                           	outsd	dx, dword ptr [rsi]
     826: 6e                           	outsb	dx, byte ptr [rsi]
     827: 65 54                        	push	rsp
     829: 61                           	<unknown>
     82a: 62                           	<unknown>
     82b: 6c                           	insb	byte ptr es:[rdi], dx
     82c: 65 00 76 6b                  	add	byte ptr gs:[rsi + 107], dh
     830: 42 69 6e 64 42 75 66 66      	imul	ebp, dword ptr [rsi + 100], 1717990722
     838: 65 72 4d                     	jb	0x888 <.dynsym+0x568>
     83b: 65 6d                        	insd	dword ptr es:[rdi], dx
     83d: 6f                           	outsd	dx, dword ptr [rsi]
     83e: 72 79                        	jb	0x8b9 <.dynsym+0x599>
     840: 00 6e 6e                     	add	byte ptr [rsi + 110], ch
     843: 56                           	push	rsi
     844: 61                           	<unknown>
     845: 6c                           	insb	byte ptr es:[rdi], dx
     846: 69 64 43 72 6f 73 73 43      	imul	esp, dword ptr [rbx + 2*rax + 114], 1131639663
     84e: 6f                           	outsd	dx, dword ptr [rsi]
     84f: 72 72                        	jb	0x8c3 <.dynsym+0x5a3>
     851: 65 6c                        	insb	byte ptr es:[rdi], dx
     853: 61                           	<unknown>
     854: 74 69                        	je	0x8bf <.dynsym+0x59f>
     856: 6f                           	outsd	dx, dword ptr [rsi]
     857: 6e                           	outsb	dx, byte ptr [rsi]
     858: 47 70 75                     	jo	0x8d0 <.dynsym+0x5b0>
     85b: 00 44 65 73                  	add	byte ptr [rbp + 2*riz + 115], al
     85f: 74 72                        	je	0x8d3 <.dynsym+0x5b3>
     861: 6f                           	outsd	dx, dword ptr [rsi]
     862: 79 44                        	jns	0x8a8 <.dynsym+0x588>
     864: 65 62 75 67 55 74            	<unknown>
     86a: 69 6c 73 4d 65 73 73 65      	imul	ebp, dword ptr [rbx + 2*rsi + 77], 1702064997
     872: 6e                           	outsb	dx, byte ptr [rsi]
     873: 67 65 72 45                  	jb	0x8bc <.dynsym+0x59c>
     877: 58                           	pop	rax
     878: 54                           	push	rsp
     879: 00 5f 5f                     	add	byte ptr [rdi + 95], bl
     87c: 63 78 61                     	movsxd	edi, dword ptr [rax + 97]
     87f: 5f                           	pop	rdi
     880: 66 69 6e 61 6c 69            	imul	bp, word ptr [rsi + 97], 26988
     886: 7a 65                        	jp	0x8ed <.dynsym+0x5cd>
     888: 40 47                        	<unknown>
     88a: 4c 49                        	<unknown>
     88c: 42 43                        	<unknown>
     88e: 5f                           	pop	rdi
     88f: 32 2e                        	xor	ch, byte ptr [rsi]
     891: 32 2e                        	xor	ch, byte ptr [rsi]
     893: 35 00 6e 6e 43               	xor	eax, 1131310592
     898: 72 65                        	jb	0x8ff <.dynsym+0x5df>
     89a: 61                           	<unknown>
     89b: 74 65                        	je	0x902 <.dynsym+0x5e2>
     89d: 56                           	push	rsi
     89e: 6b 50 69 70                  	imul	edx, dword ptr [rax + 105], 112
     8a2: 65 6c                        	insb	byte ptr es:[rdi], dx
     8a4: 69 6e 65 43 61 63 68         	imul	ebp, dword ptr [rsi + 101], 1751343427
     8ab: 65 00 73 74                  	add	byte ptr gs:[rbx + 116], dh
     8af: 64 65 72 72                  	jb	0x925 <.dynsym+0x605>
     8b3: 40 47                        	<unknown>
     8b5: 4c 49                        	<unknown>
     8b7: 42 43                        	<unknown>
     8b9: 5f                           	pop	rdi
     8ba: 32 2e                        	xor	ch, byte ptr [rsi]
     8bc: 32 2e                        	xor	ch, byte ptr [rsi]
     8be: 35                           	<unknown>
     8bf: 00                           	<unknown>

Disassembly of section .shstrtab:

0000000000000000 <.shstrtab>:
       0: 00 2e                        	add	byte ptr [rsi], ch
       2: 73 79                        	jae	0x7d <.symtab+0x7d>
       4: 6d                           	insd	dword ptr es:[rdi], dx
       5: 74 61                        	je	0x68 <.symtab+0x68>
       7: 62 00 2e 73                  	<unknown>
       b: 74 72                        	je	0x7f <.symtab+0x7f>
       d: 74 61                        	je	0x70 <.symtab+0x70>
       f: 62 00 2e 73                  	<unknown>
      13: 68 73 74 72 74               	push	1953657971
      18: 61                           	<unknown>
      19: 62 00 2e 6e                  	<unknown>
      1d: 6f                           	outsd	dx, dword ptr [rsi]
      1e: 74 65                        	je	0x85 <.symtab+0x85>
      20: 2e 67 6e                     	outsb	dx, byte ptr cs:[esi]
      23: 75 2e                        	jne	0x53 <.symtab+0x53>
      25: 62                           	<unknown>
      26: 75 69                        	jne	0x91 <.symtab+0x91>
      28: 6c                           	insb	byte ptr es:[rdi], dx
      29: 64 2d 69 64 00 2e            	sub	eax, 771777641
      2f: 67 6e                        	outsb	dx, byte ptr [esi]
      31: 75 2e                        	jne	0x61 <.symtab+0x61>
      33: 68 61 73 68 00               	push	6845281
      38: 2e 64 79 6e                  	jns	0xaa <.symtab+0xaa>
      3c: 73 79                        	jae	0xb7 <.symtab+0xb7>
      3e: 6d                           	insd	dword ptr es:[rdi], dx
      3f: 00 2e                        	add	byte ptr [rsi], ch
      41: 64 79 6e                     	jns	0xb2 <.symtab+0xb2>
      44: 73 74                        	jae	0xba <.symtab+0xba>
      46: 72 00                        	jb	0x48 <.symtab+0x48>
      48: 2e 67 6e                     	outsb	dx, byte ptr cs:[esi]
      4b: 75 2e                        	jne	0x7b <.symtab+0x7b>
      4d: 76 65                        	jbe	0xb4 <.symtab+0xb4>
      4f: 72 73                        	jb	0xc4 <.symtab+0xc4>
      51: 69 6f 6e 00 2e 67 6e         	imul	ebp, dword ptr [rdi + 110], 1852255744
      58: 75 2e                        	jne	0x88 <.symtab+0x88>
      5a: 76 65                        	jbe	0xc1 <.symtab+0xc1>
      5c: 72 73                        	jb	0xd1 <.symtab+0xd1>
      5e: 69 6f 6e 5f 72 00 2e         	imul	ebp, dword ptr [rdi + 110], 771781215
      65: 72 65                        	jb	0xcc <.symtab+0xcc>
      67: 6c                           	insb	byte ptr es:[rdi], dx
      68: 61                           	<unknown>
      69: 2e 64 79 6e                  	jns	0xdb <.symtab+0xdb>
      6d: 00 2e                        	add	byte ptr [rsi], ch
      6f: 72 65                        	jb	0xd6 <.symtab+0xd6>
      71: 6c                           	insb	byte ptr es:[rdi], dx
      72: 61                           	<unknown>
      73: 2e 70 6c                     	jo	0xe2 <.symtab+0xe2>
      76: 74 00                        	je	0x78 <.symtab+0x78>
      78: 2e 69 6e 69 74 00 2e 70      	imul	ebp, dword ptr cs:[rsi + 105], 1882062964
      80: 6c                           	insb	byte ptr es:[rdi], dx
      81: 74 2e                        	je	0xb1 <.symtab+0xb1>
      83: 67 6f                        	outsd	dx, dword ptr [esi]
      85: 74 00                        	je	0x87 <.symtab+0x87>
      87: 2e 74 65                     	je	0xef <.symtab+0xef>
      8a: 78 74                        	js	0x100 <.symtab+0x100>
      8c: 00 2e                        	add	byte ptr [rsi], ch
      8e: 66 69 6e 69 00 2e            	imul	bp, word ptr [rsi + 105], 11776
      94: 72 6f                        	jb	0x105 <.symtab+0x105>
      96: 64 61                        	<unknown>
      98: 74 61                        	je	0xfb <.symtab+0xfb>
      9a: 00 2e                        	add	byte ptr [rsi], ch
      9c: 65 68 5f 66 72 61            	push	1634887263
      a2: 6d                           	insd	dword ptr es:[rdi], dx
      a3: 65 5f                        	pop	rdi
      a5: 68 64 72 00 2e               	push	771781220
      aa: 65 68 5f 66 72 61            	push	1634887263
      b0: 6d                           	insd	dword ptr es:[rdi], dx
      b1: 65 00 2e                     	add	byte ptr gs:[rsi], ch
      b4: 69 6e 69 74 5f 61 72         	imul	ebp, dword ptr [rsi + 105], 1918984052
      bb: 72 61                        	jb	0x11e <.symtab+0x11e>
      bd: 79 00                        	jns	0xbf <.symtab+0xbf>
      bf: 2e 66 69 6e 69 5f 61         	imul	bp, word ptr cs:[rsi + 105], 24927
      c6: 72 72                        	jb	0x13a <.symtab+0x13a>
      c8: 61                           	<unknown>
      c9: 79 00                        	jns	0xcb <.symtab+0xcb>
      cb: 2e 64 61                     	<unknown>
      ce: 74 61                        	je	0x131 <.symtab+0x131>
      d0: 2e 72 65                     	jb	0x138 <.symtab+0x138>
      d3: 6c                           	insb	byte ptr es:[rdi], dx
      d4: 2e 72 6f                     	jb	0x146 <.symtab+0x146>
      d7: 00 2e                        	add	byte ptr [rsi], ch
      d9: 64 79 6e                     	jns	0x14a <.symtab+0x14a>
      dc: 61                           	<unknown>
      dd: 6d                           	insd	dword ptr es:[rdi], dx
      de: 69 63 00 2e 67 6f 74         	imul	esp, dword ptr [rbx], 1953457966
      e5: 2e 70 6c                     	jo	0x154 <.symtab+0x154>
      e8: 74 00                        	je	0xea <.symtab+0xea>
      ea: 2e 64 61                     	<unknown>
      ed: 74 61                        	je	0x150 <.symtab+0x150>
      ef: 00 2e                        	add	byte ptr [rsi], ch
      f1: 62                           	<unknown>
      f2: 73 73                        	jae	0x167 <.symtab+0x167>
      f4: 00 2e                        	add	byte ptr [rsi], ch
      f6: 63 6f 6d                     	movsxd	ebp, dword ptr [rdi + 109]
      f9: 6d                           	insd	dword ptr es:[rdi], dx
      fa: 65 6e                        	outsb	dx, byte ptr gs:[rsi]
      fc: 74 00                        	je	0xfe <.symtab+0xfe>
      fe: 2e 64 65 62 75 67 5f 61      	<unknown>
     106: 72 61                        	jb	0x169 <.symtab+0x169>
     108: 6e                           	outsb	dx, byte ptr [rsi]
     109: 67 65 73 00                  	jae	0x10d <.symtab+0x10d>
     10d: 2e 64 65 62 75 67 5f 69      	<unknown>
     115: 6e                           	outsb	dx, byte ptr [rsi]
     116: 66 6f                        	outsw	dx, word ptr [rsi]
     118: 00 2e                        	add	byte ptr [rsi], ch
     11a: 64 65 62 75 67 5f 61         	<unknown>
     121: 62                           	<unknown>
     122: 62 72 65 76 00               	<unknown>
     127: 2e 64 65 62 75 67 5f 6c      	<unknown>
     12f: 69 6e 65 00 2e 64 65         	imul	ebp, dword ptr [rsi + 101], 1701064192
     136: 62 75 67 5f 73               	<unknown>
     13b: 74 72                        	je	0x1af <.symtab+0x1af>
     13d: 00 2e                        	add	byte ptr [rsi], ch
     13f: 64 65 62 75 67 5f 6c         	<unknown>
     146: 69 6e 65 5f 73 74 72         	imul	ebp, dword ptr [rsi + 101], 1920234335
     14d: 00 2e                        	add	byte ptr [rsi], ch
     14f: 64 65 62 75 67 5f 6c         	<unknown>
     156: 6f                           	outsd	dx, dword ptr [rsi]
     157: 63 6c 69 73                  	movsxd	ebp, dword ptr [rcx + 2*rbp + 115]
     15b: 74 73                        	je	0x1d0 <.symtab+0x1d0>
     15d: 00 2e                        	add	byte ptr [rsi], ch
     15f: 64 65 62 75 67 5f 72         	<unknown>
     166: 6e                           	outsb	dx, byte ptr [rsi]
     167: 67 6c                        	insb	byte ptr es:[edi], dx
     169: 69 73 74                     	<unknown>
     16c: 73 00                        	jae	0x16e <.symtab+0x16e>
