
/home/mhohsadze/CLionProjects/nn-backend/cmake-build-release/libnn_backend.so:	file format elf64-x86-64

Disassembly of section .note.gnu.build-id:

0000000000000238 <.note.gnu.build-id>:
     238: 04 00                        	add	al, 0
     23a: 00 00                        	add	byte ptr [rax], al
     23c: 14 00                        	adc	al, 0
     23e: 00 00                        	add	byte ptr [rax], al
     240: 03 00                        	add	eax, dword ptr [rax]
     242: 00 00                        	add	byte ptr [rax], al
     244: 47 4e                        	<unknown>
     246: 55                           	push	rbp
     247: 00 d2                        	add	dl, dl
     249: 03 25 0b f0 0a 3c            	add	esp, dword ptr [rip + 1007349771] # 0x3c0af25a <completed.0+0x3c0a804a>
     24f: 26 5b                        	pop	rbx
     251: 0d 1d 39 57 23               	or	eax, 592918813
     256: 80 a6 d1 1f 7e 9e            	<unknown>

Disassembly of section .gnu.hash:

0000000000000260 <.gnu.hash>:
     260: 11 00                        	adc	dword ptr [rax], eax
     262: 00 00                        	add	byte ptr [rax], al
     264: 38 00                        	cmp	byte ptr [rax], al
     266: 00 00                        	add	byte ptr [rax], al
     268: 02 00                        	add	al, byte ptr [rax]
     26a: 00 00                        	add	byte ptr [rax], al
     26c: 07                           	<unknown>
     26d: 00 00                        	add	byte ptr [rax], al
     26f: 00 73 04                     	add	byte ptr [rbx + 4], dh
     272: 21 40 2d                     	and	dword ptr [rax + 45], eax
     275: 03 8d 19 80 09 e1            	add	ecx, dword ptr [rbp - 519471079]
     27b: 48 44                        	<unknown>
     27d: 10 2a                        	adc	byte ptr [rdx], ch
     27f: 04 38                        	add	al, 56
     281: 00 00                        	add	byte ptr [rax], al
     283: 00 3b                        	add	byte ptr [rbx], bh
     285: 00 00                        	add	byte ptr [rax], al
     287: 00 3c 00                     	add	byte ptr [rax + rax], bh
     28a: 00 00                        	add	byte ptr [rax], al
     28c: 3d 00 00 00 00               	cmp	eax, 0
     291: 00 00                        	add	byte ptr [rax], al
     293: 00 3e                        	add	byte ptr [rsi], bh
     295: 00 00                        	add	byte ptr [rax], al
     297: 00 00                        	add	byte ptr [rax], al
     299: 00 00                        	add	byte ptr [rax], al
     29b: 00 3f                        	add	byte ptr [rdi], bh
     29d: 00 00                        	add	byte ptr [rax], al
     29f: 00 42 00                     	add	byte ptr [rdx], al
     2a2: 00 00                        	add	byte ptr [rax], al
     2a4: 43 00 00                     	add	byte ptr [r8], al
     2a7: 00 44 00 00                  	add	byte ptr [rax + rax], al
     2ab: 00 45 00                     	add	byte ptr [rbp], al
     2ae: 00 00                        	add	byte ptr [rax], al
     2b0: 48 00 00                     	add	byte ptr [rax], al
     2b3: 00 4a 00                     	add	byte ptr [rdx], cl
     2b6: 00 00                        	add	byte ptr [rax], al
     2b8: 00 00                        	add	byte ptr [rax], al
     2ba: 00 00                        	add	byte ptr [rax], al
     2bc: 4b 00 00                     	add	byte ptr [r8], al
     2bf: 00 4c 00 00                  	add	byte ptr [rax + rax], cl
     2c3: 00 50 7d                     	add	byte ptr [rax + 125], dl
     2c6: 36 95                        	xchg	eax, ebp
     2c8: c6 f9                        	<unknown>
     2ca: 7e 37                        	jle	0x303 <.gnu.hash+0xa3>
     2cc: e3 0a                        	jrcxz	0x2d8 <.gnu.hash+0x78>
     2ce: 7b 31                        	jnp	0x301 <.gnu.hash+0xa1>
     2d0: bd 80 7c 7a 29               	mov	ebp, 695893120
     2d5: 05 be d0 25 88               	add	eax, 2284179646
     2da: d5                           	<unknown>
     2db: 4c 23 71 51                  	and	r14, qword ptr [rcx + 81]
     2df: a8 5a                        	test	al, 90
     2e1: a4                           	movsb	byte ptr es:[rdi], byte ptr [rsi]
     2e2: 26 7a d6                     	jp	0x2bb <.gnu.hash+0x5b>
     2e5: c5 71 b3                     	<unknown>
     2e8: 29 99 d5 4c 21 1c            	sub	dword ptr [rcx + 471944405], ebx
     2ee: 22 76 15                     	and	dh, byte ptr [rsi + 21]
     2f1: 4f 79 e6                     	jns	0x2da <.gnu.hash+0x7a>
     2f4: 29 b8 27 35 6c b3            	sub	dword ptr [rax - 1284754137], edi
     2fa: 1a 6a e6                     	sbb	ch, byte ptr [rdx - 26]
     2fd: fa                           	cli
     2fe: 34 d2                        	xor	al, -46
     300: 57                           	push	rdi
     301: 8b d4                        	mov	edx, esp
     303: db b6 39 f6 df 71            	<unknown>
     309: 8f e5 9c                     	<unknown>
     30c: 91                           	xchg	eax, ecx
     30d: 91                           	xchg	eax, ecx
     30e: d6                           	<unknown>
     30f: be 87 5d a9 3d               	mov	esi, 1034509703
     314: 80 42 23 08                  	add	byte ptr [rdx + 35], 8
     318: 01 82                        	<unknown>
     31a: af                           	scasd	eax, dword ptr es:[rdi]
     31b: ed                           	in	eax, dx

Disassembly of section .dynsym:

0000000000000320 <.dynsym>:
		...
     338: 72 03                        	jb	0x33d <.dynsym+0x1d>
     33a: 00 00                        	add	byte ptr [rax], al
     33c: 12 00                        	adc	al, byte ptr [rax]
		...
     34e: 00 00                        	add	byte ptr [rax], al
     350: bd 00 00 00 12               	mov	ebp, 301989888
		...
     365: 00 00                        	add	byte ptr [rax], al
     367: 00 6b 02                     	add	byte ptr [rbx + 2], ch
     36a: 00 00                        	add	byte ptr [rax], al
     36c: 12 00                        	adc	al, byte ptr [rax]
		...
     37e: 00 00                        	add	byte ptr [rax], al
     380: f3 01 00                     	rep		add	dword ptr [rax], eax
     383: 00 12                        	add	byte ptr [rdx], dl
		...
     395: 00 00                        	add	byte ptr [rax], al
     397: 00 5b 02                     	add	byte ptr [rbx + 2], bl
     39a: 00 00                        	add	byte ptr [rax], al
     39c: 12 00                        	adc	al, byte ptr [rax]
		...
     3ae: 00 00                        	add	byte ptr [rax], al
     3b0: 10 00                        	adc	byte ptr [rax], al
     3b2: 00 00                        	add	byte ptr [rax], al
     3b4: 20 00                        	and	byte ptr [rax], al
		...
     3c6: 00 00                        	add	byte ptr [rax], al
     3c8: d5                           	<unknown>
     3c9: 02 00                        	add	al, byte ptr [rax]
     3cb: 00 12                        	add	byte ptr [rdx], dl
		...
     3dd: 00 00                        	add	byte ptr [rax], al
     3df: 00 e1                        	add	cl, ah
     3e1: 01 00                        	add	dword ptr [rax], eax
     3e3: 00 12                        	add	byte ptr [rdx], dl
		...
     3f5: 00 00                        	add	byte ptr [rax], al
     3f7: 00 0c 04                     	add	byte ptr [rsp + rax], cl
     3fa: 00 00                        	add	byte ptr [rax], al
     3fc: 12 00                        	adc	al, byte ptr [rax]
		...
     40e: 00 00                        	add	byte ptr [rax], al
     410: b7 03                        	mov	bh, 3
     412: 00 00                        	add	byte ptr [rax], al
     414: 12 00                        	adc	al, byte ptr [rax]
		...
     426: 00 00                        	add	byte ptr [rax], al
     428: db 02                        	fild	dword ptr [rdx]
     42a: 00 00                        	add	byte ptr [rax], al
     42c: 12 00                        	adc	al, byte ptr [rax]
		...
     43e: 00 00                        	add	byte ptr [rax], al
     440: 1d 05 00 00 12               	sbb	eax, 301989893
		...
     455: 00 00                        	add	byte ptr [rax], al
     457: 00 9f 01 00 00 12            	add	byte ptr [rdi + 301989889], bl
		...
     46d: 00 00                        	add	byte ptr [rax], al
     46f: 00 77 00                     	add	byte ptr [rdi], dh
     472: 00 00                        	add	byte ptr [rax], al
     474: 12 00                        	adc	al, byte ptr [rax]
		...
     486: 00 00                        	add	byte ptr [rax], al
     488: ce                           	<unknown>
     489: 02 00                        	add	al, byte ptr [rax]
     48b: 00 12                        	add	byte ptr [rdx], dl
		...
     49d: 00 00                        	add	byte ptr [rax], al
     49f: 00 a2 04 00 00 12            	add	byte ptr [rdx + 301989892], ah
		...
     4b5: 00 00                        	add	byte ptr [rax], al
     4b7: 00 e8                        	add	al, ch
     4b9: 00 00                        	add	byte ptr [rax], al
     4bb: 00 12                        	add	byte ptr [rdx], dl
		...
     4cd: 00 00                        	add	byte ptr [rax], al
     4cf: 00 3f                        	add	byte ptr [rdi], bh
     4d1: 02 00                        	add	al, byte ptr [rax]
     4d3: 00 12                        	add	byte ptr [rdx], dl
		...
     4e5: 00 00                        	add	byte ptr [rax], al
     4e7: 00 d1                        	add	cl, dl
     4e9: 04 00                        	add	al, 0
     4eb: 00 12                        	add	byte ptr [rdx], dl
		...
     4fd: 00 00                        	add	byte ptr [rax], al
     4ff: 00 fa                        	add	dl, bh
     501: 05 00 00 12 00               	add	eax, 1179648
		...
     516: 00 00                        	add	byte ptr [rax], al
     518: 4d 02 00                     	add	r8b, byte ptr [r8]
     51b: 00 12                        	add	byte ptr [rdx], dl
		...
     52d: 00 00                        	add	byte ptr [rax], al
     52f: 00 19                        	add	byte ptr [rcx], bl
     531: 02 00                        	add	al, byte ptr [rax]
     533: 00 12                        	add	byte ptr [rdx], dl
		...
     545: 00 00                        	add	byte ptr [rax], al
     547: 00 7e 00                     	add	byte ptr [rsi], bh
     54a: 00 00                        	add	byte ptr [rax], al
     54c: 12 00                        	adc	al, byte ptr [rax]
		...
     55e: 00 00                        	add	byte ptr [rax], al
     560: 45 03 00                     	add	r8d, dword ptr [r8]
     563: 00 12                        	add	byte ptr [rdx], dl
		...
     575: 00 00                        	add	byte ptr [rax], al
     577: 00 8d 05 00 00 12            	add	byte ptr [rbp + 301989893], cl
		...
     58d: 00 00                        	add	byte ptr [rax], al
     58f: 00 76 00                     	add	byte ptr [rsi], dh
     592: 00 00                        	add	byte ptr [rax], al
     594: 12 00                        	adc	al, byte ptr [rax]
		...
     5a6: 00 00                        	add	byte ptr [rax], al
     5a8: c8 02 00 00                  	enter	2, 0
     5ac: 12 00                        	adc	al, byte ptr [rax]
		...
     5be: 00 00                        	add	byte ptr [rax], al
     5c0: 74 05                        	je	0x5c7 <.dynsym+0x2a7>
     5c2: 00 00                        	add	byte ptr [rax], al
     5c4: 12 00                        	adc	al, byte ptr [rax]
		...
     5d6: 00 00                        	add	byte ptr [rax], al
     5d8: 01 00                        	add	dword ptr [rax], eax
     5da: 00 00                        	add	byte ptr [rax], al
     5dc: 20 00                        	and	byte ptr [rax], al
		...
     5ee: 00 00                        	add	byte ptr [rax], al
     5f0: 38 02                        	cmp	byte ptr [rdx], al
     5f2: 00 00                        	add	byte ptr [rax], al
     5f4: 12 00                        	adc	al, byte ptr [rax]
		...
     606: 00 00                        	add	byte ptr [rax], al
     608: 4b 04 00                     	add	al, 0
     60b: 00 12                        	add	byte ptr [rdx], dl
		...
     61d: 00 00                        	add	byte ptr [rax], al
     61f: 00 1d 01 00 00 12            	add	byte ptr [rip + 301989889], bl # 0x12000626 <completed.0+0x11ff9416>
		...
     635: 00 00                        	add	byte ptr [rax], al
     637: 00 84 00 00 00 12 00         	add	byte ptr [rax + rax + 1179648], al
		...
     64e: 00 00                        	add	byte ptr [rax], al
     650: 2c 02                        	sub	al, 2
     652: 00 00                        	add	byte ptr [rax], al
     654: 12 00                        	adc	al, byte ptr [rax]
		...
     666: 00 00                        	add	byte ptr [rax], al
     668: 6f                           	outsd	dx, dword ptr [rsi]
     669: 01 00                        	add	dword ptr [rax], eax
     66b: 00 12                        	add	byte ptr [rdx], dl
		...
     67d: 00 00                        	add	byte ptr [rax], al
     67f: 00 d9                        	add	cl, bl
     681: 00 00                        	add	byte ptr [rax], al
     683: 00 12                        	add	byte ptr [rdx], dl
		...
     695: 00 00                        	add	byte ptr [rax], al
     697: 00 41 01                     	add	byte ptr [rcx + 1], al
     69a: 00 00                        	add	byte ptr [rax], al
     69c: 12 00                        	adc	al, byte ptr [rax]
		...
     6ae: 00 00                        	add	byte ptr [rax], al
     6b0: c2 02 00                     	ret	2
     6b3: 00 12                        	add	byte ptr [rdx], dl
		...
     6c5: 00 00                        	add	byte ptr [rax], al
     6c7: 00 80 04 00 00 12            	add	byte ptr [rax + 301989892], al
		...
     6dd: 00 00                        	add	byte ptr [rax], al
     6df: 00 5f 05                     	add	byte ptr [rdi + 5], bl
     6e2: 00 00                        	add	byte ptr [rax], al
     6e4: 12 00                        	adc	al, byte ptr [rax]
		...
     6f6: 00 00                        	add	byte ptr [rax], al
     6f8: b3 01                        	mov	bl, 1
     6fa: 00 00                        	add	byte ptr [rax], al
     6fc: 12 00                        	adc	al, byte ptr [rax]
		...
     70e: 00 00                        	add	byte ptr [rax], al
     710: 0b 02                        	or	eax, dword ptr [rdx]
     712: 00 00                        	add	byte ptr [rax], al
     714: 12 00                        	adc	al, byte ptr [rax]
		...
     726: 00 00                        	add	byte ptr [rax], al
     728: 88 01                        	mov	byte ptr [rcx], al
     72a: 00 00                        	add	byte ptr [rax], al
     72c: 12 00                        	adc	al, byte ptr [rax]
		...
     73e: 00 00                        	add	byte ptr [rax], al
     740: bc 02 00 00 12               	mov	esp, 301989890
		...
     755: 00 00                        	add	byte ptr [rax], al
     757: 00 e3                        	add	bl, ah
     759: 05 00 00 12 00               	add	eax, 1179648
		...
     76e: 00 00                        	add	byte ptr [rax], al
     770: 4c 03 00                     	add	r8, qword ptr [rax]
     773: 00 12                        	add	byte ptr [rdx], dl
		...
     785: 00 00                        	add	byte ptr [rax], al
     787: 00 70 02                     	add	byte ptr [rax + 2], dh
     78a: 00 00                        	add	byte ptr [rax], al
     78c: 12 00                        	adc	al, byte ptr [rax]
		...
     79e: 00 00                        	add	byte ptr [rax], al
     7a0: 58                           	pop	rax
     7a1: 01 00                        	add	dword ptr [rax], eax
     7a3: 00 12                        	add	byte ptr [rdx], dl
		...
     7b5: 00 00                        	add	byte ptr [rax], al
     7b7: 00 f4                        	add	ah, dh
     7b9: 02 00                        	add	al, byte ptr [rax]
     7bb: 00 12                        	add	byte ptr [rdx], dl
		...
     7cd: 00 00                        	add	byte ptr [rax], al
     7cf: 00 cc                        	add	ah, cl
     7d1: 01 00                        	add	dword ptr [rax], eax
     7d3: 00 12                        	add	byte ptr [rdx], dl
		...
     7e5: 00 00                        	add	byte ptr [rax], al
     7e7: 00 22                        	add	byte ptr [rdx], ah
     7e9: 03 00                        	add	eax, dword ptr [rax]
     7eb: 00 12                        	add	byte ptr [rdx], dl
		...
     7fd: 00 00                        	add	byte ptr [rax], al
     7ff: 00 2c 00                     	add	byte ptr [rax + rax], ch
     802: 00 00                        	add	byte ptr [rax], al
     804: 20 00                        	and	byte ptr [rax], al
		...
     816: 00 00                        	add	byte ptr [rax], al
     818: 2e 01 00                     	add	dword ptr cs:[rax], eax
     81b: 00 12                        	add	byte ptr [rdx], dl
		...
     82d: 00 00                        	add	byte ptr [rax], al
     82f: 00 46 00                     	add	byte ptr [rsi], al
     832: 00 00                        	add	byte ptr [rax], al
     834: 22 00                        	and	al, byte ptr [rax]
		...
     846: 00 00                        	add	byte ptr [rax], al
     848: 6f                           	outsd	dx, dword ptr [rsi]
     849: 00 00                        	add	byte ptr [rax], al
     84b: 00 11                        	add	byte ptr [rcx], dl
		...
     85d: 00 00                        	add	byte ptr [rax], al
     85f: 00 a3 05 00 00 12            	add	byte ptr [rbx + 301989893], ah
     865: 00 0c 00                     	add	byte ptr [rax + rax], cl
     868: 90                           	nop
     869: 4b 00 00                     	add	byte ptr [r8], al
     86c: 00 00                        	add	byte ptr [rax], al
     86e: 00 00                        	add	byte ptr [rax], al
     870: 2c 03                        	sub	al, 3
     872: 00 00                        	add	byte ptr [rax], al
     874: 00 00                        	add	byte ptr [rax], al
     876: 00 00                        	add	byte ptr [rax], al
     878: 35 04 00 00 12               	xor	eax, 301989892
     87d: 00 0c 00                     	add	byte ptr [rax + rax], cl
     880: e0 44                        	loopne	0x8c6 <.dynsym+0x5a6>
     882: 00 00                        	add	byte ptr [rax], al
     884: 00 00                        	add	byte ptr [rax], al
     886: 00 00                        	add	byte ptr [rax], al
     888: 3b 00                        	cmp	eax, dword ptr [rax]
     88a: 00 00                        	add	byte ptr [rax], al
     88c: 00 00                        	add	byte ptr [rax], al
     88e: 00 00                        	add	byte ptr [rax], al
     890: dc 03                        	fadd	qword ptr [rbx]
     892: 00 00                        	add	byte ptr [rax], al
     894: 12 00                        	adc	al, byte ptr [rax]
     896: 0c 00                        	or	al, 0
     898: b0 43                        	mov	al, 67
     89a: 00 00                        	add	byte ptr [rax], al
     89c: 00 00                        	add	byte ptr [rax], al
     89e: 00 00                        	add	byte ptr [rax], al
     8a0: 96                           	xchg	eax, esi
     8a1: 00 00                        	add	byte ptr [rax], al
     8a3: 00 00                        	add	byte ptr [rax], al
     8a5: 00 00                        	add	byte ptr [rax], al
     8a7: 00 f3                        	add	bl, dh
     8a9: 03 00                        	add	eax, dword ptr [rax]
     8ab: 00 12                        	add	byte ptr [rdx], dl
     8ad: 00 0c 00                     	add	byte ptr [rax + rax], cl
     8b0: 50                           	push	rax
     8b1: 44 00 00                     	add	byte ptr [rax], r8b
     8b4: 00 00                        	add	byte ptr [rax], al
     8b6: 00 00                        	add	byte ptr [rax], al
     8b8: 89 00                        	mov	dword ptr [rax], eax
     8ba: 00 00                        	add	byte ptr [rax], al
     8bc: 00 00                        	add	byte ptr [rax], al
     8be: 00 00                        	add	byte ptr [rax], al
     8c0: 8b 00                        	mov	eax, dword ptr [rax]
     8c2: 00 00                        	add	byte ptr [rax], al
     8c4: 12 00                        	adc	al, byte ptr [rax]
     8c6: 0c 00                        	or	al, 0
     8c8: 80 47 00 00                  	add	byte ptr [rdi], 0
     8cc: 00 00                        	add	byte ptr [rax], al
     8ce: 00 00                        	add	byte ptr [rax], al
     8d0: 23 00                        	and	eax, dword ptr [rax]
     8d2: 00 00                        	add	byte ptr [rax], al
     8d4: 00 00                        	add	byte ptr [rax], al
     8d6: 00 00                        	add	byte ptr [rax], al
     8d8: 75 02                        	jne	0x8dc <.dynsym+0x5bc>
     8da: 00 00                        	add	byte ptr [rax], al
     8dc: 12 00                        	adc	al, byte ptr [rax]
     8de: 0c 00                        	or	al, 0
     8e0: b0 31                        	mov	al, 49
     8e2: 00 00                        	add	byte ptr [rax], al
     8e4: 00 00                        	add	byte ptr [rax], al
     8e6: 00 00                        	add	byte ptr [rax], al
     8e8: a9 01 00 00 00               	test	eax, 1
     8ed: 00 00                        	add	byte ptr [rax], al
     8ef: 00 ab 02 00 00 12            	add	byte ptr [rbx + 301989890], ch
     8f5: 00 0c 00                     	add	byte ptr [rax + rax], cl
     8f8: 70 3e                        	jo	0x938 <.dynsym+0x618>
     8fa: 00 00                        	add	byte ptr [rax], al
     8fc: 00 00                        	add	byte ptr [rax], al
     8fe: 00 00                        	add	byte ptr [rax], al
     900: a3 00 00 00 00 00 00 00 cd   	movabs	dword ptr [-3674937295934324736], eax
     909: 05 00 00 12 00               	add	eax, 1179648
     90e: 0c 00                        	or	al, 0
     910: c0 4e 00 00                  	ror	byte ptr [rsi], 0
     914: 00 00                        	add	byte ptr [rax], al
     916: 00 00                        	add	byte ptr [rax], al
     918: ef                           	out	dx, eax
     919: 00 00                        	add	byte ptr [rax], al
     91b: 00 00                        	add	byte ptr [rax], al
     91d: 00 00                        	add	byte ptr [rax], al
     91f: 00 e7                        	add	bh, ah
     921: 04 00                        	add	al, 0
     923: 00 12                        	add	byte ptr [rdx], dl
     925: 00 0c 00                     	add	byte ptr [rax + rax], cl
     928: b0 46                        	mov	al, 70
     92a: 00 00                        	add	byte ptr [rax], al
     92c: 00 00                        	add	byte ptr [rax], al
     92e: 00 00                        	add	byte ptr [rax], al
     930: 5f                           	pop	rdi
     931: 00 00                        	add	byte ptr [rax], al
     933: 00 00                        	add	byte ptr [rax], al
     935: 00 00                        	add	byte ptr [rax], al
     937: 00 90 02 00 00 12            	add	byte ptr [rax + 301989890], dl
     93d: 00 0c 00                     	add	byte ptr [rax + rax], cl
     940: 60                           	<unknown>
     941: 33 00                        	xor	eax, dword ptr [rax]
     943: 00 00                        	add	byte ptr [rax], al
     945: 00 00                        	add	byte ptr [rax], al
     947: 00 02                        	add	byte ptr [rdx], al
     949: 0b 00                        	or	eax, dword ptr [rax]
     94b: 00 00                        	add	byte ptr [rax], al
     94d: 00 00                        	add	byte ptr [rax], al
     94f: 00 05 05 00 00 12            	add	byte ptr [rip + 301989893], al # 0x1200095a <completed.0+0x11ff974a>
     955: 00 0c 00                     	add	byte ptr [rax + rax], cl
     958: b0 47                        	mov	al, 71
     95a: 00 00                        	add	byte ptr [rax], al
     95c: 00 00                        	add	byte ptr [rax], al
     95e: 00 00                        	add	byte ptr [rax], al
     960: a2 00 00 00 00 00 00 00 fb   	movabs	byte ptr [-360287970189639680], al
     969: 02 00                        	add	al, byte ptr [rax]
     96b: 00 12                        	add	byte ptr [rdx], dl
     96d: 00 0c 00                     	add	byte ptr [rax + rax], cl
     970: 90                           	nop
     971: 3f                           	<unknown>
     972: 00 00                        	add	byte ptr [rax], al
     974: 00 00                        	add	byte ptr [rax], al
     976: 00 00                        	add	byte ptr [rax], al
     978: 05 00 00 00 00               	add	eax, 0
     97d: 00 00                        	add	byte ptr [rax], al
     97f: 00 06                        	add	byte ptr [rsi], al
     981: 01 00                        	add	dword ptr [rax], eax
     983: 00 12                        	add	byte ptr [rdx], dl
     985: 00 0c 00                     	add	byte ptr [rax + rax], cl
     988: 20 45 00                     	and	byte ptr [rbp], al
     98b: 00 00                        	add	byte ptr [rax], al
     98d: 00 00                        	add	byte ptr [rax], al
     98f: 00 41 00                     	add	byte ptr [rcx], al
     992: 00 00                        	add	byte ptr [rax], al
     994: 00 00                        	add	byte ptr [rax], al
     996: 00 00                        	add	byte ptr [rax], al
     998: 55                           	push	rbp
     999: 00 00                        	add	byte ptr [rax], al
     99b: 00 12                        	add	byte ptr [rdx], dl
     99d: 00 0c 00                     	add	byte ptr [rax + rax], cl
     9a0: 60                           	<unknown>
     9a1: 24 00                        	and	al, 0
     9a3: 00 00                        	add	byte ptr [rax], al
     9a5: 00 00                        	add	byte ptr [rax], al
     9a7: 00 4f 0d                     	add	byte ptr [rdi + 13], cl
     9aa: 00 00                        	add	byte ptr [rax], al
     9ac: 00 00                        	add	byte ptr [rax], al
     9ae: 00 00                        	add	byte ptr [rax], al
     9b0: 6f                           	outsd	dx, dword ptr [rsi]
     9b1: 04 00                        	add	al, 0
     9b3: 00 12                        	add	byte ptr [rdx], dl
     9b5: 00 0c 00                     	add	byte ptr [rax + rax], cl
     9b8: 70 45                        	jo	0x9ff <.dynsym+0x6df>
     9ba: 00 00                        	add	byte ptr [rax], al
     9bc: 00 00                        	add	byte ptr [rax], al
     9be: 00 00                        	add	byte ptr [rax], al
     9c0: d7                           	xlatb
     9c1: 00 00                        	add	byte ptr [rax], al
     9c3: 00 00                        	add	byte ptr [rax], al
     9c5: 00 00                        	add	byte ptr [rax], al
     9c7: 00 33                        	add	byte ptr [rbx], dh
     9c9: 05 00 00 12 00               	add	eax, 1179648
     9ce: 0c 00                        	or	al, 0
     9d0: 60                           	<unknown>
     9d1: 48 00 00                     	add	byte ptr [rax], al
     9d4: 00 00                        	add	byte ptr [rax], al
     9d6: 00 00                        	add	byte ptr [rax], al
     9d8: 26 03 00                     	add	eax, dword ptr es:[rax]
     9db: 00 00                        	add	byte ptr [rax], al
     9dd: 00 00                        	add	byte ptr [rax], al
     9df: 00 8f 04 00 00 12            	add	byte ptr [rdi + 301989892], cl
     9e5: 00 0c 00                     	add	byte ptr [rax + rax], cl
     9e8: 50                           	push	rax
     9e9: 46 00 00                     	add	byte ptr [rax], r8b
     9ec: 00 00                        	add	byte ptr [rax], al
     9ee: 00 00                        	add	byte ptr [rax], al
     9f0: 11 00                        	adc	dword ptr [rax], eax
     9f2: 00 00                        	add	byte ptr [rax], al
     9f4: 00 00                        	add	byte ptr [rax], al
     9f6: 00 00                        	add	byte ptr [rax], al
     9f8: e2 02                        	loop	0x9fc <.dynsym+0x6dc>
     9fa: 00 00                        	add	byte ptr [rax], al
     9fc: 12 00                        	adc	al, byte ptr [rax]
     9fe: 0c 00                        	or	al, 0
     a00: 20 3f                        	and	byte ptr [rdi], bh
     a02: 00 00                        	add	byte ptr [rax], al
     a04: 00 00                        	add	byte ptr [rax], al
     a06: 00 00                        	add	byte ptr [rax], al
     a08: 70 00                        	jo	0xa0a <.dynsym+0x6ea>
     a0a: 00 00                        	add	byte ptr [rax], al
     a0c: 00 00                        	add	byte ptr [rax], al
     a0e: 00 00                        	add	byte ptr [rax], al
     a10: 08 03                        	or	byte ptr [rbx], al
     a12: 00 00                        	add	byte ptr [rax], al
     a14: 12 00                        	adc	al, byte ptr [rax]
     a16: 0c 00                        	or	al, 0
     a18: a0 3f 00 00 00 00 00 00 f0   	movabs	al, byte ptr [-1152921504606846913]
     a21: 01 00                        	add	dword ptr [rax], eax
     a23: 00 00                        	add	byte ptr [rax], al
     a25: 00 00                        	add	byte ptr [rax], al
     a27: 00 5d 03                     	add	byte ptr [rbp + 3], bl
     a2a: 00 00                        	add	byte ptr [rax], al
     a2c: 12 00                        	adc	al, byte ptr [rax]
     a2e: 0c 00                        	or	al, 0
     a30: 90                           	nop
     a31: 41 00 00                     	add	byte ptr [r8], al
     a34: 00 00                        	add	byte ptr [rax], al
     a36: 00 00                        	add	byte ptr [rax], al
     a38: 96                           	xchg	eax, esi
     a39: 00 00                        	add	byte ptr [rax], al
     a3b: 00 00                        	add	byte ptr [rax], al
     a3d: 00 00                        	add	byte ptr [rax], al
     a3f: 00 8d 03 00 00 12            	add	byte ptr [rbp + 301989891], cl
     a45: 00 0c 00                     	add	byte ptr [rax + rax], cl
     a48: 30 42 00                     	xor	byte ptr [rdx], al
     a4b: 00 00                        	add	byte ptr [rax], al
     a4d: 00 00                        	add	byte ptr [rax], al
     a4f: 00 72 01                     	add	byte ptr [rdx + 1], dh
     a52: 00 00                        	add	byte ptr [rax], al
     a54: 00 00                        	add	byte ptr [rax], al
     a56: 00 00                        	add	byte ptr [rax], al
     a58: b3 04                        	mov	bl, 4
     a5a: 00 00                        	add	byte ptr [rax], al
     a5c: 12 00                        	adc	al, byte ptr [rax]
     a5e: 0c 00                        	or	al, 0
     a60: 70 46                        	jo	0xaa8 <vkUpdateDescriptorSets+0xaa8>
     a62: 00 00                        	add	byte ptr [rax], al
     a64: 00 00                        	add	byte ptr [rax], al
     a66: 00 00                        	add	byte ptr [rax], al
     a68: 35 00 00 00 00               	xor	eax, 0
     a6d: 00 00                        	add	byte ptr [rax], al
     a6f: 00                           	<unknown>

Disassembly of section .dynstr:

0000000000000a70 <.dynstr>:
     a70: 00 5f 5f                     	add	byte ptr [rdi + 95], bl
     a73: 67 6d                        	insd	dword ptr es:[edi], dx
     a75: 6f                           	outsd	dx, dword ptr [rsi]
     a76: 6e                           	outsb	dx, byte ptr [rsi]
     a77: 5f                           	pop	rdi
     a78: 73 74                        	jae	0xaee <.dynstr+0x7e>
     a7a: 61                           	<unknown>
     a7b: 72 74                        	jb	0xaf1 <.dynstr+0x81>
     a7d: 5f                           	pop	rdi
     a7e: 5f                           	pop	rdi
     a7f: 00 5f 49                     	add	byte ptr [rdi + 73], bl
     a82: 54                           	push	rsp
     a83: 4d 5f                        	pop	r15
     a85: 64 65 72 65                  	jb	0xaee <.dynstr+0x7e>
     a89: 67 69 73 74 65 72 54 4d      	imul	esi, dword ptr [ebx + 116], 1297379941
     a91: 43 6c                        	insb	byte ptr es:[rdi], dx
     a93: 6f                           	outsd	dx, dword ptr [rsi]
     a94: 6e                           	outsb	dx, byte ptr [rsi]
     a95: 65 54                        	push	rsp
     a97: 61                           	<unknown>
     a98: 62                           	<unknown>
     a99: 6c                           	insb	byte ptr es:[rdi], dx
     a9a: 65 00 5f 49                  	add	byte ptr gs:[rdi + 73], bl
     a9e: 54                           	push	rsp
     a9f: 4d 5f                        	pop	r15
     aa1: 72 65                        	jb	0xb08 <.dynstr+0x98>
     aa3: 67 69 73 74 65 72 54 4d      	imul	esi, dword ptr [ebx + 116], 1297379941
     aab: 43 6c                        	insb	byte ptr es:[rdi], dx
     aad: 6f                           	outsd	dx, dword ptr [rsi]
     aae: 6e                           	outsb	dx, byte ptr [rsi]
     aaf: 65 54                        	push	rsp
     ab1: 61                           	<unknown>
     ab2: 62                           	<unknown>
     ab3: 6c                           	insb	byte ptr es:[rdi], dx
     ab4: 65 00 5f 5f                  	add	byte ptr gs:[rdi + 95], bl
     ab8: 63 78 61                     	movsxd	edi, dword ptr [rax + 97]
     abb: 5f                           	pop	rdi
     abc: 66 69 6e 61 6c 69            	imul	bp, word ptr [rsi + 97], 26988
     ac2: 7a 65                        	jp	0xb29 <.dynstr+0xb9>
     ac4: 00 6e 6e                     	add	byte ptr [rsi + 110], ch
     ac7: 52                           	push	rdx
     ac8: 75 6e                        	jne	0xb38 <.dynstr+0xc8>
     aca: 54                           	push	rsp
     acb: 77 6f                        	ja	0xb3c <.dynstr+0xcc>
     acd: 4d 61                        	<unknown>
     acf: 74 72                        	je	0xb43 <.dynstr+0xd3>
     ad1: 69 63 65 73 41 6e 64         	imul	esp, dword ptr [rbx + 101], 1684947315
     ad8: 4f 75 74                     	jne	0xb4f <.dynstr+0xdf>
     adb: 70 75                        	jo	0xb52 <.dynstr+0xe2>
     add: 74 00                        	je	0xadf <.dynstr+0x6f>
     adf: 73 74                        	jae	0xb55 <.dynstr+0xe5>
     ae1: 64 65 72 72                  	jb	0xb57 <.dynstr+0xe7>
     ae5: 00 66 70                     	add	byte ptr [rsi + 112], ah
     ae8: 72 69                        	jb	0xb53 <.dynstr+0xe3>
     aea: 6e                           	outsb	dx, byte ptr [rsi]
     aeb: 74 66                        	je	0xb53 <.dynstr+0xe3>
     aed: 00 66 70                     	add	byte ptr [rsi + 112], ah
     af0: 75 74                        	jne	0xb66 <.dynstr+0xf6>
     af2: 63 00                        	movsxd	eax, dword ptr [rax]
     af4: 6d                           	insd	dword ptr es:[rdi], dx
     af5: 61                           	<unknown>
     af6: 6c                           	insb	byte ptr es:[rdi], dx
     af7: 6c                           	insb	byte ptr es:[rdi], dx
     af8: 6f                           	outsd	dx, dword ptr [rsi]
     af9: 63 00                        	movsxd	eax, dword ptr [rax]
     afb: 6e                           	outsb	dx, byte ptr [rsi]
     afc: 6e                           	outsb	dx, byte ptr [rsi]
     afd: 43 72 65                     	jb	0xb65 <.dynstr+0xf5>
     b00: 61                           	<unknown>
     b01: 74 65                        	je	0xb68 <.dynstr+0xf8>
     b03: 56                           	push	rsi
     b04: 6b 44 65 73 63               	imul	eax, dword ptr [rbp + 2*riz + 115], 99
     b09: 72 69                        	jb	0xb74 <.dynstr+0x104>
     b0b: 70 74                        	jo	0xb81 <.dynstr+0x111>
     b0d: 6f                           	outsd	dx, dword ptr [rsi]
     b0e: 72 53                        	jb	0xb63 <.dynstr+0xf3>
     b10: 65 74 4c                     	je	0xb5f <.dynstr+0xef>
     b13: 61                           	<unknown>
     b14: 79 6f                        	jns	0xb85 <.dynstr+0x115>
     b16: 75 74                        	jne	0xb8c <.dynstr+0x11c>
     b18: 42 69 6e 64 69 6e 67 53      	imul	ebp, dword ptr [rsi + 100], 1399287401
     b20: 74 6f                        	je	0xb91 <.dynstr+0x121>
     b22: 72 61                        	jb	0xb85 <.dynstr+0x115>
     b24: 67 65 42 75 66               	jne	0xb8f <.dynstr+0x11f>
     b29: 66 65 72 00                  	jb	0xb2d <.dynstr+0xbd>
     b2d: 76 6b                        	jbe	0xb9a <.dynstr+0x12a>
     b2f: 43 72 65                     	jb	0xb97 <.dynstr+0x127>
     b32: 61                           	<unknown>
     b33: 74 65                        	je	0xb9a <.dynstr+0x12a>
     b35: 44 65                        	gs
     b37: 73 63                        	jae	0xb9c <.dynstr+0x12c>
     b39: 72 69                        	jb	0xba4 <.dynstr+0x134>
     b3b: 70 74                        	jo	0xbb1 <.dynstr+0x141>
     b3d: 6f                           	outsd	dx, dword ptr [rsi]
     b3e: 72 53                        	jb	0xb93 <.dynstr+0x123>
     b40: 65 74 4c                     	je	0xb8f <.dynstr+0x11f>
     b43: 61                           	<unknown>
     b44: 79 6f                        	jns	0xbb5 <.dynstr+0x145>
     b46: 75 74                        	jne	0xbbc <.dynstr+0x14c>
     b48: 00 76 6b                     	add	byte ptr [rsi + 107], dh
     b4b: 43 72 65                     	jb	0xbb3 <.dynstr+0x143>
     b4e: 61                           	<unknown>
     b4f: 74 65                        	je	0xbb6 <.dynstr+0x146>
     b51: 42 75 66                     	jne	0xbba <.dynstr+0x14a>
     b54: 66 65 72 00                  	jb	0xb58 <.dynstr+0xe8>
     b58: 76 6b                        	jbe	0xbc5 <.dynstr+0x155>
     b5a: 47 65                        	gs
     b5c: 74 42                        	je	0xba0 <.dynstr+0x130>
     b5e: 75 66                        	jne	0xbc6 <.dynstr+0x156>
     b60: 66 65 72 4d                  	jb	0xbb1 <.dynstr+0x141>
     b64: 65 6d                        	insd	dword ptr es:[rdi], dx
     b66: 6f                           	outsd	dx, dword ptr [rsi]
     b67: 72 79                        	jb	0xbe2 <.dynstr+0x172>
     b69: 52                           	push	rdx
     b6a: 65 71 75                     	jno	0xbe2 <.dynstr+0x172>
     b6d: 69 72 65 6d 65 6e 74         	imul	esi, dword ptr [rdx + 101], 1953391981
     b74: 73 00                        	jae	0xb76 <.dynstr+0x106>
     b76: 6e                           	outsb	dx, byte ptr [rsi]
     b77: 6e                           	outsb	dx, byte ptr [rsi]
     b78: 46 69 6e 64 4d 65 6d 6f      	imul	r13d, dword ptr [rsi + 100], 1869440333
     b80: 72 79                        	jb	0xbfb <.dynstr+0x18b>
     b82: 50                           	push	rax
     b83: 72 6f                        	jb	0xbf4 <.dynstr+0x184>
     b85: 70 65                        	jo	0xbec <.dynstr+0x17c>
     b87: 72 74                        	jb	0xbfd <.dynstr+0x18d>
     b89: 69 65 73 00 76 6b 41         	imul	esp, dword ptr [rbp + 115], 1097561600
     b90: 6c                           	insb	byte ptr es:[rdi], dx
     b91: 6c                           	insb	byte ptr es:[rdi], dx
     b92: 6f                           	outsd	dx, dword ptr [rsi]
     b93: 63 61 74                     	movsxd	esp, dword ptr [rcx + 116]
     b96: 65 4d 65                     	gs
     b99: 6d                           	insd	dword ptr es:[rdi], dx
     b9a: 6f                           	outsd	dx, dword ptr [rsi]
     b9b: 72 79                        	jb	0xc16 <.dynstr+0x1a6>
     b9d: 00 76 6b                     	add	byte ptr [rsi + 107], dh
     ba0: 42 69 6e 64 42 75 66 66      	imul	ebp, dword ptr [rsi + 100], 1717990722
     ba8: 65 72 4d                     	jb	0xbf8 <.dynstr+0x188>
     bab: 65 6d                        	insd	dword ptr es:[rdi], dx
     bad: 6f                           	outsd	dx, dword ptr [rsi]
     bae: 72 79                        	jb	0xc29 <.dynstr+0x1b9>
     bb0: 00 76 6b                     	add	byte ptr [rsi + 107], dh
     bb3: 43 72 65                     	jb	0xc1b <.dynstr+0x1ab>
     bb6: 61                           	<unknown>
     bb7: 74 65                        	je	0xc1e <.dynstr+0x1ae>
     bb9: 50                           	push	rax
     bba: 69 70 65 6c 69 6e 65         	imul	esi, dword ptr [rax + 101], 1701734764
     bc1: 4c 61                        	<unknown>
     bc3: 79 6f                        	jns	0xc34 <.dynstr+0x1c4>
     bc5: 75 74                        	jne	0xc3b <.dynstr+0x1cb>
     bc7: 00 76 6b                     	add	byte ptr [rsi + 107], dh
     bca: 43 72 65                     	jb	0xc32 <.dynstr+0x1c2>
     bcd: 61                           	<unknown>
     bce: 74 65                        	je	0xc35 <.dynstr+0x1c5>
     bd0: 44 65                        	gs
     bd2: 73 63                        	jae	0xc37 <.dynstr+0x1c7>
     bd4: 72 69                        	jb	0xc3f <.dynstr+0x1cf>
     bd6: 70 74                        	jo	0xc4c <.dynstr+0x1dc>
     bd8: 6f                           	outsd	dx, dword ptr [rsi]
     bd9: 72 50                        	jb	0xc2b <.dynstr+0x1bb>
     bdb: 6f                           	outsd	dx, dword ptr [rsi]
     bdc: 6f                           	outsd	dx, dword ptr [rsi]
     bdd: 6c                           	insb	byte ptr es:[rdi], dx
     bde: 00 76 6b                     	add	byte ptr [rsi + 107], dh
     be1: 41 6c                        	insb	byte ptr es:[rdi], dx
     be3: 6c                           	insb	byte ptr es:[rdi], dx
     be4: 6f                           	outsd	dx, dword ptr [rsi]
     be5: 63 61 74                     	movsxd	esp, dword ptr [rcx + 116]
     be8: 65 44 65                     	gs
     beb: 73 63                        	jae	0xc50 <.dynstr+0x1e0>
     bed: 72 69                        	jb	0xc58 <.dynstr+0x1e8>
     bef: 70 74                        	jo	0xc65 <.dynstr+0x1f5>
     bf1: 6f                           	outsd	dx, dword ptr [rsi]
     bf2: 72 53                        	jb	0xc47 <.dynstr+0x1d7>
     bf4: 65 74 73                     	je	0xc6a <.dynstr+0x1fa>
     bf7: 00 76 6b                     	add	byte ptr [rsi + 107], dh
     bfa: 55                           	push	rbp
     bfb: 70 64                        	jo	0xc61 <.dynstr+0x1f1>
     bfd: 61                           	<unknown>
     bfe: 74 65                        	je	0xc65 <.dynstr+0x1f5>
     c00: 44 65                        	gs
     c02: 73 63                        	jae	0xc67 <.dynstr+0x1f7>
     c04: 72 69                        	jb	0xc6f <.dynstr+0x1ff>
     c06: 70 74                        	jo	0xc7c <.dynstr+0x20c>
     c08: 6f                           	outsd	dx, dword ptr [rsi]
     c09: 72 53                        	jb	0xc5e <.dynstr+0x1ee>
     c0b: 65 74 73                     	je	0xc81 <.dynstr+0x211>
     c0e: 00 76 6b                     	add	byte ptr [rsi + 107], dh
     c11: 43 72 65                     	jb	0xc79 <.dynstr+0x209>
     c14: 61                           	<unknown>
     c15: 74 65                        	je	0xc7c <.dynstr+0x20c>
     c17: 43 6f                        	outsd	dx, dword ptr [rsi]
     c19: 6d                           	insd	dword ptr es:[rdi], dx
     c1a: 6d                           	insd	dword ptr es:[rdi], dx
     c1b: 61                           	<unknown>
     c1c: 6e                           	outsb	dx, byte ptr [rsi]
     c1d: 64 50                        	push	rax
     c1f: 6f                           	outsd	dx, dword ptr [rsi]
     c20: 6f                           	outsd	dx, dword ptr [rsi]
     c21: 6c                           	insb	byte ptr es:[rdi], dx
     c22: 00 76 6b                     	add	byte ptr [rsi + 107], dh
     c25: 41 6c                        	insb	byte ptr es:[rdi], dx
     c27: 6c                           	insb	byte ptr es:[rdi], dx
     c28: 6f                           	outsd	dx, dword ptr [rsi]
     c29: 63 61 74                     	movsxd	esp, dword ptr [rcx + 116]
     c2c: 65 43 6f                     	outsd	dx, dword ptr gs:[rsi]
     c2f: 6d                           	insd	dword ptr es:[rdi], dx
     c30: 6d                           	insd	dword ptr es:[rdi], dx
     c31: 61                           	<unknown>
     c32: 6e                           	outsb	dx, byte ptr [rsi]
     c33: 64 42 75 66                  	jne	0xc9d <.dynstr+0x22d>
     c37: 66 65 72 73                  	jb	0xcae <.dynstr+0x23e>
     c3b: 00 76 6b                     	add	byte ptr [rsi + 107], dh
     c3e: 42 65                        	gs
     c40: 67 69 6e 43 6f 6d 6d 61      	imul	ebp, dword ptr [esi + 67], 1634561391
     c48: 6e                           	outsb	dx, byte ptr [rsi]
     c49: 64 42 75 66                  	jne	0xcb3 <.dynstr+0x243>
     c4d: 66 65 72 00                  	jb	0xc51 <.dynstr+0x1e1>
     c51: 76 6b                        	jbe	0xcbe <.dynstr+0x24e>
     c53: 43 6d                        	insd	dword ptr es:[rdi], dx
     c55: 64 42 69 6e 64 50 69 70 65   	imul	ebp, dword ptr fs:[rsi + 100], 1701865808
     c5e: 6c                           	insb	byte ptr es:[rdi], dx
     c5f: 69 6e 65 00 76 6b 43         	imul	ebp, dword ptr [rsi + 101], 1131116032
     c66: 6d                           	insd	dword ptr es:[rdi], dx
     c67: 64 42 69 6e 64 44 65 73 63   	imul	ebp, dword ptr fs:[rsi + 100], 1668506948
     c70: 72 69                        	jb	0xcdb <.dynstr+0x26b>
     c72: 70 74                        	jo	0xce8 <.dynstr+0x278>
     c74: 6f                           	outsd	dx, dword ptr [rsi]
     c75: 72 53                        	jb	0xcca <.dynstr+0x25a>
     c77: 65 74 73                     	je	0xced <.dynstr+0x27d>
     c7a: 00 76 6b                     	add	byte ptr [rsi + 107], dh
     c7d: 43 6d                        	insd	dword ptr es:[rdi], dx
     c7f: 64 44 69 73 70 61 74 63 68   	imul	r14d, dword ptr fs:[rbx + 112], 1751348321
     c88: 00 76 6b                     	add	byte ptr [rsi + 107], dh
     c8b: 45 6e                        	outsb	dx, byte ptr [rsi]
     c8d: 64 43 6f                     	outsd	dx, dword ptr fs:[rsi]
     c90: 6d                           	insd	dword ptr es:[rdi], dx
     c91: 6d                           	insd	dword ptr es:[rdi], dx
     c92: 61                           	<unknown>
     c93: 6e                           	outsb	dx, byte ptr [rsi]
     c94: 64 42 75 66                  	jne	0xcfe <.dynstr+0x28e>
     c98: 66 65 72 00                  	jb	0xc9c <.dynstr+0x22c>
     c9c: 76 6b                        	jbe	0xd09 <.dynstr+0x299>
     c9e: 4d 61                        	<unknown>
     ca0: 70 4d                        	jo	0xcef <.dynstr+0x27f>
     ca2: 65 6d                        	insd	dword ptr es:[rdi], dx
     ca4: 6f                           	outsd	dx, dword ptr [rsi]
     ca5: 72 79                        	jb	0xd20 <.dynstr+0x2b0>
     ca7: 00 6d 65                     	add	byte ptr [rbp + 101], ch
     caa: 6d                           	insd	dword ptr es:[rdi], dx
     cab: 63 70 79                     	movsxd	esi, dword ptr [rax + 121]
     cae: 00 76 6b                     	add	byte ptr [rsi + 107], dh
     cb1: 55                           	push	rbp
     cb2: 6e                           	outsb	dx, byte ptr [rsi]
     cb3: 6d                           	insd	dword ptr es:[rdi], dx
     cb4: 61                           	<unknown>
     cb5: 70 4d                        	jo	0xd04 <.dynstr+0x294>
     cb7: 65 6d                        	insd	dword ptr es:[rdi], dx
     cb9: 6f                           	outsd	dx, dword ptr [rsi]
     cba: 72 79                        	jb	0xd35 <.dynstr+0x2c5>
     cbc: 00 76 6b                     	add	byte ptr [rsi + 107], dh
     cbf: 51                           	push	rcx
     cc0: 75 65                        	jne	0xd27 <.dynstr+0x2b7>
     cc2: 75 65                        	jne	0xd29 <.dynstr+0x2b9>
     cc4: 53                           	push	rbx
     cc5: 75 62                        	jne	0xd29 <.dynstr+0x2b9>
     cc7: 6d                           	insd	dword ptr es:[rdi], dx
     cc8: 69 74 00 76 6b 51 75 65      	imul	esi, dword ptr [rax + rax + 118], 1702187371
     cd0: 75 65                        	jne	0xd37 <.dynstr+0x2c7>
     cd2: 57                           	push	rdi
     cd3: 61                           	<unknown>
     cd4: 69 74 49 64 6c 65 00 66      	imul	esi, dword ptr [rcx + 2*rcx + 100], 1711301996
     cdc: 72 65                        	jb	0xd43 <.dynstr+0x2d3>
     cde: 65 00 65 78                  	add	byte ptr gs:[rbp + 120], ah
     ce2: 69 74 00 6e 6e 56 61 6c      	imul	esi, dword ptr [rax + rax + 110], 1818318446
     cea: 69 64 43 72 6f 73 73 43      	imul	esp, dword ptr [rbx + 2*rax + 114], 1131639663
     cf2: 6f                           	outsd	dx, dword ptr [rsi]
     cf3: 72 72                        	jb	0xd67 <.dynstr+0x2f7>
     cf5: 65 6c                        	insb	byte ptr es:[rdi], dx
     cf7: 61                           	<unknown>
     cf8: 74 69                        	je	0xd63 <.dynstr+0x2f3>
     cfa: 6f                           	outsd	dx, dword ptr [rsi]
     cfb: 6e                           	outsb	dx, byte ptr [rsi]
     cfc: 43 70 75                     	jo	0xd74 <.dynstr+0x304>
     cff: 00 6e 6e                     	add	byte ptr [rsi + 110], ch
     d02: 56                           	push	rsi
     d03: 61                           	<unknown>
     d04: 6c                           	insb	byte ptr es:[rdi], dx
     d05: 69 64 43 72 6f 73 73 43      	imul	esp, dword ptr [rbx + 2*rax + 114], 1131639663
     d0d: 6f                           	outsd	dx, dword ptr [rsi]
     d0e: 72 72                        	jb	0xd82 <.dynstr+0x312>
     d10: 65 6c                        	insb	byte ptr es:[rdi], dx
     d12: 61                           	<unknown>
     d13: 74 69                        	je	0xd7e <.dynstr+0x30e>
     d15: 6f                           	outsd	dx, dword ptr [rsi]
     d16: 6e                           	outsb	dx, byte ptr [rsi]
     d17: 47 70 75                     	jo	0xd8f <.dynstr+0x31f>
     d1a: 00 6e 6e                     	add	byte ptr [rsi + 110], ch
     d1d: 52                           	push	rdx
     d1e: 65 61                        	<unknown>
     d20: 64 42 69 6e 61 72 79 46 69   	imul	ebp, dword ptr fs:[rsi + 97], 1766226290
     d29: 6c                           	insb	byte ptr es:[rdi], dx
     d2a: 65 00 66 6f                  	add	byte ptr gs:[rsi + 111], ah
     d2e: 70 65                        	jo	0xd95 <.dynstr+0x325>
     d30: 6e                           	outsb	dx, byte ptr [rsi]
     d31: 00 66 73                     	add	byte ptr [rsi + 115], ah
     d34: 65 65 6b 00 66               	imul	eax, dword ptr gs:[rax], 102
     d39: 74 65                        	je	0xda0 <.dynstr+0x330>
     d3b: 6c                           	insb	byte ptr es:[rdi], dx
     d3c: 6c                           	insb	byte ptr es:[rdi], dx
     d3d: 00 72 65                     	add	byte ptr [rdx + 101], dh
     d40: 77 69                        	ja	0xdab <.dynstr+0x33b>
     d42: 6e                           	outsb	dx, byte ptr [rsi]
     d43: 64 00 66 72                  	add	byte ptr fs:[rsi + 114], ah
     d47: 65 61                        	<unknown>
     d49: 64 00 66 63                  	add	byte ptr fs:[rsi + 99], ah
     d4d: 6c                           	insb	byte ptr es:[rdi], dx
     d4e: 6f                           	outsd	dx, dword ptr [rsi]
     d4f: 73 65                        	jae	0xdb6 <.dynstr+0x346>
     d51: 00 6e 6e                     	add	byte ptr [rsi + 110], ch
     d54: 57                           	push	rdi
     d55: 72 69                        	jb	0xdc0 <.dynstr+0x350>
     d57: 74 65                        	je	0xdbe <.dynstr+0x34e>
     d59: 42 69 6e 61 72 79 46 69      	imul	ebp, dword ptr [rsi + 97], 1766226290
     d61: 6c                           	insb	byte ptr es:[rdi], dx
     d62: 65 00 66 77                  	add	byte ptr gs:[rsi + 119], ah
     d66: 72 69                        	jb	0xdd1 <.dynstr+0x361>
     d68: 74 65                        	je	0xdcf <.dynstr+0x35f>
     d6a: 00 6e 6e                     	add	byte ptr [rsi + 110], ch
     d6d: 4d 65                        	gs
     d6f: 6d                           	insd	dword ptr es:[rdi], dx
     d70: 6f                           	outsd	dx, dword ptr [rsi]
     d71: 72 79                        	jb	0xdec <.dynstr+0x37c>
     d73: 43 6f                        	outsd	dx, dword ptr [rsi]
     d75: 70 79                        	jo	0xdf0 <.dynstr+0x380>
     d77: 00 6e 6e                     	add	byte ptr [rsi + 110], ch
     d7a: 43 72 65                     	jb	0xde2 <.dynstr+0x372>
     d7d: 61                           	<unknown>
     d7e: 74 65                        	je	0xde5 <.dynstr+0x375>
     d80: 44 65                        	gs
     d82: 66 61                        	<unknown>
     d84: 75 6c                        	jne	0xdf2 <.dynstr+0x382>
     d86: 74 56                        	je	0xdde <.dynstr+0x36e>
     d88: 6b 49 6e 73                  	imul	ecx, dword ptr [rcx + 110], 115
     d8c: 74 61                        	je	0xdef <.dynstr+0x37f>
     d8e: 6e                           	outsb	dx, byte ptr [rsi]
     d8f: 63 65 00                     	movsxd	esp, dword ptr [rbp]
     d92: 76 6b                        	jbe	0xdff <.dynstr+0x38f>
     d94: 45 6e                        	outsb	dx, byte ptr [rsi]
     d96: 75 6d                        	jne	0xe05 <.dynstr+0x395>
     d98: 65 72 61                     	jb	0xdfc <.dynstr+0x38c>
     d9b: 74 65                        	je	0xe02 <.dynstr+0x392>
     d9d: 49 6e                        	outsb	dx, byte ptr [rsi]
     d9f: 73 74                        	jae	0xe15 <.dynstr+0x3a5>
     da1: 61                           	<unknown>
     da2: 6e                           	outsb	dx, byte ptr [rsi]
     da3: 63 65 4c                     	movsxd	esp, dword ptr [rbp + 76]
     da6: 61                           	<unknown>
     da7: 79 65                        	jns	0xe0e <.dynstr+0x39e>
     da9: 72 50                        	jb	0xdfb <.dynstr+0x38b>
     dab: 72 6f                        	jb	0xe1c <.dynstr+0x3ac>
     dad: 70 65                        	jo	0xe14 <.dynstr+0x3a4>
     daf: 72 74                        	jb	0xe25 <.dynstr+0x3b5>
     db1: 69 65 73 00 73 74 72         	imul	esp, dword ptr [rbp + 115], 1920234240
     db8: 63 6d 70                     	movsxd	ebp, dword ptr [rbp + 112]
     dbb: 00 76 6b                     	add	byte ptr [rsi + 107], dh
     dbe: 43 72 65                     	jb	0xe26 <.dynstr+0x3b6>
     dc1: 61                           	<unknown>
     dc2: 74 65                        	je	0xe29 <.dynstr+0x3b9>
     dc4: 49 6e                        	outsb	dx, byte ptr [rsi]
     dc6: 73 74                        	jae	0xe3c <.dynstr+0x3cc>
     dc8: 61                           	<unknown>
     dc9: 6e                           	outsb	dx, byte ptr [rsi]
     dca: 63 65 00                     	movsxd	esp, dword ptr [rbp]
     dcd: 76 6b                        	jbe	0xe3a <.dynstr+0x3ca>
     dcf: 47 65                        	gs
     dd1: 74 50                        	je	0xe23 <.dynstr+0x3b3>
     dd3: 68 79 73 69 63               	push	1667855225
     dd8: 61                           	<unknown>
     dd9: 6c                           	insb	byte ptr es:[rdi], dx
     dda: 44 65                        	gs
     ddc: 76 69                        	jbe	0xe47 <.dynstr+0x3d7>
     dde: 63 65 73                     	movsxd	esp, dword ptr [rbp + 115]
     de1: 00 76 6b                     	add	byte ptr [rsi + 107], dh
     de4: 45 6e                        	outsb	dx, byte ptr [rsi]
     de6: 75 6d                        	jne	0xe55 <.dynstr+0x3e5>
     de8: 65 72 61                     	jb	0xe4c <.dynstr+0x3dc>
     deb: 74 65                        	je	0xe52 <.dynstr+0x3e2>
     ded: 50                           	push	rax
     dee: 68 79 73 69 63               	push	1667855225
     df3: 61                           	<unknown>
     df4: 6c                           	insb	byte ptr es:[rdi], dx
     df5: 44 65                        	gs
     df7: 76 69                        	jbe	0xe62 <.dynstr+0x3f2>
     df9: 63 65 73                     	movsxd	esp, dword ptr [rbp + 115]
     dfc: 00 6e 6e                     	add	byte ptr [rsi + 110], ch
     dff: 47 65                        	gs
     e01: 74 56                        	je	0xe59 <.dynstr+0x3e9>
     e03: 6b 50 68 79                  	imul	edx, dword ptr [rax + 104], 121
     e07: 73 69                        	jae	0xe72 <.dynstr+0x402>
     e09: 63 61 6c                     	movsxd	esp, dword ptr [rcx + 108]
     e0c: 44 65                        	gs
     e0e: 76 69                        	jbe	0xe79 <.dynstr+0x409>
     e10: 63 65 49                     	movsxd	esp, dword ptr [rbp + 73]
     e13: 6e                           	outsb	dx, byte ptr [rsi]
     e14: 64 65 78 42                  	js	0xe5a <.dynstr+0x3ea>
     e18: 79 45                        	jns	0xe5f <.dynstr+0x3ef>
     e1a: 78 74                        	js	0xe90 <.dynstr+0x420>
     e1c: 65 6e                        	outsb	dx, byte ptr gs:[rsi]
     e1e: 73 69                        	jae	0xe89 <.dynstr+0x419>
     e20: 6f                           	outsd	dx, dword ptr [rsi]
     e21: 6e                           	outsb	dx, byte ptr [rsi]
     e22: 4e 61                        	<unknown>
     e24: 6d                           	insd	dword ptr es:[rdi], dx
     e25: 65 00 76 6b                  	add	byte ptr gs:[rsi + 107], dh
     e29: 45 6e                        	outsb	dx, byte ptr [rsi]
     e2b: 75 6d                        	jne	0xe9a <.dynstr+0x42a>
     e2d: 65 72 61                     	jb	0xe91 <.dynstr+0x421>
     e30: 74 65                        	je	0xe97 <.dynstr+0x427>
     e32: 44 65                        	gs
     e34: 76 69                        	jbe	0xe9f <.dynstr+0x42f>
     e36: 63 65 45                     	movsxd	esp, dword ptr [rbp + 69]
     e39: 78 74                        	js	0xeaf <.dynstr+0x43f>
     e3b: 65 6e                        	outsb	dx, byte ptr gs:[rsi]
     e3d: 73 69                        	jae	0xea8 <.dynstr+0x438>
     e3f: 6f                           	outsd	dx, dword ptr [rsi]
     e40: 6e                           	outsb	dx, byte ptr [rsi]
     e41: 50                           	push	rax
     e42: 72 6f                        	jb	0xeb3 <.dynstr+0x443>
     e44: 70 65                        	jo	0xeab <.dynstr+0x43b>
     e46: 72 74                        	jb	0xebc <.dynstr+0x44c>
     e48: 69 65 73 00 6e 6e 47         	imul	esp, dword ptr [rbp + 115], 1198419456
     e4f: 65 74 56                     	je	0xea8 <.dynstr+0x438>
     e52: 6b 50 68 79                  	imul	edx, dword ptr [rax + 104], 121
     e56: 73 69                        	jae	0xec1 <.dynstr+0x451>
     e58: 63 61 6c                     	movsxd	esp, dword ptr [rcx + 108]
     e5b: 44 65                        	gs
     e5d: 76 69                        	jbe	0xec8 <.dynstr+0x458>
     e5f: 63 65 73                     	movsxd	esp, dword ptr [rbp + 115]
     e62: 00 6e 6e                     	add	byte ptr [rsi + 110], ch
     e65: 47 65                        	gs
     e67: 74 56                        	je	0xebf <.dynstr+0x44f>
     e69: 6b 51 75 65                  	imul	edx, dword ptr [rcx + 117], 101
     e6d: 75 65                        	jne	0xed4 <.dynstr+0x464>
     e6f: 43 6f                        	outsd	dx, dword ptr [rsi]
     e71: 6d                           	insd	dword ptr es:[rdi], dx
     e72: 70 75                        	jo	0xee9 <.dynstr+0x479>
     e74: 74 65                        	je	0xedb <.dynstr+0x46b>
     e76: 49 6e                        	outsb	dx, byte ptr [rsi]
     e78: 64 65 78 00                  	js	0xe7c <.dynstr+0x40c>
     e7c: 76 6b                        	jbe	0xee9 <.dynstr+0x479>
     e7e: 47 65                        	gs
     e80: 74 50                        	je	0xed2 <.dynstr+0x462>
     e82: 68 79 73 69 63               	push	1667855225
     e87: 61                           	<unknown>
     e88: 6c                           	insb	byte ptr es:[rdi], dx
     e89: 44 65                        	gs
     e8b: 76 69                        	jbe	0xef6 <.dynstr+0x486>
     e8d: 63 65 51                     	movsxd	esp, dword ptr [rbp + 81]
     e90: 75 65                        	jne	0xef7 <.dynstr+0x487>
     e92: 75 65                        	jne	0xef9 <.dynstr+0x489>
     e94: 46 61                        	<unknown>
     e96: 6d                           	insd	dword ptr es:[rdi], dx
     e97: 69 6c 79 50 72 6f 70 65      	imul	ebp, dword ptr [rcx + 2*rdi + 80], 1701867378
     e9f: 72 74                        	jb	0xf15 <.dynstr+0x4a5>
     ea1: 69 65 73 00 6e 6e 47         	imul	esp, dword ptr [rbp + 115], 1198419456
     ea8: 65 74 4d                     	je	0xef8 <.dynstr+0x488>
     eab: 65 6d                        	insd	dword ptr es:[rdi], dx
     ead: 6f                           	outsd	dx, dword ptr [rsi]
     eae: 72 79                        	jb	0xf29 <.dynstr+0x4b9>
     eb0: 50                           	push	rax
     eb1: 72 6f                        	jb	0xf22 <.dynstr+0x4b2>
     eb3: 70 65                        	jo	0xf1a <.dynstr+0x4aa>
     eb5: 72 74                        	jb	0xf2b <.dynstr+0x4bb>
     eb7: 69 65 73 00 76 6b 47         	imul	esp, dword ptr [rbp + 115], 1198224896
     ebe: 65 74 50                     	je	0xf11 <.dynstr+0x4a1>
     ec1: 68 79 73 69 63               	push	1667855225
     ec6: 61                           	<unknown>
     ec7: 6c                           	insb	byte ptr es:[rdi], dx
     ec8: 44 65                        	gs
     eca: 76 69                        	jbe	0xf35 <.dynstr+0x4c5>
     ecc: 63 65 4d                     	movsxd	esp, dword ptr [rbp + 77]
     ecf: 65 6d                        	insd	dword ptr es:[rdi], dx
     ed1: 6f                           	outsd	dx, dword ptr [rsi]
     ed2: 72 79                        	jb	0xf4d <.dynstr+0x4dd>
     ed4: 50                           	push	rax
     ed5: 72 6f                        	jb	0xf46 <.dynstr+0x4d6>
     ed7: 70 65                        	jo	0xf3e <.dynstr+0x4ce>
     ed9: 72 74                        	jb	0xf4f <.dynstr+0x4df>
     edb: 69 65 73 00 6e 6e 43         	imul	esp, dword ptr [rbp + 115], 1131310592
     ee2: 72 65                        	jb	0xf49 <.dynstr+0x4d9>
     ee4: 61                           	<unknown>
     ee5: 74 65                        	je	0xf4c <.dynstr+0x4dc>
     ee7: 56                           	push	rsi
     ee8: 6b 44 65 76 69               	imul	eax, dword ptr [rbp + 2*riz + 118], 105
     eed: 63 65 00                     	movsxd	esp, dword ptr [rbp]
     ef0: 76 6b                        	jbe	0xf5d <.dynstr+0x4ed>
     ef2: 43 72 65                     	jb	0xf5a <.dynstr+0x4ea>
     ef5: 61                           	<unknown>
     ef6: 74 65                        	je	0xf5d <.dynstr+0x4ed>
     ef8: 44 65                        	gs
     efa: 76 69                        	jbe	0xf65 <.dynstr+0x4f5>
     efc: 63 65 00                     	movsxd	esp, dword ptr [rbp]
     eff: 6e                           	outsb	dx, byte ptr [rsi]
     f00: 6e                           	outsb	dx, byte ptr [rsi]
     f01: 47 65                        	gs
     f03: 74 56                        	je	0xf5b <.dynstr+0x4eb>
     f05: 6b 44 65 76 69               	imul	eax, dword ptr [rbp + 2*riz + 118], 105
     f0a: 63 65 51                     	movsxd	esp, dword ptr [rbp + 81]
     f0d: 75 65                        	jne	0xf74 <.dynstr+0x504>
     f0f: 75 65                        	jne	0xf76 <.dynstr+0x506>
     f11: 00 76 6b                     	add	byte ptr [rsi + 107], dh
     f14: 47 65                        	gs
     f16: 74 44                        	je	0xf5c <.dynstr+0x4ec>
     f18: 65 76 69                     	jbe	0xf84 <.dynstr+0x514>
     f1b: 63 65 51                     	movsxd	esp, dword ptr [rbp + 81]
     f1e: 75 65                        	jne	0xf85 <.dynstr+0x515>
     f20: 75 65                        	jne	0xf87 <.dynstr+0x517>
     f22: 00 44 65 73                  	add	byte ptr [rbp + 2*riz + 115], al
     f26: 74 72                        	je	0xf9a <.dynstr+0x52a>
     f28: 6f                           	outsd	dx, dword ptr [rsi]
     f29: 79 44                        	jns	0xf6f <.dynstr+0x4ff>
     f2b: 65 62 75 67 55 74            	<unknown>
     f31: 69 6c 73 4d 65 73 73 65      	imul	ebp, dword ptr [rbx + 2*rsi + 77], 1702064997
     f39: 6e                           	outsb	dx, byte ptr [rsi]
     f3a: 67 65 72 45                  	jb	0xf83 <.dynstr+0x513>
     f3e: 58                           	pop	rax
     f3f: 54                           	push	rsp
     f40: 00 76 6b                     	add	byte ptr [rsi + 107], dh
     f43: 47 65                        	gs
     f45: 74 49                        	je	0xf90 <.dynstr+0x520>
     f47: 6e                           	outsb	dx, byte ptr [rsi]
     f48: 73 74                        	jae	0xfbe <.dynstr+0x54e>
     f4a: 61                           	<unknown>
     f4b: 6e                           	outsb	dx, byte ptr [rsi]
     f4c: 63 65 50                     	movsxd	esp, dword ptr [rbp + 80]
     f4f: 72 6f                        	jb	0xfc0 <.dynstr+0x550>
     f51: 63 41 64                     	movsxd	eax, dword ptr [rcx + 100]
     f54: 64 72 00                     	jb	0xf57 <.dynstr+0x4e7>
     f57: 6e                           	outsb	dx, byte ptr [rsi]
     f58: 6e                           	outsb	dx, byte ptr [rsi]
     f59: 43 72 65                     	jb	0xfc1 <.dynstr+0x551>
     f5c: 61                           	<unknown>
     f5d: 74 65                        	je	0xfc4 <.dynstr+0x554>
     f5f: 56                           	push	rsi
     f60: 6b 44 65 62 75               	imul	eax, dword ptr [rbp + 2*riz + 98], 117
     f65: 67 55                        	push	rbp
     f67: 74 69                        	je	0xfd2 <.dynstr+0x562>
     f69: 6c                           	insb	byte ptr es:[rdi], dx
     f6a: 73 4d                        	jae	0xfb9 <.dynstr+0x549>
     f6c: 65 73 73                     	jae	0xfe2 <.dynstr+0x572>
     f6f: 65 6e                        	outsb	dx, byte ptr gs:[rsi]
     f71: 67 65 72 00                  	jb	0xf75 <.dynstr+0x505>
     f75: 6e                           	outsb	dx, byte ptr [rsi]
     f76: 6e                           	outsb	dx, byte ptr [rsi]
     f77: 43 72 65                     	jb	0xfdf <.dynstr+0x56f>
     f7a: 61                           	<unknown>
     f7b: 74 65                        	je	0xfe2 <.dynstr+0x572>
     f7d: 56                           	push	rsi
     f7e: 6b 50 69 70                  	imul	edx, dword ptr [rax + 105], 112
     f82: 65 6c                        	insb	byte ptr es:[rdi], dx
     f84: 69 6e 65 43 61 63 68         	imul	ebp, dword ptr [rsi + 101], 1751343427
     f8b: 65 00 76 6b                  	add	byte ptr gs:[rsi + 107], dh
     f8f: 43 72 65                     	jb	0xff7 <.dynstr+0x587>
     f92: 61                           	<unknown>
     f93: 74 65                        	je	0xffa <.dynstr+0x58a>
     f95: 50                           	push	rax
     f96: 69 70 65 6c 69 6e 65         	imul	esi, dword ptr [rax + 101], 1701734764
     f9d: 43 61                        	<unknown>
     f9f: 63 68 65                     	movsxd	ebp, dword ptr [rax + 101]
     fa2: 00 6e 6e                     	add	byte ptr [rsi + 110], ch
     fa5: 43 72 65                     	jb	0x100d <.dynstr+0x59d>
     fa8: 61                           	<unknown>
     fa9: 74 65                        	je	0x1010 <.dynstr+0x5a0>
     fab: 56                           	push	rsi
     fac: 6b 43 6f 6d                  	imul	eax, dword ptr [rbx + 111], 109
     fb0: 70 75                        	jo	0x1027 <.dynstr+0x5b7>
     fb2: 74 65                        	je	0x1019 <.dynstr+0x5a9>
     fb4: 50                           	push	rax
     fb5: 69 70 65 6c 69 6e 65         	imul	esi, dword ptr [rax + 101], 1701734764
     fbc: 32 4d 61                     	xor	cl, byte ptr [rbp + 97]
     fbf: 74 72                        	je	0x1033 <.dynstr+0x5c3>
     fc1: 69 63 65 73 41 6e 64         	imul	esp, dword ptr [rbx + 101], 1684947315
     fc8: 4f 75 74                     	jne	0x103f <.dynstr+0x5cf>
     fcb: 70 75                        	jo	0x1042 <.dynstr+0x5d2>
     fcd: 74 00                        	je	0xfcf <.dynstr+0x55f>
     fcf: 76 6b                        	jbe	0x103c <.dynstr+0x5cc>
     fd1: 43 72 65                     	jb	0x1039 <.dynstr+0x5c9>
     fd4: 61                           	<unknown>
     fd5: 74 65                        	je	0x103c <.dynstr+0x5cc>
     fd7: 53                           	push	rbx
     fd8: 68 61 64 65 72               	push	1919247457
     fdd: 4d 6f                        	outsd	dx, dword ptr [rsi]
     fdf: 64 75 6c                     	jne	0x104e <.dynstr+0x5de>
     fe2: 65 00 76 6b                  	add	byte ptr gs:[rsi + 107], dh
     fe6: 43 72 65                     	jb	0x104e <.dynstr+0x5de>
     fe9: 61                           	<unknown>
     fea: 74 65                        	je	0x1051 <.dynstr+0x5e1>
     fec: 43 6f                        	outsd	dx, dword ptr [rsi]
     fee: 6d                           	insd	dword ptr es:[rdi], dx
     fef: 70 75                        	jo	0x1066 <.dynstr+0x5f6>
     ff1: 74 65                        	je	0x1058 <.dynstr+0x5e8>
     ff3: 50                           	push	rax
     ff4: 69 70 65 6c 69 6e 65         	imul	esi, dword ptr [rax + 101], 1701734764
     ffb: 73 00                        	jae	0xffd <.dynstr+0x58d>
     ffd: 76 6b                        	jbe	0x106a <.dynstr+0x5fa>
     fff: 44 65                        	gs
    1001: 73 74                        	jae	0x1077 <.dynstr+0x607>
    1003: 72 6f                        	jb	0x1074 <.dynstr+0x604>
    1005: 79 53                        	jns	0x105a <.dynstr+0x5ea>
    1007: 68 61 64 65 72               	push	1919247457
    100c: 4d 6f                        	outsd	dx, dword ptr [rsi]
    100e: 64 75 6c                     	jne	0x107d <.dynstr+0x60d>
    1011: 65 00 6e 6e                  	add	byte ptr gs:[rsi + 110], ch
    1015: 43 72 65                     	jb	0x107d <.dynstr+0x60d>
    1018: 61                           	<unknown>
    1019: 74 65                        	je	0x1080 <.dynstr+0x610>
    101b: 56                           	push	rsi
    101c: 6b 43 6f 6d                  	imul	eax, dword ptr [rbx + 111], 109
    1020: 70 75                        	jo	0x1097 <.dynstr+0x627>
    1022: 74 65                        	je	0x1089 <.dynstr+0x619>
    1024: 50                           	push	rax
    1025: 69 70 65 6c 69 6e 65         	imul	esi, dword ptr [rax + 101], 1701734764
    102c: 43 6f                        	outsd	dx, dword ptr [rsi]
    102e: 72 72                        	jb	0x10a2 <.dynstr+0x632>
    1030: 65 6c                        	insb	byte ptr es:[rdi], dx
    1032: 61                           	<unknown>
    1033: 74 65                        	je	0x109a <.dynstr+0x62a>
    1035: 32 64 56 61                  	xor	ah, byte ptr [rsi + 2*rdx + 97]
    1039: 6c                           	insb	byte ptr es:[rdi], dx
    103a: 69 64 00 6e 6e 53 61 76      	imul	esp, dword ptr [rax + rax + 110], 1986089838
    1042: 65 56                        	push	rsi
    1044: 6b 50 69 70                  	imul	edx, dword ptr [rax + 105], 112
    1048: 65 6c                        	insb	byte ptr es:[rdi], dx
    104a: 69 6e 65 43 61 63 68         	imul	ebp, dword ptr [rsi + 101], 1751343427
    1051: 65 00 76 6b                  	add	byte ptr gs:[rsi + 107], dh
    1055: 47 65                        	gs
    1057: 74 50                        	je	0x10a9 <.dynstr+0x639>
    1059: 69 70 65 6c 69 6e 65         	imul	esi, dword ptr [rax + 101], 1701734764
    1060: 43 61                        	<unknown>
    1062: 63 68 65                     	movsxd	ebp, dword ptr [rax + 101]
    1065: 44 61                        	<unknown>
    1067: 74 61                        	je	0x10ca <.dynstr+0x65a>
    1069: 00 76 6b                     	add	byte ptr [rsi + 107], dh
    106c: 44 65                        	gs
    106e: 73 74                        	jae	0x10e4 <vkUpdateDescriptorSets+0x10e4>
    1070: 72 6f                        	jb	0x10e1 <vkUpdateDescriptorSets+0x10e1>
    1072: 79 50                        	jns	0x10c4 <.dynstr+0x654>
    1074: 69 70 65 6c 69 6e 65         	imul	esi, dword ptr [rax + 101], 1701734764
    107b: 43 61                        	<unknown>
    107d: 63 68 65                     	movsxd	ebp, dword ptr [rax + 101]
    1080: 00 6c 69 62                  	add	byte ptr [rcx + 2*rbp + 98], ch
    1084: 67 6c                        	insb	byte ptr es:[edi], dx
    1086: 66 77 2e                     	ja	0x10b7 <.dynstr+0x647>
    1089: 73 6f                        	jae	0x10fa <vkUpdateDescriptorSets+0x10fa>
    108b: 2e 33 00                     	xor	eax, dword ptr cs:[rax]
    108e: 6c                           	insb	byte ptr es:[rdi], dx
    108f: 69 62 76 75 6c 6b 61         	imul	esp, dword ptr [rdx + 118], 1634430069
    1096: 6e                           	outsb	dx, byte ptr [rsi]
    1097: 2e 73 6f                     	jae	0x1109 <vkUpdateDescriptorSets+0x1109>
    109a: 2e 31 00                     	xor	dword ptr cs:[rax], eax
    109d: 6c                           	insb	byte ptr es:[rdi], dx
    109e: 69 62 63 2e 73 6f 2e         	imul	esp, dword ptr [rdx + 99], 779055918
    10a5: 36 00 6c 69 62               	add	byte ptr ss:[rcx + 2*rbp + 98], ch
    10aa: 6e                           	outsb	dx, byte ptr [rsi]
    10ab: 6e                           	outsb	dx, byte ptr [rsi]
    10ac: 5f                           	pop	rdi
    10ad: 62                           	<unknown>
    10ae: 61                           	<unknown>
    10af: 63 6b 65                     	movsxd	ebp, dword ptr [rbx + 101]
    10b2: 6e                           	outsb	dx, byte ptr [rsi]
    10b3: 64 2e 73 6f                  	jae	0x1126 <vkUpdateDescriptorSets+0x1126>
    10b7: 00 47 4c                     	add	byte ptr [rdi + 76], al
    10ba: 49 42                        	<unknown>
    10bc: 43 5f                        	pop	r15
    10be: 32 2e                        	xor	ch, byte ptr [rsi]
    10c0: 31 34 00                     	xor	dword ptr [rax + rax], esi
    10c3: 47 4c                        	<unknown>
    10c5: 49 42                        	<unknown>
    10c7: 43 5f                        	pop	r15
    10c9: 32 2e                        	xor	ch, byte ptr [rsi]
    10cb: 32 2e                        	xor	ch, byte ptr [rsi]
    10cd: 35                           	<unknown>
    10ce: 00                           	<unknown>

Disassembly of section .gnu.version:

00000000000010d0 <.gnu.version>:
    10d0: 00 00                        	add	byte ptr [rax], al
    10d2: 01 00                        	add	dword ptr [rax], eax
    10d4: 01 00                        	add	dword ptr [rax], eax
    10d6: 02 00                        	add	al, byte ptr [rax]
    10d8: 01 00                        	add	dword ptr [rax], eax
    10da: 01 00                        	add	dword ptr [rax], eax
    10dc: 01 00                        	add	dword ptr [rax], eax
    10de: 02 00                        	add	al, byte ptr [rax]
    10e0: 01 00                        	add	dword ptr [rax], eax
    10e2: 01 00                        	add	dword ptr [rax], eax
    10e4: 01 00                        	add	dword ptr [rax], eax
    10e6: 02 00                        	add	al, byte ptr [rax]
    10e8: 01 00                        	add	dword ptr [rax], eax
    10ea: 01 00                        	add	dword ptr [rax], eax
    10ec: 02 00                        	add	al, byte ptr [rax]
    10ee: 02 00                        	add	al, byte ptr [rax]
    10f0: 01 00                        	add	dword ptr [rax], eax
    10f2: 01 00                        	add	dword ptr [rax], eax
    10f4: 01 00                        	add	dword ptr [rax], eax
    10f6: 01 00                        	add	dword ptr [rax], eax
    10f8: 01 00                        	add	dword ptr [rax], eax
    10fa: 01 00                        	add	dword ptr [rax], eax
    10fc: 01 00                        	add	dword ptr [rax], eax
    10fe: 02 00                        	add	al, byte ptr [rax]
    1100: 02 00                        	add	al, byte ptr [rax]
    1102: 01 00                        	add	dword ptr [rax], eax
    1104: 02 00                        	add	al, byte ptr [rax]
    1106: 02 00                        	add	al, byte ptr [rax]
    1108: 01 00                        	add	dword ptr [rax], eax
    110a: 01 00                        	add	dword ptr [rax], eax
    110c: 03 00                        	add	eax, dword ptr [rax]
    110e: 01 00                        	add	dword ptr [rax], eax
    1110: 01 00                        	add	dword ptr [rax], eax
    1112: 02 00                        	add	al, byte ptr [rax]
    1114: 01 00                        	add	dword ptr [rax], eax
    1116: 01 00                        	add	dword ptr [rax], eax
    1118: 01 00                        	add	dword ptr [rax], eax
    111a: 01 00                        	add	dword ptr [rax], eax
    111c: 02 00                        	add	al, byte ptr [rax]
    111e: 01 00                        	add	dword ptr [rax], eax
    1120: 01 00                        	add	dword ptr [rax], eax
    1122: 01 00                        	add	dword ptr [rax], eax
    1124: 01 00                        	add	dword ptr [rax], eax
    1126: 01 00                        	add	dword ptr [rax], eax
    1128: 02 00                        	add	al, byte ptr [rax]
    112a: 01 00                        	add	dword ptr [rax], eax
    112c: 01 00                        	add	dword ptr [rax], eax
    112e: 02 00                        	add	al, byte ptr [rax]
    1130: 01 00                        	add	dword ptr [rax], eax
    1132: 02 00                        	add	al, byte ptr [rax]
    1134: 01 00                        	add	dword ptr [rax], eax
    1136: 01 00                        	add	dword ptr [rax], eax
    1138: 01 00                        	add	dword ptr [rax], eax
    113a: 01 00                        	add	dword ptr [rax], eax
    113c: 02 00                        	add	al, byte ptr [rax]
    113e: 02 00                        	add	al, byte ptr [rax]
    1140: 01 00                        	add	dword ptr [rax], eax
    1142: 01 00                        	add	dword ptr [rax], eax
    1144: 01 00                        	add	dword ptr [rax], eax
    1146: 01 00                        	add	dword ptr [rax], eax
    1148: 01 00                        	add	dword ptr [rax], eax
    114a: 01 00                        	add	dword ptr [rax], eax
    114c: 01 00                        	add	dword ptr [rax], eax
    114e: 01 00                        	add	dword ptr [rax], eax
    1150: 01 00                        	add	dword ptr [rax], eax
    1152: 01 00                        	add	dword ptr [rax], eax
    1154: 01 00                        	add	dword ptr [rax], eax
    1156: 01 00                        	add	dword ptr [rax], eax
    1158: 01 00                        	add	dword ptr [rax], eax
    115a: 01 00                        	add	dword ptr [rax], eax
    115c: 01 00                        	add	dword ptr [rax], eax
    115e: 01 00                        	add	dword ptr [rax], eax
    1160: 01 00                        	add	dword ptr [rax], eax
    1162: 01 00                        	add	dword ptr [rax], eax
    1164: 01 00                        	add	dword ptr [rax], eax
    1166: 01 00                        	add	dword ptr [rax], eax
    1168: 01 00                        	add	dword ptr [rax], eax
    116a: 01 00                        	add	dword ptr [rax], eax

Disassembly of section .gnu.version_r:

0000000000001170 <.gnu.version_r>:
    1170: 01 00                        	add	dword ptr [rax], eax
    1172: 02 00                        	add	al, byte ptr [rax]
    1174: 2d 06 00 00 10               	sub	eax, 268435462
    1179: 00 00                        	add	byte ptr [rax], al
    117b: 00 00                        	add	byte ptr [rax], al
    117d: 00 00                        	add	byte ptr [rax], al
    117f: 00 94 91 96 06 00 00         	add	byte ptr [rcx + 4*rdx + 1686], dl
    1186: 03 00                        	add	eax, dword ptr [rax]
    1188: 48 06                        	<unknown>
    118a: 00 00                        	add	byte ptr [rax], al
    118c: 10 00                        	adc	byte ptr [rax], al
    118e: 00 00                        	add	byte ptr [rax], al
    1190: 75 1a                        	jne	0x11ac <vkUpdateDescriptorSets+0x11ac>
    1192: 69 09 00 00 02 00            	imul	ecx, dword ptr [rcx], 131072
    1198: 53                           	push	rbx
    1199: 06                           	<unknown>
    119a: 00 00                        	add	byte ptr [rax], al
    119c: 00 00                        	add	byte ptr [rax], al
    119e: 00 00                        	add	byte ptr [rax], al

Disassembly of section .rela.dyn:

00000000000011a0 <.rela.dyn>:
    11a0: a8 6d                        	test	al, 109
    11a2: 00 00                        	add	byte ptr [rax], al
    11a4: 00 00                        	add	byte ptr [rax], al
    11a6: 00 00                        	add	byte ptr [rax], al
    11a8: 08 00                        	or	byte ptr [rax], al
    11aa: 00 00                        	add	byte ptr [rax], al
    11ac: 00 00                        	add	byte ptr [rax], al
    11ae: 00 00                        	add	byte ptr [rax], al
    11b0: 50                           	push	rax
    11b1: 24 00                        	and	al, 0
    11b3: 00 00                        	add	byte ptr [rax], al
    11b5: 00 00                        	add	byte ptr [rax], al
    11b7: 00 b0 6d 00 00 00            	add	byte ptr [rax + 109], dh
    11bd: 00 00                        	add	byte ptr [rax], al
    11bf: 00 08                        	add	byte ptr [rax], cl
    11c1: 00 00                        	add	byte ptr [rax], al
    11c3: 00 00                        	add	byte ptr [rax], al
    11c5: 00 00                        	add	byte ptr [rax], al
    11c7: 00 10                        	add	byte ptr [rax], dl
    11c9: 24 00                        	and	al, 0
    11cb: 00 00                        	add	byte ptr [rax], al
    11cd: 00 00                        	add	byte ptr [rax], al
    11cf: 00 d8                        	add	al, bl
    11d1: 6d                           	insd	dword ptr es:[rdi], dx
    11d2: 00 00                        	add	byte ptr [rax], al
    11d4: 00 00                        	add	byte ptr [rax], al
    11d6: 00 00                        	add	byte ptr [rax], al
    11d8: 08 00                        	or	byte ptr [rax], al
    11da: 00 00                        	add	byte ptr [rax], al
    11dc: 00 00                        	add	byte ptr [rax], al
    11de: 00 00                        	add	byte ptr [rax], al
    11e0: 10 47 00                     	adc	byte ptr [rdi], al
    11e3: 00 00                        	add	byte ptr [rax], al
    11e5: 00 00                        	add	byte ptr [rax], al
    11e7: 00 d0                        	add	al, dl
    11e9: 71 00                        	jno	0x11eb <.rela.dyn+0x4b>
    11eb: 00 00                        	add	byte ptr [rax], al
    11ed: 00 00                        	add	byte ptr [rax], al
    11ef: 00 08                        	add	byte ptr [rax], cl
    11f1: 00 00                        	add	byte ptr [rax], al
    11f3: 00 00                        	add	byte ptr [rax], al
    11f5: 00 00                        	add	byte ptr [rax], al
    11f7: 00 d0                        	add	al, dl
    11f9: 71 00                        	jno	0x11fb <.rela.dyn+0x5b>
    11fb: 00 00                        	add	byte ptr [rax], al
    11fd: 00 00                        	add	byte ptr [rax], al
    11ff: 00 e0                        	add	al, ah
    1201: 71 00                        	jno	0x1203 <.rela.dyn+0x63>
    1203: 00 00                        	add	byte ptr [rax], al
    1205: 00 00                        	add	byte ptr [rax], al
    1207: 00 08                        	add	byte ptr [rax], cl
    1209: 00 00                        	add	byte ptr [rax], al
    120b: 00 00                        	add	byte ptr [rax], al
    120d: 00 00                        	add	byte ptr [rax], al
    120f: 00 1b                        	add	byte ptr [rbx], bl
    1211: 51                           	push	rcx
    1212: 00 00                        	add	byte ptr [rax], al
    1214: 00 00                        	add	byte ptr [rax], al
    1216: 00 00                        	add	byte ptr [rax], al
    1218: f0                           	lock
    1219: 71 00                        	jno	0x121b <.rela.dyn+0x7b>
    121b: 00 00                        	add	byte ptr [rax], al
    121d: 00 00                        	add	byte ptr [rax], al
    121f: 00 08                        	add	byte ptr [rax], cl
    1221: 00 00                        	add	byte ptr [rax], al
    1223: 00 00                        	add	byte ptr [rax], al
    1225: 00 00                        	add	byte ptr [rax], al
    1227: 00 37                        	add	byte ptr [rdi], dh
    1229: 51                           	push	rcx
    122a: 00 00                        	add	byte ptr [rax], al
    122c: 00 00                        	add	byte ptr [rax], al
    122e: 00 00                        	add	byte ptr [rax], al
    1230: f8                           	clc
    1231: 71 00                        	jno	0x1233 <.rela.dyn+0x93>
    1233: 00 00                        	add	byte ptr [rax], al
    1235: 00 00                        	add	byte ptr [rax], al
    1237: 00 08                        	add	byte ptr [rax], cl
    1239: 00 00                        	add	byte ptr [rax], al
    123b: 00 00                        	add	byte ptr [rax], al
    123d: 00 00                        	add	byte ptr [rax], al
    123f: 00 5e 51                     	add	byte ptr [rsi + 81], bl
    1242: 00 00                        	add	byte ptr [rax], al
    1244: 00 00                        	add	byte ptr [rax], al
    1246: 00 00                        	add	byte ptr [rax], al
    1248: 00 72 00                     	add	byte ptr [rdx], dh
    124b: 00 00                        	add	byte ptr [rax], al
    124d: 00 00                        	add	byte ptr [rax], al
    124f: 00 08                        	add	byte ptr [rax], cl
    1251: 00 00                        	add	byte ptr [rax], al
    1253: 00 00                        	add	byte ptr [rax], al
    1255: 00 00                        	add	byte ptr [rax], al
    1257: 00 71 51                     	add	byte ptr [rcx + 81], dh
    125a: 00 00                        	add	byte ptr [rax], al
    125c: 00 00                        	add	byte ptr [rax], al
    125e: 00 00                        	add	byte ptr [rax], al
    1260: 08 72 00                     	or	byte ptr [rdx], dh
    1263: 00 00                        	add	byte ptr [rax], al
    1265: 00 00                        	add	byte ptr [rax], al
    1267: 00 08                        	add	byte ptr [rax], cl
    1269: 00 00                        	add	byte ptr [rax], al
    126b: 00 00                        	add	byte ptr [rax], al
    126d: 00 00                        	add	byte ptr [rax], al
    126f: 00 91 51 00 00 00            	add	byte ptr [rcx + 81], dl
    1275: 00 00                        	add	byte ptr [rax], al
    1277: 00 d8                        	add	al, bl
    1279: 6f                           	outsd	dx, dword ptr [rsi]
    127a: 00 00                        	add	byte ptr [rax], al
    127c: 00 00                        	add	byte ptr [rax], al
    127e: 00 00                        	add	byte ptr [rax], al
    1280: 06                           	<unknown>
    1281: 00 00                        	add	byte ptr [rax], al
    1283: 00 06                        	add	byte ptr [rsi], al
		...
    128d: 00 00                        	add	byte ptr [rax], al
    128f: 00 e0                        	add	al, ah
    1291: 6f                           	outsd	dx, dword ptr [rsi]
    1292: 00 00                        	add	byte ptr [rax], al
    1294: 00 00                        	add	byte ptr [rax], al
    1296: 00 00                        	add	byte ptr [rax], al
    1298: 06                           	<unknown>
    1299: 00 00                        	add	byte ptr [rax], al
    129b: 00 1d 00 00 00 00            	add	byte ptr [rip], bl      # 0x12a1 <.rela.dyn+0x101>
    12a1: 00 00                        	add	byte ptr [rax], al
    12a3: 00 00                        	add	byte ptr [rax], al
    12a5: 00 00                        	add	byte ptr [rax], al
    12a7: 00 e8                        	add	al, ch
    12a9: 6f                           	outsd	dx, dword ptr [rsi]
    12aa: 00 00                        	add	byte ptr [rax], al
    12ac: 00 00                        	add	byte ptr [rax], al
    12ae: 00 00                        	add	byte ptr [rax], al
    12b0: 06                           	<unknown>
    12b1: 00 00                        	add	byte ptr [rax], al
    12b3: 00 34 00                     	add	byte ptr [rax + rax], dh
		...
    12be: 00 00                        	add	byte ptr [rax], al
    12c0: f0                           	lock
    12c1: 6f                           	outsd	dx, dword ptr [rsi]
    12c2: 00 00                        	add	byte ptr [rax], al
    12c4: 00 00                        	add	byte ptr [rax], al
    12c6: 00 00                        	add	byte ptr [rax], al
    12c8: 06                           	<unknown>
    12c9: 00 00                        	add	byte ptr [rax], al
    12cb: 00 36                        	add	byte ptr [rsi], dh
		...
    12d5: 00 00                        	add	byte ptr [rax], al
    12d7: 00 f8                        	add	al, bh
    12d9: 6f                           	outsd	dx, dword ptr [rsi]
    12da: 00 00                        	add	byte ptr [rax], al
    12dc: 00 00                        	add	byte ptr [rax], al
    12de: 00 00                        	add	byte ptr [rax], al
    12e0: 06                           	<unknown>
    12e1: 00 00                        	add	byte ptr [rax], al
    12e3: 00 37                        	add	byte ptr [rdi], dh
		...
    12ed: 00 00                        	add	byte ptr [rax], al
    12ef: 00                           	<unknown>

Disassembly of section .rela.plt:

00000000000012f0 <.rela.plt>:
    12f0: 18 70 00                     	sbb	byte ptr [rax], dh
    12f3: 00 00                        	add	byte ptr [rax], al
    12f5: 00 00                        	add	byte ptr [rax], al
    12f7: 00 07                        	add	byte ptr [rdi], al
    12f9: 00 00                        	add	byte ptr [rax], al
    12fb: 00 01                        	add	byte ptr [rcx], al
		...
    1305: 00 00                        	add	byte ptr [rax], al
    1307: 00 20                        	add	byte ptr [rax], ah
    1309: 70 00                        	jo	0x130b <.rela.plt+0x1b>
    130b: 00 00                        	add	byte ptr [rax], al
    130d: 00 00                        	add	byte ptr [rax], al
    130f: 00 07                        	add	byte ptr [rdi], al
    1311: 00 00                        	add	byte ptr [rax], al
    1313: 00 02                        	add	byte ptr [rdx], al
		...
    131d: 00 00                        	add	byte ptr [rax], al
    131f: 00 28                        	add	byte ptr [rax], ch
    1321: 70 00                        	jo	0x1323 <.rela.plt+0x33>
    1323: 00 00                        	add	byte ptr [rax], al
    1325: 00 00                        	add	byte ptr [rax], al
    1327: 00 07                        	add	byte ptr [rdi], al
    1329: 00 00                        	add	byte ptr [rax], al
    132b: 00 03                        	add	byte ptr [rbx], al
		...
    1335: 00 00                        	add	byte ptr [rax], al
    1337: 00 30                        	add	byte ptr [rax], dh
    1339: 70 00                        	jo	0x133b <.rela.plt+0x4b>
    133b: 00 00                        	add	byte ptr [rax], al
    133d: 00 00                        	add	byte ptr [rax], al
    133f: 00 07                        	add	byte ptr [rdi], al
    1341: 00 00                        	add	byte ptr [rax], al
    1343: 00 04 00                     	add	byte ptr [rax + rax], al
		...
    134e: 00 00                        	add	byte ptr [rax], al
    1350: 38 70 00                     	cmp	byte ptr [rax], dh
    1353: 00 00                        	add	byte ptr [rax], al
    1355: 00 00                        	add	byte ptr [rax], al
    1357: 00 07                        	add	byte ptr [rdi], al
    1359: 00 00                        	add	byte ptr [rax], al
    135b: 00 05 00 00 00 00            	add	byte ptr [rip], al      # 0x1361 <.rela.plt+0x71>
    1361: 00 00                        	add	byte ptr [rax], al
    1363: 00 00                        	add	byte ptr [rax], al
    1365: 00 00                        	add	byte ptr [rax], al
    1367: 00 40 70                     	add	byte ptr [rax + 112], al
    136a: 00 00                        	add	byte ptr [rax], al
    136c: 00 00                        	add	byte ptr [rax], al
    136e: 00 00                        	add	byte ptr [rax], al
    1370: 07                           	<unknown>
    1371: 00 00                        	add	byte ptr [rax], al
    1373: 00 44 00 00                  	add	byte ptr [rax + rax], al
		...
    137f: 00 48 70                     	add	byte ptr [rax + 112], cl
    1382: 00 00                        	add	byte ptr [rax], al
    1384: 00 00                        	add	byte ptr [rax], al
    1386: 00 00                        	add	byte ptr [rax], al
    1388: 07                           	<unknown>
    1389: 00 00                        	add	byte ptr [rax], al
    138b: 00 07                        	add	byte ptr [rdi], al
		...
    1395: 00 00                        	add	byte ptr [rax], al
    1397: 00 50 70                     	add	byte ptr [rax + 112], dl
    139a: 00 00                        	add	byte ptr [rax], al
    139c: 00 00                        	add	byte ptr [rax], al
    139e: 00 00                        	add	byte ptr [rax], al
    13a0: 07                           	<unknown>
    13a1: 00 00                        	add	byte ptr [rax], al
    13a3: 00 08                        	add	byte ptr [rax], cl
		...
    13ad: 00 00                        	add	byte ptr [rax], al
    13af: 00 58 70                     	add	byte ptr [rax + 112], bl
    13b2: 00 00                        	add	byte ptr [rax], al
    13b4: 00 00                        	add	byte ptr [rax], al
    13b6: 00 00                        	add	byte ptr [rax], al
    13b8: 07                           	<unknown>
    13b9: 00 00                        	add	byte ptr [rax], al
    13bb: 00 09                        	add	byte ptr [rcx], cl
		...
    13c5: 00 00                        	add	byte ptr [rax], al
    13c7: 00 60 70                     	add	byte ptr [rax + 112], ah
    13ca: 00 00                        	add	byte ptr [rax], al
    13cc: 00 00                        	add	byte ptr [rax], al
    13ce: 00 00                        	add	byte ptr [rax], al
    13d0: 07                           	<unknown>
    13d1: 00 00                        	add	byte ptr [rax], al
    13d3: 00 0a                        	add	byte ptr [rdx], cl
		...
    13dd: 00 00                        	add	byte ptr [rax], al
    13df: 00 68 70                     	add	byte ptr [rax + 112], ch
    13e2: 00 00                        	add	byte ptr [rax], al
    13e4: 00 00                        	add	byte ptr [rax], al
    13e6: 00 00                        	add	byte ptr [rax], al
    13e8: 07                           	<unknown>
    13e9: 00 00                        	add	byte ptr [rax], al
    13eb: 00 0b                        	add	byte ptr [rbx], cl
		...
    13f5: 00 00                        	add	byte ptr [rax], al
    13f7: 00 70 70                     	add	byte ptr [rax + 112], dh
    13fa: 00 00                        	add	byte ptr [rax], al
    13fc: 00 00                        	add	byte ptr [rax], al
    13fe: 00 00                        	add	byte ptr [rax], al
    1400: 07                           	<unknown>
    1401: 00 00                        	add	byte ptr [rax], al
    1403: 00 0c 00                     	add	byte ptr [rax + rax], cl
		...
    140e: 00 00                        	add	byte ptr [rax], al
    1410: 78 70                        	js	0x1482 <.rela.plt+0x192>
    1412: 00 00                        	add	byte ptr [rax], al
    1414: 00 00                        	add	byte ptr [rax], al
    1416: 00 00                        	add	byte ptr [rax], al
    1418: 07                           	<unknown>
    1419: 00 00                        	add	byte ptr [rax], al
    141b: 00 0d 00 00 00 00            	add	byte ptr [rip], cl      # 0x1421 <.rela.plt+0x131>
    1421: 00 00                        	add	byte ptr [rax], al
    1423: 00 00                        	add	byte ptr [rax], al
    1425: 00 00                        	add	byte ptr [rax], al
    1427: 00 80 70 00 00 00            	add	byte ptr [rax + 112], al
    142d: 00 00                        	add	byte ptr [rax], al
    142f: 00 07                        	add	byte ptr [rdi], al
    1431: 00 00                        	add	byte ptr [rax], al
    1433: 00 0e                        	add	byte ptr [rsi], cl
		...
    143d: 00 00                        	add	byte ptr [rax], al
    143f: 00 88 70 00 00 00            	add	byte ptr [rax + 112], cl
    1445: 00 00                        	add	byte ptr [rax], al
    1447: 00 07                        	add	byte ptr [rdi], al
    1449: 00 00                        	add	byte ptr [rax], al
    144b: 00 0f                        	add	byte ptr [rdi], cl
		...
    1455: 00 00                        	add	byte ptr [rax], al
    1457: 00 90 70 00 00 00            	add	byte ptr [rax + 112], dl
    145d: 00 00                        	add	byte ptr [rax], al
    145f: 00 07                        	add	byte ptr [rdi], al
    1461: 00 00                        	add	byte ptr [rax], al
    1463: 00 10                        	add	byte ptr [rax], dl
		...
    146d: 00 00                        	add	byte ptr [rax], al
    146f: 00 98 70 00 00 00            	add	byte ptr [rax + 112], bl
    1475: 00 00                        	add	byte ptr [rax], al
    1477: 00 07                        	add	byte ptr [rdi], al
    1479: 00 00                        	add	byte ptr [rax], al
    147b: 00 11                        	add	byte ptr [rcx], dl
		...
    1485: 00 00                        	add	byte ptr [rax], al
    1487: 00 a0 70 00 00 00            	add	byte ptr [rax + 112], ah
    148d: 00 00                        	add	byte ptr [rax], al
    148f: 00 07                        	add	byte ptr [rdi], al
    1491: 00 00                        	add	byte ptr [rax], al
    1493: 00 12                        	add	byte ptr [rdx], dl
		...
    149d: 00 00                        	add	byte ptr [rax], al
    149f: 00 a8 70 00 00 00            	add	byte ptr [rax + 112], ch
    14a5: 00 00                        	add	byte ptr [rax], al
    14a7: 00 07                        	add	byte ptr [rdi], al
    14a9: 00 00                        	add	byte ptr [rax], al
    14ab: 00 3c 00                     	add	byte ptr [rax + rax], bh
		...
    14b6: 00 00                        	add	byte ptr [rax], al
    14b8: b0 70                        	mov	al, 112
    14ba: 00 00                        	add	byte ptr [rax], al
    14bc: 00 00                        	add	byte ptr [rax], al
    14be: 00 00                        	add	byte ptr [rax], al
    14c0: 07                           	<unknown>
    14c1: 00 00                        	add	byte ptr [rax], al
    14c3: 00 13                        	add	byte ptr [rbx], dl
		...
    14cd: 00 00                        	add	byte ptr [rax], al
    14cf: 00 b8 70 00 00 00            	add	byte ptr [rax + 112], bh
    14d5: 00 00                        	add	byte ptr [rax], al
    14d7: 00 07                        	add	byte ptr [rdi], al
    14d9: 00 00                        	add	byte ptr [rax], al
    14db: 00 14 00                     	add	byte ptr [rax + rax], dl
		...
    14e6: 00 00                        	add	byte ptr [rax], al
    14e8: c0 70 00                     	<unknown>
    14eb: 00 00                        	add	byte ptr [rax], al
    14ed: 00 00                        	add	byte ptr [rax], al
    14ef: 00 07                        	add	byte ptr [rdi], al
    14f1: 00 00                        	add	byte ptr [rax], al
    14f3: 00 15 00 00 00 00            	add	byte ptr [rip], dl      # 0x14f9 <.rela.plt+0x209>
    14f9: 00 00                        	add	byte ptr [rax], al
    14fb: 00 00                        	add	byte ptr [rax], al
    14fd: 00 00                        	add	byte ptr [rax], al
    14ff: 00 c8                        	add	al, cl
    1501: 70 00                        	jo	0x1503 <.rela.plt+0x213>
    1503: 00 00                        	add	byte ptr [rax], al
    1505: 00 00                        	add	byte ptr [rax], al
    1507: 00 07                        	add	byte ptr [rdi], al
    1509: 00 00                        	add	byte ptr [rax], al
    150b: 00 16                        	add	byte ptr [rsi], dl
		...
    1515: 00 00                        	add	byte ptr [rax], al
    1517: 00 d0                        	add	al, dl
    1519: 70 00                        	jo	0x151b <.rela.plt+0x22b>
    151b: 00 00                        	add	byte ptr [rax], al
    151d: 00 00                        	add	byte ptr [rax], al
    151f: 00 07                        	add	byte ptr [rdi], al
    1521: 00 00                        	add	byte ptr [rax], al
    1523: 00 17                        	add	byte ptr [rdi], dl
		...
    152d: 00 00                        	add	byte ptr [rax], al
    152f: 00 d8                        	add	al, bl
    1531: 70 00                        	jo	0x1533 <.rela.plt+0x243>
    1533: 00 00                        	add	byte ptr [rax], al
    1535: 00 00                        	add	byte ptr [rax], al
    1537: 00 07                        	add	byte ptr [rdi], al
    1539: 00 00                        	add	byte ptr [rax], al
    153b: 00 3e                        	add	byte ptr [rsi], bh
		...
    1545: 00 00                        	add	byte ptr [rax], al
    1547: 00 e0                        	add	al, ah
    1549: 70 00                        	jo	0x154b <.rela.plt+0x25b>
    154b: 00 00                        	add	byte ptr [rax], al
    154d: 00 00                        	add	byte ptr [rax], al
    154f: 00 07                        	add	byte ptr [rdi], al
    1551: 00 00                        	add	byte ptr [rax], al
    1553: 00 18                        	add	byte ptr [rax], bl
		...
    155d: 00 00                        	add	byte ptr [rax], al
    155f: 00 e8                        	add	al, ch
    1561: 70 00                        	jo	0x1563 <.rela.plt+0x273>
    1563: 00 00                        	add	byte ptr [rax], al
    1565: 00 00                        	add	byte ptr [rax], al
    1567: 00 07                        	add	byte ptr [rdi], al
    1569: 00 00                        	add	byte ptr [rax], al
    156b: 00 19                        	add	byte ptr [rcx], bl
		...
    1575: 00 00                        	add	byte ptr [rax], al
    1577: 00 f0                        	add	al, dh
    1579: 70 00                        	jo	0x157b <.rela.plt+0x28b>
    157b: 00 00                        	add	byte ptr [rax], al
    157d: 00 00                        	add	byte ptr [rax], al
    157f: 00 07                        	add	byte ptr [rdi], al
    1581: 00 00                        	add	byte ptr [rax], al
    1583: 00 1a                        	add	byte ptr [rdx], bl
		...
    158d: 00 00                        	add	byte ptr [rax], al
    158f: 00 f8                        	add	al, bh
    1591: 70 00                        	jo	0x1593 <.rela.plt+0x2a3>
    1593: 00 00                        	add	byte ptr [rax], al
    1595: 00 00                        	add	byte ptr [rax], al
    1597: 00 07                        	add	byte ptr [rdi], al
    1599: 00 00                        	add	byte ptr [rax], al
    159b: 00 1b                        	add	byte ptr [rbx], bl
		...
    15a9: 71 00                        	jno	0x15ab <.rela.plt+0x2bb>
    15ab: 00 00                        	add	byte ptr [rax], al
    15ad: 00 00                        	add	byte ptr [rax], al
    15af: 00 07                        	add	byte ptr [rdi], al
    15b1: 00 00                        	add	byte ptr [rax], al
    15b3: 00 1c 00                     	add	byte ptr [rax + rax], bl
		...
    15be: 00 00                        	add	byte ptr [rax], al
    15c0: 08 71 00                     	or	byte ptr [rcx], dh
    15c3: 00 00                        	add	byte ptr [rax], al
    15c5: 00 00                        	add	byte ptr [rax], al
    15c7: 00 07                        	add	byte ptr [rdi], al
    15c9: 00 00                        	add	byte ptr [rax], al
    15cb: 00 1e                        	add	byte ptr [rsi], bl
		...
    15d5: 00 00                        	add	byte ptr [rax], al
    15d7: 00 10                        	add	byte ptr [rax], dl
    15d9: 71 00                        	jno	0x15db <.rela.plt+0x2eb>
    15db: 00 00                        	add	byte ptr [rax], al
    15dd: 00 00                        	add	byte ptr [rax], al
    15df: 00 07                        	add	byte ptr [rdi], al
    15e1: 00 00                        	add	byte ptr [rax], al
    15e3: 00 1f                        	add	byte ptr [rdi], bl
		...
    15ed: 00 00                        	add	byte ptr [rax], al
    15ef: 00 18                        	add	byte ptr [rax], bl
    15f1: 71 00                        	jno	0x15f3 <.rela.plt+0x303>
    15f3: 00 00                        	add	byte ptr [rax], al
    15f5: 00 00                        	add	byte ptr [rax], al
    15f7: 00 07                        	add	byte ptr [rdi], al
    15f9: 00 00                        	add	byte ptr [rax], al
    15fb: 00 20                        	add	byte ptr [rax], ah
		...
    1605: 00 00                        	add	byte ptr [rax], al
    1607: 00 20                        	add	byte ptr [rax], ah
    1609: 71 00                        	jno	0x160b <.rela.plt+0x31b>
    160b: 00 00                        	add	byte ptr [rax], al
    160d: 00 00                        	add	byte ptr [rax], al
    160f: 00 07                        	add	byte ptr [rdi], al
    1611: 00 00                        	add	byte ptr [rax], al
    1613: 00 21                        	add	byte ptr [rcx], ah
		...
    161d: 00 00                        	add	byte ptr [rax], al
    161f: 00 28                        	add	byte ptr [rax], ch
    1621: 71 00                        	jno	0x1623 <.rela.plt+0x333>
    1623: 00 00                        	add	byte ptr [rax], al
    1625: 00 00                        	add	byte ptr [rax], al
    1627: 00 07                        	add	byte ptr [rdi], al
    1629: 00 00                        	add	byte ptr [rax], al
    162b: 00 22                        	add	byte ptr [rdx], ah
		...
    1635: 00 00                        	add	byte ptr [rax], al
    1637: 00 30                        	add	byte ptr [rax], dh
    1639: 71 00                        	jno	0x163b <.rela.plt+0x34b>
    163b: 00 00                        	add	byte ptr [rax], al
    163d: 00 00                        	add	byte ptr [rax], al
    163f: 00 07                        	add	byte ptr [rdi], al
    1641: 00 00                        	add	byte ptr [rax], al
    1643: 00 23                        	add	byte ptr [rbx], ah
		...
    164d: 00 00                        	add	byte ptr [rax], al
    164f: 00 38                        	add	byte ptr [rax], bh
    1651: 71 00                        	jno	0x1653 <.rela.plt+0x363>
    1653: 00 00                        	add	byte ptr [rax], al
    1655: 00 00                        	add	byte ptr [rax], al
    1657: 00 07                        	add	byte ptr [rdi], al
    1659: 00 00                        	add	byte ptr [rax], al
    165b: 00 24 00                     	add	byte ptr [rax + rax], ah
		...
    1666: 00 00                        	add	byte ptr [rax], al
    1668: 40 71 00                     	jno	0x166b <.rela.plt+0x37b>
    166b: 00 00                        	add	byte ptr [rax], al
    166d: 00 00                        	add	byte ptr [rax], al
    166f: 00 07                        	add	byte ptr [rdi], al
    1671: 00 00                        	add	byte ptr [rax], al
    1673: 00 25 00 00 00 00            	add	byte ptr [rip], ah      # 0x1679 <.rela.plt+0x389>
    1679: 00 00                        	add	byte ptr [rax], al
    167b: 00 00                        	add	byte ptr [rax], al
    167d: 00 00                        	add	byte ptr [rax], al
    167f: 00 48 71                     	add	byte ptr [rax + 113], cl
    1682: 00 00                        	add	byte ptr [rax], al
    1684: 00 00                        	add	byte ptr [rax], al
    1686: 00 00                        	add	byte ptr [rax], al
    1688: 07                           	<unknown>
    1689: 00 00                        	add	byte ptr [rax], al
    168b: 00 26                        	add	byte ptr [rsi], ah
		...
    1695: 00 00                        	add	byte ptr [rax], al
    1697: 00 50 71                     	add	byte ptr [rax + 113], dl
    169a: 00 00                        	add	byte ptr [rax], al
    169c: 00 00                        	add	byte ptr [rax], al
    169e: 00 00                        	add	byte ptr [rax], al
    16a0: 07                           	<unknown>
    16a1: 00 00                        	add	byte ptr [rax], al
    16a3: 00 27                        	add	byte ptr [rdi], ah
		...
    16ad: 00 00                        	add	byte ptr [rax], al
    16af: 00 58 71                     	add	byte ptr [rax + 113], bl
    16b2: 00 00                        	add	byte ptr [rax], al
    16b4: 00 00                        	add	byte ptr [rax], al
    16b6: 00 00                        	add	byte ptr [rax], al
    16b8: 07                           	<unknown>
    16b9: 00 00                        	add	byte ptr [rax], al
    16bb: 00 28                        	add	byte ptr [rax], ch
		...
    16c5: 00 00                        	add	byte ptr [rax], al
    16c7: 00 60 71                     	add	byte ptr [rax + 113], ah
    16ca: 00 00                        	add	byte ptr [rax], al
    16cc: 00 00                        	add	byte ptr [rax], al
    16ce: 00 00                        	add	byte ptr [rax], al
    16d0: 07                           	<unknown>
    16d1: 00 00                        	add	byte ptr [rax], al
    16d3: 00 29                        	add	byte ptr [rcx], ch
		...
    16dd: 00 00                        	add	byte ptr [rax], al
    16df: 00 68 71                     	add	byte ptr [rax + 113], ch
    16e2: 00 00                        	add	byte ptr [rax], al
    16e4: 00 00                        	add	byte ptr [rax], al
    16e6: 00 00                        	add	byte ptr [rax], al
    16e8: 07                           	<unknown>
    16e9: 00 00                        	add	byte ptr [rax], al
    16eb: 00 2a                        	add	byte ptr [rdx], ch
		...
    16f5: 00 00                        	add	byte ptr [rax], al
    16f7: 00 70 71                     	add	byte ptr [rax + 113], dh
    16fa: 00 00                        	add	byte ptr [rax], al
    16fc: 00 00                        	add	byte ptr [rax], al
    16fe: 00 00                        	add	byte ptr [rax], al
    1700: 07                           	<unknown>
    1701: 00 00                        	add	byte ptr [rax], al
    1703: 00 2b                        	add	byte ptr [rbx], ch
		...
    170d: 00 00                        	add	byte ptr [rax], al
    170f: 00 78 71                     	add	byte ptr [rax + 113], bh
    1712: 00 00                        	add	byte ptr [rax], al
    1714: 00 00                        	add	byte ptr [rax], al
    1716: 00 00                        	add	byte ptr [rax], al
    1718: 07                           	<unknown>
    1719: 00 00                        	add	byte ptr [rax], al
    171b: 00 2c 00                     	add	byte ptr [rax + rax], ch
		...
    1726: 00 00                        	add	byte ptr [rax], al
    1728: 80 71 00 00                  	xor	byte ptr [rcx], 0
    172c: 00 00                        	add	byte ptr [rax], al
    172e: 00 00                        	add	byte ptr [rax], al
    1730: 07                           	<unknown>
    1731: 00 00                        	add	byte ptr [rax], al
    1733: 00 2d 00 00 00 00            	add	byte ptr [rip], ch      # 0x1739 <.rela.plt+0x449>
    1739: 00 00                        	add	byte ptr [rax], al
    173b: 00 00                        	add	byte ptr [rax], al
    173d: 00 00                        	add	byte ptr [rax], al
    173f: 00 88 71 00 00 00            	add	byte ptr [rax + 113], cl
    1745: 00 00                        	add	byte ptr [rax], al
    1747: 00 07                        	add	byte ptr [rdi], al
    1749: 00 00                        	add	byte ptr [rax], al
    174b: 00 49 00                     	add	byte ptr [rcx], cl
		...
    1756: 00 00                        	add	byte ptr [rax], al
    1758: 90                           	nop
    1759: 71 00                        	jno	0x175b <.rela.plt+0x46b>
    175b: 00 00                        	add	byte ptr [rax], al
    175d: 00 00                        	add	byte ptr [rax], al
    175f: 00 07                        	add	byte ptr [rdi], al
    1761: 00 00                        	add	byte ptr [rax], al
    1763: 00 2e                        	add	byte ptr [rsi], ch
		...
    176d: 00 00                        	add	byte ptr [rax], al
    176f: 00 98 71 00 00 00            	add	byte ptr [rax + 113], bl
    1775: 00 00                        	add	byte ptr [rax], al
    1777: 00 07                        	add	byte ptr [rdi], al
    1779: 00 00                        	add	byte ptr [rax], al
    177b: 00 2f                        	add	byte ptr [rdi], ch
		...
    1785: 00 00                        	add	byte ptr [rax], al
    1787: 00 a0 71 00 00 00            	add	byte ptr [rax + 113], ah
    178d: 00 00                        	add	byte ptr [rax], al
    178f: 00 07                        	add	byte ptr [rdi], al
    1791: 00 00                        	add	byte ptr [rax], al
    1793: 00 30                        	add	byte ptr [rax], dh
		...
    179d: 00 00                        	add	byte ptr [rax], al
    179f: 00 a8 71 00 00 00            	add	byte ptr [rax + 113], ch
    17a5: 00 00                        	add	byte ptr [rax], al
    17a7: 00 07                        	add	byte ptr [rdi], al
    17a9: 00 00                        	add	byte ptr [rax], al
    17ab: 00 31                        	add	byte ptr [rcx], dh
		...
    17b5: 00 00                        	add	byte ptr [rax], al
    17b7: 00 b0 71 00 00 00            	add	byte ptr [rax + 113], dh
    17bd: 00 00                        	add	byte ptr [rax], al
    17bf: 00 07                        	add	byte ptr [rdi], al
    17c1: 00 00                        	add	byte ptr [rax], al
    17c3: 00 32                        	add	byte ptr [rdx], dh
		...
    17cd: 00 00                        	add	byte ptr [rax], al
    17cf: 00 b8 71 00 00 00            	add	byte ptr [rax + 113], bh
    17d5: 00 00                        	add	byte ptr [rax], al
    17d7: 00 07                        	add	byte ptr [rdi], al
    17d9: 00 00                        	add	byte ptr [rax], al
    17db: 00 33                        	add	byte ptr [rbx], dh
		...
    17e5: 00 00                        	add	byte ptr [rax], al
    17e7: 00 c0                        	add	al, al
    17e9: 71 00                        	jno	0x17eb <.rela.plt+0x4fb>
    17eb: 00 00                        	add	byte ptr [rax], al
    17ed: 00 00                        	add	byte ptr [rax], al
    17ef: 00 07                        	add	byte ptr [rdi], al
    17f1: 00 00                        	add	byte ptr [rax], al
    17f3: 00 35 00 00 00 00            	add	byte ptr [rip], dh      # 0x17f9 <.rela.plt+0x509>
    17f9: 00 00                        	add	byte ptr [rax], al
    17fb: 00 00                        	add	byte ptr [rax], al
    17fd: 00 00                        	add	byte ptr [rax], al
    17ff: 00                           	<unknown>

Disassembly of section .init:

0000000000002000 <_init>:
    2000: f3 0f 1e fa                  	endbr64
    2004: 48 83 ec 08                  	sub	rsp, 8
    2008: 48 8b 05 d1 4f 00 00         	mov	rax, qword ptr [rip + 20433] # 0x6fe0 <vkUpdateDescriptorSets+0x6fe0>
    200f: 48 85 c0                     	test	rax, rax
    2012: 74 02                        	je	0x2016 <_init+0x16>
    2014: ff d0                        	call	rax
    2016: 48 83 c4 08                  	add	rsp, 8
    201a: c3                           	ret

Disassembly of section .plt:

0000000000002020 <.plt>:
    2020: ff 35 e2 4f 00 00            	push	qword ptr [rip + 20450] # 0x7008 <_GLOBAL_OFFSET_TABLE_+0x8>
    2026: ff 25 e4 4f 00 00            	jmp	qword ptr [rip + 20452] # 0x7010 <_GLOBAL_OFFSET_TABLE_+0x10>
    202c: 0f 1f 40 00                  	nop	dword ptr [rax]

0000000000002030 <vkEnumeratePhysicalDevices@plt>:
    2030: ff 25 e2 4f 00 00            	jmp	qword ptr [rip + 20450] # 0x7018 <_GLOBAL_OFFSET_TABLE_+0x18>
    2036: 68 00 00 00 00               	push	0
    203b: e9 e0 ff ff ff               	jmp	0x2020 <.plt>

0000000000002040 <vkCreateDescriptorSetLayout@plt>:
    2040: ff 25 da 4f 00 00            	jmp	qword ptr [rip + 20442] # 0x7020 <_GLOBAL_OFFSET_TABLE_+0x20>
    2046: 68 01 00 00 00               	push	1
    204b: e9 d0 ff ff ff               	jmp	0x2020 <.plt>

0000000000002050 <free@plt>:
    2050: ff 25 d2 4f 00 00            	jmp	qword ptr [rip + 20434] # 0x7028 <_GLOBAL_OFFSET_TABLE_+0x28>
    2056: 68 02 00 00 00               	push	2
    205b: e9 c0 ff ff ff               	jmp	0x2020 <.plt>

0000000000002060 <vkCmdBindDescriptorSets@plt>:
    2060: ff 25 ca 4f 00 00            	jmp	qword ptr [rip + 20426] # 0x7030 <_GLOBAL_OFFSET_TABLE_+0x30>
    2066: 68 03 00 00 00               	push	3
    206b: e9 b0 ff ff ff               	jmp	0x2020 <.plt>

0000000000002070 <vkQueueWaitIdle@plt>:
    2070: ff 25 c2 4f 00 00            	jmp	qword ptr [rip + 20418] # 0x7038 <_GLOBAL_OFFSET_TABLE_+0x38>
    2076: 68 04 00 00 00               	push	4
    207b: e9 a0 ff ff ff               	jmp	0x2020 <.plt>

0000000000002080 <nnFindMemoryProperties@plt>:
    2080: ff 25 ba 4f 00 00            	jmp	qword ptr [rip + 20410] # 0x7040 <_GLOBAL_OFFSET_TABLE_+0x40>
    2086: 68 05 00 00 00               	push	5
    208b: e9 90 ff ff ff               	jmp	0x2020 <.plt>

0000000000002090 <fread@plt>:
    2090: ff 25 b2 4f 00 00            	jmp	qword ptr [rip + 20402] # 0x7048 <_GLOBAL_OFFSET_TABLE_+0x48>
    2096: 68 06 00 00 00               	push	6
    209b: e9 80 ff ff ff               	jmp	0x2020 <.plt>

00000000000020a0 <vkCmdBindPipeline@plt>:
    20a0: ff 25 aa 4f 00 00            	jmp	qword ptr [rip + 20394] # 0x7050 <_GLOBAL_OFFSET_TABLE_+0x50>
    20a6: 68 07 00 00 00               	push	7
    20ab: e9 70 ff ff ff               	jmp	0x2020 <.plt>

00000000000020b0 <vkGetPhysicalDeviceQueueFamilyProperties@plt>:
    20b0: ff 25 a2 4f 00 00            	jmp	qword ptr [rip + 20386] # 0x7058 <_GLOBAL_OFFSET_TABLE_+0x58>
    20b6: 68 08 00 00 00               	push	8
    20bb: e9 60 ff ff ff               	jmp	0x2020 <.plt>

00000000000020c0 <vkEnumerateDeviceExtensionProperties@plt>:
    20c0: ff 25 9a 4f 00 00            	jmp	qword ptr [rip + 20378] # 0x7060 <_GLOBAL_OFFSET_TABLE_+0x60>
    20c6: 68 09 00 00 00               	push	9
    20cb: e9 50 ff ff ff               	jmp	0x2020 <.plt>

00000000000020d0 <fclose@plt>:
    20d0: ff 25 92 4f 00 00            	jmp	qword ptr [rip + 20370] # 0x7068 <_GLOBAL_OFFSET_TABLE_+0x68>
    20d6: 68 0a 00 00 00               	push	10
    20db: e9 40 ff ff ff               	jmp	0x2020 <.plt>

00000000000020e0 <vkCreatePipelineCache@plt>:
    20e0: ff 25 8a 4f 00 00            	jmp	qword ptr [rip + 20362] # 0x7070 <_GLOBAL_OFFSET_TABLE_+0x70>
    20e6: 68 0b 00 00 00               	push	11
    20eb: e9 30 ff ff ff               	jmp	0x2020 <.plt>

00000000000020f0 <vkCreateCommandPool@plt>:
    20f0: ff 25 82 4f 00 00            	jmp	qword ptr [rip + 20354] # 0x7078 <_GLOBAL_OFFSET_TABLE_+0x78>
    20f6: 68 0c 00 00 00               	push	12
    20fb: e9 20 ff ff ff               	jmp	0x2020 <.plt>

0000000000002100 <printf@plt>:
    2100: ff 25 7a 4f 00 00            	jmp	qword ptr [rip + 20346] # 0x7080 <_GLOBAL_OFFSET_TABLE_+0x80>
    2106: 68 0d 00 00 00               	push	13
    210b: e9 10 ff ff ff               	jmp	0x2020 <.plt>

0000000000002110 <rewind@plt>:
    2110: ff 25 72 4f 00 00            	jmp	qword ptr [rip + 20338] # 0x7088 <_GLOBAL_OFFSET_TABLE_+0x88>
    2116: 68 0e 00 00 00               	push	14
    211b: e9 00 ff ff ff               	jmp	0x2020 <.plt>

0000000000002120 <vkGetDeviceQueue@plt>:
    2120: ff 25 6a 4f 00 00            	jmp	qword ptr [rip + 20330] # 0x7090 <_GLOBAL_OFFSET_TABLE_+0x90>
    2126: 68 0f 00 00 00               	push	15
    212b: e9 f0 fe ff ff               	jmp	0x2020 <.plt>

0000000000002130 <vkGetBufferMemoryRequirements@plt>:
    2130: ff 25 62 4f 00 00            	jmp	qword ptr [rip + 20322] # 0x7098 <_GLOBAL_OFFSET_TABLE_+0x98>
    2136: 68 10 00 00 00               	push	16
    213b: e9 e0 fe ff ff               	jmp	0x2020 <.plt>

0000000000002140 <vkUnmapMemory@plt>:
    2140: ff 25 5a 4f 00 00            	jmp	qword ptr [rip + 20314] # 0x70a0 <_GLOBAL_OFFSET_TABLE_+0xa0>
    2146: 68 11 00 00 00               	push	17
    214b: e9 d0 fe ff ff               	jmp	0x2020 <.plt>

0000000000002150 <nnCreateVkDescriptorSetLayoutBindingStorageBuffer@plt>:
    2150: ff 25 52 4f 00 00            	jmp	qword ptr [rip + 20306] # 0x70a8 <_GLOBAL_OFFSET_TABLE_+0xa8>
    2156: 68 12 00 00 00               	push	18
    215b: e9 c0 fe ff ff               	jmp	0x2020 <.plt>

0000000000002160 <vkGetInstanceProcAddr@plt>:
    2160: ff 25 4a 4f 00 00            	jmp	qword ptr [rip + 20298] # 0x70b0 <_GLOBAL_OFFSET_TABLE_+0xb0>
    2166: 68 13 00 00 00               	push	19
    216b: e9 b0 fe ff ff               	jmp	0x2020 <.plt>

0000000000002170 <vkDestroyPipelineCache@plt>:
    2170: ff 25 42 4f 00 00            	jmp	qword ptr [rip + 20290] # 0x70b8 <_GLOBAL_OFFSET_TABLE_+0xb8>
    2176: 68 14 00 00 00               	push	20
    217b: e9 a0 fe ff ff               	jmp	0x2020 <.plt>

0000000000002180 <vkQueueSubmit@plt>:
    2180: ff 25 3a 4f 00 00            	jmp	qword ptr [rip + 20282] # 0x70c0 <_GLOBAL_OFFSET_TABLE_+0xc0>
    2186: 68 15 00 00 00               	push	21
    218b: e9 90 fe ff ff               	jmp	0x2020 <.plt>

0000000000002190 <vkEndCommandBuffer@plt>:
    2190: ff 25 32 4f 00 00            	jmp	qword ptr [rip + 20274] # 0x70c8 <_GLOBAL_OFFSET_TABLE_+0xc8>
    2196: 68 16 00 00 00               	push	22
    219b: e9 80 fe ff ff               	jmp	0x2020 <.plt>

00000000000021a0 <fputc@plt>:
    21a0: ff 25 2a 4f 00 00            	jmp	qword ptr [rip + 20266] # 0x70d0 <_GLOBAL_OFFSET_TABLE_+0xd0>
    21a6: 68 17 00 00 00               	push	23
    21ab: e9 70 fe ff ff               	jmp	0x2020 <.plt>

00000000000021b0 <nnReadBinaryFile@plt>:
    21b0: ff 25 22 4f 00 00            	jmp	qword ptr [rip + 20258] # 0x70d8 <_GLOBAL_OFFSET_TABLE_+0xd8>
    21b6: 68 18 00 00 00               	push	24
    21bb: e9 60 fe ff ff               	jmp	0x2020 <.plt>

00000000000021c0 <strcmp@plt>:
    21c0: ff 25 1a 4f 00 00            	jmp	qword ptr [rip + 20250] # 0x70e0 <_GLOBAL_OFFSET_TABLE_+0xe0>
    21c6: 68 19 00 00 00               	push	25
    21cb: e9 50 fe ff ff               	jmp	0x2020 <.plt>

00000000000021d0 <vkDestroyShaderModule@plt>:
    21d0: ff 25 12 4f 00 00            	jmp	qword ptr [rip + 20242] # 0x70e8 <_GLOBAL_OFFSET_TABLE_+0xe8>
    21d6: 68 1a 00 00 00               	push	26
    21db: e9 40 fe ff ff               	jmp	0x2020 <.plt>

00000000000021e0 <fprintf@plt>:
    21e0: ff 25 0a 4f 00 00            	jmp	qword ptr [rip + 20234] # 0x70f0 <_GLOBAL_OFFSET_TABLE_+0xf0>
    21e6: 68 1b 00 00 00               	push	27
    21eb: e9 30 fe ff ff               	jmp	0x2020 <.plt>

00000000000021f0 <ftell@plt>:
    21f0: ff 25 02 4f 00 00            	jmp	qword ptr [rip + 20226] # 0x70f8 <_GLOBAL_OFFSET_TABLE_+0xf8>
    21f6: 68 1c 00 00 00               	push	28
    21fb: e9 20 fe ff ff               	jmp	0x2020 <.plt>

0000000000002200 <vkCreateComputePipelines@plt>:
    2200: ff 25 fa 4e 00 00            	jmp	qword ptr [rip + 20218] # 0x7100 <_GLOBAL_OFFSET_TABLE_+0x100>
    2206: 68 1d 00 00 00               	push	29
    220b: e9 10 fe ff ff               	jmp	0x2020 <.plt>

0000000000002210 <memcpy@plt>:
    2210: ff 25 f2 4e 00 00            	jmp	qword ptr [rip + 20210] # 0x7108 <_GLOBAL_OFFSET_TABLE_+0x108>
    2216: 68 1e 00 00 00               	push	30
    221b: e9 00 fe ff ff               	jmp	0x2020 <.plt>

0000000000002220 <vkGetPhysicalDeviceMemoryProperties@plt>:
    2220: ff 25 ea 4e 00 00            	jmp	qword ptr [rip + 20202] # 0x7110 <_GLOBAL_OFFSET_TABLE_+0x110>
    2226: 68 1f 00 00 00               	push	31
    222b: e9 f0 fd ff ff               	jmp	0x2020 <.plt>

0000000000002230 <vkAllocateMemory@plt>:
    2230: ff 25 e2 4e 00 00            	jmp	qword ptr [rip + 20194] # 0x7118 <_GLOBAL_OFFSET_TABLE_+0x118>
    2236: 68 20 00 00 00               	push	32
    223b: e9 e0 fd ff ff               	jmp	0x2020 <.plt>

0000000000002240 <malloc@plt>:
    2240: ff 25 da 4e 00 00            	jmp	qword ptr [rip + 20186] # 0x7120 <_GLOBAL_OFFSET_TABLE_+0x120>
    2246: 68 21 00 00 00               	push	33
    224b: e9 d0 fd ff ff               	jmp	0x2020 <.plt>

0000000000002250 <vkMapMemory@plt>:
    2250: ff 25 d2 4e 00 00            	jmp	qword ptr [rip + 20178] # 0x7128 <_GLOBAL_OFFSET_TABLE_+0x128>
    2256: 68 22 00 00 00               	push	34
    225b: e9 c0 fd ff ff               	jmp	0x2020 <.plt>

0000000000002260 <vkAllocateDescriptorSets@plt>:
    2260: ff 25 ca 4e 00 00            	jmp	qword ptr [rip + 20170] # 0x7130 <_GLOBAL_OFFSET_TABLE_+0x130>
    2266: 68 23 00 00 00               	push	35
    226b: e9 b0 fd ff ff               	jmp	0x2020 <.plt>

0000000000002270 <vkCreateBuffer@plt>:
    2270: ff 25 c2 4e 00 00            	jmp	qword ptr [rip + 20162] # 0x7138 <_GLOBAL_OFFSET_TABLE_+0x138>
    2276: 68 24 00 00 00               	push	36
    227b: e9 a0 fd ff ff               	jmp	0x2020 <.plt>

0000000000002280 <vkCreatePipelineLayout@plt>:
    2280: ff 25 ba 4e 00 00            	jmp	qword ptr [rip + 20154] # 0x7140 <_GLOBAL_OFFSET_TABLE_+0x140>
    2286: 68 25 00 00 00               	push	37
    228b: e9 90 fd ff ff               	jmp	0x2020 <.plt>

0000000000002290 <fseek@plt>:
    2290: ff 25 b2 4e 00 00            	jmp	qword ptr [rip + 20146] # 0x7148 <_GLOBAL_OFFSET_TABLE_+0x148>
    2296: 68 26 00 00 00               	push	38
    229b: e9 80 fd ff ff               	jmp	0x2020 <.plt>

00000000000022a0 <vkCreateDevice@plt>:
    22a0: ff 25 aa 4e 00 00            	jmp	qword ptr [rip + 20138] # 0x7150 <_GLOBAL_OFFSET_TABLE_+0x150>
    22a6: 68 27 00 00 00               	push	39
    22ab: e9 70 fd ff ff               	jmp	0x2020 <.plt>

00000000000022b0 <vkCreateShaderModule@plt>:
    22b0: ff 25 a2 4e 00 00            	jmp	qword ptr [rip + 20130] # 0x7158 <_GLOBAL_OFFSET_TABLE_+0x158>
    22b6: 68 28 00 00 00               	push	40
    22bb: e9 60 fd ff ff               	jmp	0x2020 <.plt>

00000000000022c0 <vkAllocateCommandBuffers@plt>:
    22c0: ff 25 9a 4e 00 00            	jmp	qword ptr [rip + 20122] # 0x7160 <_GLOBAL_OFFSET_TABLE_+0x160>
    22c6: 68 29 00 00 00               	push	41
    22cb: e9 50 fd ff ff               	jmp	0x2020 <.plt>

00000000000022d0 <vkCmdDispatch@plt>:
    22d0: ff 25 92 4e 00 00            	jmp	qword ptr [rip + 20114] # 0x7168 <_GLOBAL_OFFSET_TABLE_+0x168>
    22d6: 68 2a 00 00 00               	push	42
    22db: e9 40 fd ff ff               	jmp	0x2020 <.plt>

00000000000022e0 <vkUpdateDescriptorSets@plt>:
    22e0: ff 25 8a 4e 00 00            	jmp	qword ptr [rip + 20106] # 0x7170 <_GLOBAL_OFFSET_TABLE_+0x170>
    22e6: 68 2b 00 00 00               	push	43
    22eb: e9 30 fd ff ff               	jmp	0x2020 <.plt>

00000000000022f0 <fopen@plt>:
    22f0: ff 25 82 4e 00 00            	jmp	qword ptr [rip + 20098] # 0x7178 <_GLOBAL_OFFSET_TABLE_+0x178>
    22f6: 68 2c 00 00 00               	push	44
    22fb: e9 20 fd ff ff               	jmp	0x2020 <.plt>

0000000000002300 <vkGetPipelineCacheData@plt>:
    2300: ff 25 7a 4e 00 00            	jmp	qword ptr [rip + 20090] # 0x7180 <_GLOBAL_OFFSET_TABLE_+0x180>
    2306: 68 2d 00 00 00               	push	45
    230b: e9 10 fd ff ff               	jmp	0x2020 <.plt>

0000000000002310 <nnWriteBinaryFile@plt>:
    2310: ff 25 72 4e 00 00            	jmp	qword ptr [rip + 20082] # 0x7188 <_GLOBAL_OFFSET_TABLE_+0x188>
    2316: 68 2e 00 00 00               	push	46
    231b: e9 00 fd ff ff               	jmp	0x2020 <.plt>

0000000000002320 <vkCreateInstance@plt>:
    2320: ff 25 6a 4e 00 00            	jmp	qword ptr [rip + 20074] # 0x7190 <_GLOBAL_OFFSET_TABLE_+0x190>
    2326: 68 2f 00 00 00               	push	47
    232b: e9 f0 fc ff ff               	jmp	0x2020 <.plt>

0000000000002330 <exit@plt>:
    2330: ff 25 62 4e 00 00            	jmp	qword ptr [rip + 20066] # 0x7198 <_GLOBAL_OFFSET_TABLE_+0x198>
    2336: 68 30 00 00 00               	push	48
    233b: e9 e0 fc ff ff               	jmp	0x2020 <.plt>

0000000000002340 <vkCreateDescriptorPool@plt>:
    2340: ff 25 5a 4e 00 00            	jmp	qword ptr [rip + 20058] # 0x71a0 <_GLOBAL_OFFSET_TABLE_+0x1a0>
    2346: 68 31 00 00 00               	push	49
    234b: e9 d0 fc ff ff               	jmp	0x2020 <.plt>

0000000000002350 <fwrite@plt>:
    2350: ff 25 52 4e 00 00            	jmp	qword ptr [rip + 20050] # 0x71a8 <_GLOBAL_OFFSET_TABLE_+0x1a8>
    2356: 68 32 00 00 00               	push	50
    235b: e9 c0 fc ff ff               	jmp	0x2020 <.plt>

0000000000002360 <vkBeginCommandBuffer@plt>:
    2360: ff 25 4a 4e 00 00            	jmp	qword ptr [rip + 20042] # 0x71b0 <_GLOBAL_OFFSET_TABLE_+0x1b0>
    2366: 68 33 00 00 00               	push	51
    236b: e9 b0 fc ff ff               	jmp	0x2020 <.plt>

0000000000002370 <vkEnumerateInstanceLayerProperties@plt>:
    2370: ff 25 42 4e 00 00            	jmp	qword ptr [rip + 20034] # 0x71b8 <_GLOBAL_OFFSET_TABLE_+0x1b8>
    2376: 68 34 00 00 00               	push	52
    237b: e9 a0 fc ff ff               	jmp	0x2020 <.plt>

0000000000002380 <vkBindBufferMemory@plt>:
    2380: ff 25 3a 4e 00 00            	jmp	qword ptr [rip + 20026] # 0x71c0 <_GLOBAL_OFFSET_TABLE_+0x1c0>
    2386: 68 35 00 00 00               	push	53
    238b: e9 90 fc ff ff               	jmp	0x2020 <.plt>

Disassembly of section .plt.got:

0000000000002390 <.plt.got>:
    2390: ff 25 5a 4c 00 00            	jmp	qword ptr [rip + 19546] # 0x6ff0 <vkUpdateDescriptorSets+0x6ff0>
    2396: 66 90                        	nop

Disassembly of section .text:

00000000000023a0 <deregister_tm_clones>:
    23a0: 48 8d 3d 69 4e 00 00         	lea	rdi, [rip + 20073]      # 0x7210 <completed.0>
    23a7: 48 8d 05 62 4e 00 00         	lea	rax, [rip + 20066]      # 0x7210 <completed.0>
    23ae: 48 39 f8                     	cmp	rax, rdi
    23b1: 74 15                        	je	0x23c8 <deregister_tm_clones+0x28>
    23b3: 48 8b 05 1e 4c 00 00         	mov	rax, qword ptr [rip + 19486] # 0x6fd8 <vkUpdateDescriptorSets+0x6fd8>
    23ba: 48 85 c0                     	test	rax, rax
    23bd: 74 09                        	je	0x23c8 <deregister_tm_clones+0x28>
    23bf: ff e0                        	jmp	rax
    23c1: 0f 1f 80 00 00 00 00         	nop	dword ptr [rax]
    23c8: c3                           	ret
    23c9: 0f 1f 80 00 00 00 00         	nop	dword ptr [rax]

00000000000023d0 <register_tm_clones>:
    23d0: 48 8d 3d 39 4e 00 00         	lea	rdi, [rip + 20025]      # 0x7210 <completed.0>
    23d7: 48 8d 35 32 4e 00 00         	lea	rsi, [rip + 20018]      # 0x7210 <completed.0>
    23de: 48 29 fe                     	sub	rsi, rdi
    23e1: 48 89 f0                     	mov	rax, rsi
    23e4: 48 c1 ee 3f                  	shr	rsi, 63
    23e8: 48 c1 f8 03                  	sar	rax, 3
    23ec: 48 01 c6                     	add	rsi, rax
    23ef: 48 d1 fe                     	sar	rsi
    23f2: 74 14                        	je	0x2408 <register_tm_clones+0x38>
    23f4: 48 8b 05 ed 4b 00 00         	mov	rax, qword ptr [rip + 19437] # 0x6fe8 <vkUpdateDescriptorSets+0x6fe8>
    23fb: 48 85 c0                     	test	rax, rax
    23fe: 74 08                        	je	0x2408 <register_tm_clones+0x38>
    2400: ff e0                        	jmp	rax
    2402: 66 0f 1f 44 00 00            	nop	word ptr [rax + rax]
    2408: c3                           	ret
    2409: 0f 1f 80 00 00 00 00         	nop	dword ptr [rax]

0000000000002410 <__do_global_dtors_aux>:
    2410: f3 0f 1e fa                  	endbr64
    2414: 80 3d f5 4d 00 00 00         	cmp	byte ptr [rip + 19957], 0 # 0x7210 <completed.0>
    241b: 75 2b                        	jne	0x2448 <__do_global_dtors_aux+0x38>
    241d: 55                           	push	rbp
    241e: 48 83 3d ca 4b 00 00 00      	cmp	qword ptr [rip + 19402], 0 # 0x6ff0 <vkUpdateDescriptorSets+0x6ff0>
    2426: 48 89 e5                     	mov	rbp, rsp
    2429: 74 0c                        	je	0x2437 <__do_global_dtors_aux+0x27>
    242b: 48 8b 3d 9e 4d 00 00         	mov	rdi, qword ptr [rip + 19870] # 0x71d0 <__dso_handle>
    2432: e8 59 ff ff ff               	call	0x2390 <.plt.got>
    2437: e8 64 ff ff ff               	call	0x23a0 <deregister_tm_clones>
    243c: c6 05 cd 4d 00 00 01         	mov	byte ptr [rip + 19917], 1 # 0x7210 <completed.0>
    2443: 5d                           	pop	rbp
    2444: c3                           	ret
    2445: 0f 1f 00                     	nop	dword ptr [rax]
    2448: c3                           	ret
    2449: 0f 1f 80 00 00 00 00         	nop	dword ptr [rax]

0000000000002450 <frame_dummy>:
    2450: f3 0f 1e fa                  	endbr64
    2454: e9 77 ff ff ff               	jmp	0x23d0 <register_tm_clones>
    2459: 0f 1f 80 00 00 00 00         	nop	dword ptr [rax]

0000000000002460 <nnRunTwoMatricesAndOutput>:
    2460: 55                           	push	rbp
    2461: 48 89 e5                     	mov	rbp, rsp
    2464: 41 57                        	push	r15
    2466: 41 56                        	push	r14
    2468: 41 55                        	push	r13
    246a: 41 54                        	push	r12
    246c: 53                           	push	rbx
    246d: 48 83 e4 e0                  	and	rsp, -32
    2471: 48 81 ec 00 03 00 00         	sub	rsp, 768
    2478: 48 89 4c 24 60               	mov	qword ptr [rsp + 96], rcx
    247d: 49 89 d6                     	mov	r14, rdx
    2480: 48 89 f3                     	mov	rbx, rsi
    2483: 48 89 7c 24 10               	mov	qword ptr [rsp + 16], rdi
    2488: 8b 47 08                     	mov	eax, dword ptr [rdi + 8]
    248b: 89 44 24 34                  	mov	dword ptr [rsp + 52], eax
    248f: 8b 56 08                     	mov	edx, dword ptr [rsi + 8]
    2492: 8b 4e 0c                     	mov	ecx, dword ptr [rsi + 12]
    2495: 4c 8b 25 5c 4b 00 00         	mov	r12, qword ptr [rip + 19292] # 0x6ff8 <vkUpdateDescriptorSets+0x6ff8>
    249c: 49 8b 3c 24                  	mov	rdi, qword ptr [r12]
    24a0: 48 8d 35 99 2b 00 00         	lea	rsi, [rip + 11161]      # 0x5040 <vkUpdateDescriptorSets+0x5040>
    24a7: 45 31 ed                     	xor	r13d, r13d
    24aa: 89 54 24 48                  	mov	dword ptr [rsp + 72], edx
    24ae: 89 4c 24 50                  	mov	dword ptr [rsp + 80], ecx
    24b2: 31 c0                        	xor	eax, eax
    24b4: e8 27 fd ff ff               	call	0x21e0 <fprintf@plt>
    24b9: 49 8b 34 24                  	mov	rsi, qword ptr [r12]
    24bd: bf 0a 00 00 00               	mov	edi, 10
    24c2: e8 d9 fc ff ff               	call	0x21a0 <fputc@plt>
    24c7: 83 7b 08 00                  	cmp	dword ptr [rbx + 8], 0
    24cb: 0f 85 ab 08 00 00            	jne	0x2d7c <nnRunTwoMatricesAndOutput+0x91c>
    24d1: 48 89 9c 24 90 00 00 00      	mov	qword ptr [rsp + 144], rbx
    24d9: 49 8b 34 24                  	mov	rsi, qword ptr [r12]
    24dd: bf 0a 00 00 00               	mov	edi, 10
    24e2: e8 b9 fc ff ff               	call	0x21a0 <fputc@plt>
    24e7: 49 8b 3c 24                  	mov	rdi, qword ptr [r12]
    24eb: 41 8b 56 08                  	mov	edx, dword ptr [r14 + 8]
    24ef: 41 8b 4e 0c                  	mov	ecx, dword ptr [r14 + 12]
    24f3: 48 8d 35 46 2b 00 00         	lea	rsi, [rip + 11078]      # 0x5040 <vkUpdateDescriptorSets+0x5040>
    24fa: 45 31 ff                     	xor	r15d, r15d
    24fd: 31 c0                        	xor	eax, eax
    24ff: e8 dc fc ff ff               	call	0x21e0 <fprintf@plt>
    2504: 49 8b 34 24                  	mov	rsi, qword ptr [r12]
    2508: bf 0a 00 00 00               	mov	edi, 10
    250d: e8 8e fc ff ff               	call	0x21a0 <fputc@plt>
    2512: 41 83 7e 08 00               	cmp	dword ptr [r14 + 8], 0
    2517: 0f 85 4c 09 00 00            	jne	0x2e69 <nnRunTwoMatricesAndOutput+0xa09>
    251d: 4c 89 b4 24 98 00 00 00      	mov	qword ptr [rsp + 152], r14
    2525: 49 8b 34 24                  	mov	rsi, qword ptr [r12]
    2529: bf 0a 00 00 00               	mov	edi, 10
    252e: e8 6d fc ff ff               	call	0x21a0 <fputc@plt>
    2533: 49 8b 3c 24                  	mov	rdi, qword ptr [r12]
    2537: 4c 89 e3                     	mov	rbx, r12
    253a: 4c 8b 64 24 60               	mov	r12, qword ptr [rsp + 96]
    253f: 41 8b 54 24 08               	mov	edx, dword ptr [r12 + 8]
    2544: 41 8b 4c 24 0c               	mov	ecx, dword ptr [r12 + 12]
    2549: 48 8d 35 f0 2a 00 00         	lea	rsi, [rip + 10992]      # 0x5040 <vkUpdateDescriptorSets+0x5040>
    2550: 45 31 ff                     	xor	r15d, r15d
    2553: 31 c0                        	xor	eax, eax
    2555: e8 86 fc ff ff               	call	0x21e0 <fprintf@plt>
    255a: 48 8b 33                     	mov	rsi, qword ptr [rbx]
    255d: bf 0a 00 00 00               	mov	edi, 10
    2562: e8 39 fc ff ff               	call	0x21a0 <fputc@plt>
    2567: 41 83 7c 24 08 00            	cmp	dword ptr [r12 + 8], 0
    256d: 0f 85 60 09 00 00            	jne	0x2ed3 <nnRunTwoMatricesAndOutput+0xa73>
    2573: 48 8b 05 7e 4a 00 00         	mov	rax, qword ptr [rip + 19070] # 0x6ff8 <vkUpdateDescriptorSets+0x6ff8>
    257a: 48 8b 30                     	mov	rsi, qword ptr [rax]
    257d: bf 0a 00 00 00               	mov	edi, 10
    2582: e8 19 fc ff ff               	call	0x21a0 <fputc@plt>
    2587: bf 48 00 00 00               	mov	edi, 72
    258c: e8 af fc ff ff               	call	0x2240 <malloc@plt>
    2591: 49 89 c5                     	mov	r13, rax
    2594: 48 8d 9c 24 00 01 00 00      	lea	rbx, [rsp + 256]
    259c: 48 89 df                     	mov	rdi, rbx
    259f: 31 f6                        	xor	esi, esi
    25a1: e8 aa fb ff ff               	call	0x2150 <nnCreateVkDescriptorSetLayoutBindingStorageBuffer@plt>
    25a6: 48 8b 84 24 10 01 00 00      	mov	rax, qword ptr [rsp + 272]
    25ae: 49 89 45 10                  	mov	qword ptr [r13 + 16], rax
    25b2: c5 f8 10 84 24 00 01 00 00   	vmovups	xmm0, xmmword ptr [rsp + 256]
    25bb: c4 c1 78 11 45 00            	vmovups	xmmword ptr [r13], xmm0
    25c1: 48 89 df                     	mov	rdi, rbx
    25c4: be 01 00 00 00               	mov	esi, 1
    25c9: e8 82 fb ff ff               	call	0x2150 <nnCreateVkDescriptorSetLayoutBindingStorageBuffer@plt>
    25ce: 48 8b 84 24 10 01 00 00      	mov	rax, qword ptr [rsp + 272]
    25d6: 49 89 45 28                  	mov	qword ptr [r13 + 40], rax
    25da: c5 f8 10 84 24 00 01 00 00   	vmovups	xmm0, xmmword ptr [rsp + 256]
    25e3: c4 c1 78 11 45 18            	vmovups	xmmword ptr [r13 + 24], xmm0
    25e9: 48 89 df                     	mov	rdi, rbx
    25ec: be 02 00 00 00               	mov	esi, 2
    25f1: e8 5a fb ff ff               	call	0x2150 <nnCreateVkDescriptorSetLayoutBindingStorageBuffer@plt>
    25f6: 48 8b 84 24 10 01 00 00      	mov	rax, qword ptr [rsp + 272]
    25fe: 49 89 45 40                  	mov	qword ptr [r13 + 64], rax
    2602: c5 f8 10 84 24 00 01 00 00   	vmovups	xmm0, xmmword ptr [rsp + 256]
    260b: c4 c1 78 11 45 30            	vmovups	xmmword ptr [r13 + 48], xmm0
    2611: c7 84 24 90 01 00 00 20 00 00 00     	mov	dword ptr [rsp + 400], 32
    261c: 48 c7 84 24 98 01 00 00 00 00 00 00  	mov	qword ptr [rsp + 408], 0
    2628: 48 b8 00 00 00 00 03 00 00 00	movabs	rax, 12884901888
    2632: 48 89 84 24 a0 01 00 00      	mov	qword ptr [rsp + 416], rax
    263a: 4c 89 ac 24 a8 01 00 00      	mov	qword ptr [rsp + 424], r13
    2642: 48 8b 5c 24 10               	mov	rbx, qword ptr [rsp + 16]
    2647: 48 8b 3b                     	mov	rdi, qword ptr [rbx]
    264a: 48 8d b4 24 90 01 00 00      	lea	rsi, [rsp + 400]
    2652: 48 8d 4c 24 78               	lea	rcx, [rsp + 120]
    2657: 31 d2                        	xor	edx, edx
    2659: e8 e2 f9 ff ff               	call	0x2040 <vkCreateDescriptorSetLayout@plt>
    265e: 85 c0                        	test	eax, eax
    2660: 0f 85 d6 08 00 00            	jne	0x2f3c <nnRunTwoMatricesAndOutput+0xadc>
    2666: 44 8b 64 24 50               	mov	r12d, dword ptr [rsp + 80]
    266b: 44 0f af 64 24 48            	imul	r12d, dword ptr [rsp + 72]
    2671: c7 84 24 c8 00 00 00 0c 00 00 00     	mov	dword ptr [rsp + 200], 12
    267c: 48 c7 84 24 d0 00 00 00 00 00 00 00  	mov	qword ptr [rsp + 208], 0
    2688: c7 84 24 d8 00 00 00 00 00 00 00     	mov	dword ptr [rsp + 216], 0
    2693: 44 89 e0                     	mov	eax, r12d
    2696: 48 89 44 24 48               	mov	qword ptr [rsp + 72], rax
    269b: 48 8d 04 85 00 00 00 00      	lea	rax, [4*rax]
    26a3: 48 89 44 24 50               	mov	qword ptr [rsp + 80], rax
    26a8: 48 89 84 24 e0 00 00 00      	mov	qword ptr [rsp + 224], rax
    26b0: 48 c7 84 24 e8 00 00 00 20 00 00 00  	mov	qword ptr [rsp + 232], 32
    26bc: c7 84 24 f0 00 00 00 01 00 00 00     	mov	dword ptr [rsp + 240], 1
    26c7: 48 8d 44 24 34               	lea	rax, [rsp + 52]
    26cc: 48 89 84 24 f8 00 00 00      	mov	qword ptr [rsp + 248], rax
    26d4: 48 8b 3b                     	mov	rdi, qword ptr [rbx]
    26d7: 48 8d b4 24 c8 00 00 00      	lea	rsi, [rsp + 200]
    26df: 48 8d 4c 24 20               	lea	rcx, [rsp + 32]
    26e4: 31 d2                        	xor	edx, edx
    26e6: e8 85 fb ff ff               	call	0x2270 <vkCreateBuffer@plt>
    26eb: 85 c0                        	test	eax, eax
    26ed: 0f 85 73 08 00 00            	jne	0x2f66 <nnRunTwoMatricesAndOutput+0xb06>
    26f3: 48 8b 3b                     	mov	rdi, qword ptr [rbx]
    26f6: 48 8d b4 24 c8 00 00 00      	lea	rsi, [rsp + 200]
    26fe: 48 8d 4c 24 40               	lea	rcx, [rsp + 64]
    2703: 31 d2                        	xor	edx, edx
    2705: e8 66 fb ff ff               	call	0x2270 <vkCreateBuffer@plt>
    270a: 85 c0                        	test	eax, eax
    270c: 0f 85 7e 08 00 00            	jne	0x2f90 <nnRunTwoMatricesAndOutput+0xb30>
    2712: 48 8b 3b                     	mov	rdi, qword ptr [rbx]
    2715: 48 8d b4 24 c8 00 00 00      	lea	rsi, [rsp + 200]
    271d: 48 8d 4c 24 38               	lea	rcx, [rsp + 56]
    2722: 31 d2                        	xor	edx, edx
    2724: e8 47 fb ff ff               	call	0x2270 <vkCreateBuffer@plt>
    2729: 85 c0                        	test	eax, eax
    272b: 0f 85 89 08 00 00            	jne	0x2fba <nnRunTwoMatricesAndOutput+0xb5a>
    2731: 48 8b 3b                     	mov	rdi, qword ptr [rbx]
    2734: 48 8b 74 24 20               	mov	rsi, qword ptr [rsp + 32]
    2739: 48 8d 94 24 08 02 00 00      	lea	rdx, [rsp + 520]
    2741: e8 ea f9 ff ff               	call	0x2130 <vkGetBufferMemoryRequirements@plt>
    2746: 48 8b 9c 24 08 02 00 00      	mov	rbx, qword ptr [rsp + 520]
    274e: 48 8b 44 24 10               	mov	rax, qword ptr [rsp + 16]
    2753: 48 8b 38                     	mov	rdi, qword ptr [rax]
    2756: 48 8b 74 24 20               	mov	rsi, qword ptr [rsp + 32]
    275b: 48 8d 94 24 90 02 00 00      	lea	rdx, [rsp + 656]
    2763: e8 c8 f9 ff ff               	call	0x2130 <vkGetBufferMemoryRequirements@plt>
    2768: 48 03 9c 24 90 02 00 00      	add	rbx, qword ptr [rsp + 656]
    2770: 48 8b 44 24 10               	mov	rax, qword ptr [rsp + 16]
    2775: 48 8b 38                     	mov	rdi, qword ptr [rax]
    2778: 48 8b 74 24 20               	mov	rsi, qword ptr [rsp + 32]
    277d: 48 8d 94 24 a8 02 00 00      	lea	rdx, [rsp + 680]
    2785: e8 a6 f9 ff ff               	call	0x2130 <vkGetBufferMemoryRequirements@plt>
    278a: 48 03 9c 24 a8 02 00 00      	add	rbx, qword ptr [rsp + 680]
    2792: 48 8b 44 24 10               	mov	rax, qword ptr [rsp + 16]
    2797: 48 8d 78 10                  	lea	rdi, [rax + 16]
    279b: 8b b4 24 18 02 00 00         	mov	esi, dword ptr [rsp + 536]
    27a2: ba 0e 00 00 00               	mov	edx, 14
    27a7: e8 d4 f8 ff ff               	call	0x2080 <nnFindMemoryProperties@plt>
    27ac: c7 84 24 70 01 00 00 05 00 00 00     	mov	dword ptr [rsp + 368], 5
    27b7: 48 c7 84 24 78 01 00 00 00 00 00 00  	mov	qword ptr [rsp + 376], 0
    27c3: 48 89 9c 24 80 01 00 00      	mov	qword ptr [rsp + 384], rbx
    27cb: 48 8b 5c 24 10               	mov	rbx, qword ptr [rsp + 16]
    27d0: 89 84 24 88 01 00 00         	mov	dword ptr [rsp + 392], eax
    27d7: 48 8b 3b                     	mov	rdi, qword ptr [rbx]
    27da: 48 8d b4 24 70 01 00 00      	lea	rsi, [rsp + 368]
    27e2: 48 8d 4c 24 08               	lea	rcx, [rsp + 8]
    27e7: 31 d2                        	xor	edx, edx
    27e9: e8 42 fa ff ff               	call	0x2230 <vkAllocateMemory@plt>
    27ee: 48 8b 3b                     	mov	rdi, qword ptr [rbx]
    27f1: 85 c0                        	test	eax, eax
    27f3: 0f 85 eb 07 00 00            	jne	0x2fe4 <nnRunTwoMatricesAndOutput+0xb84>
    27f9: 48 8b 74 24 20               	mov	rsi, qword ptr [rsp + 32]
    27fe: 48 8b 54 24 08               	mov	rdx, qword ptr [rsp + 8]
    2803: 31 c9                        	xor	ecx, ecx
    2805: e8 76 fb ff ff               	call	0x2380 <vkBindBufferMemory@plt>
    280a: 85 c0                        	test	eax, eax
    280c: 0f 85 f9 07 00 00            	jne	0x300b <nnRunTwoMatricesAndOutput+0xbab>
    2812: 48 8b 9c 24 08 02 00 00      	mov	rbx, qword ptr [rsp + 520]
    281a: 4c 8b 7c 24 10               	mov	r15, qword ptr [rsp + 16]
    281f: 49 8b 3f                     	mov	rdi, qword ptr [r15]
    2822: 48 8b 74 24 40               	mov	rsi, qword ptr [rsp + 64]
    2827: 48 8b 54 24 08               	mov	rdx, qword ptr [rsp + 8]
    282c: 48 89 d9                     	mov	rcx, rbx
    282f: e8 4c fb ff ff               	call	0x2380 <vkBindBufferMemory@plt>
    2834: 85 c0                        	test	eax, eax
    2836: 0f 85 fb 07 00 00            	jne	0x3037 <nnRunTwoMatricesAndOutput+0xbd7>
    283c: 48 03 9c 24 90 02 00 00      	add	rbx, qword ptr [rsp + 656]
    2844: 49 8b 3f                     	mov	rdi, qword ptr [r15]
    2847: 48 8b 74 24 38               	mov	rsi, qword ptr [rsp + 56]
    284c: 48 8b 54 24 08               	mov	rdx, qword ptr [rsp + 8]
    2851: 48 89 d9                     	mov	rcx, rbx
    2854: e8 27 fb ff ff               	call	0x2380 <vkBindBufferMemory@plt>
    2859: 85 c0                        	test	eax, eax
    285b: 0f 85 fe 07 00 00            	jne	0x305f <nnRunTwoMatricesAndOutput+0xbff>
    2861: c7 84 24 d8 01 00 00 1e 00 00 00     	mov	dword ptr [rsp + 472], 30
    286c: 48 c7 84 24 e0 01 00 00 00 00 00 00  	mov	qword ptr [rsp + 480], 0
    2878: 49 be 00 00 00 00 01 00 00 00	movabs	r14, 4294967296
    2882: 4c 89 b4 24 e8 01 00 00      	mov	qword ptr [rsp + 488], r14
    288a: 48 8d 5c 24 78               	lea	rbx, [rsp + 120]
    288f: 48 89 9c 24 f0 01 00 00      	mov	qword ptr [rsp + 496], rbx
    2897: c7 84 24 f8 01 00 00 00 00 00 00     	mov	dword ptr [rsp + 504], 0
    28a2: 48 c7 84 24 00 02 00 00 00 00 00 00  	mov	qword ptr [rsp + 512], 0
    28ae: 49 8b 3f                     	mov	rdi, qword ptr [r15]
    28b1: 48 8d b4 24 d8 01 00 00      	lea	rsi, [rsp + 472]
    28b9: 48 8d 4c 24 70               	lea	rcx, [rsp + 112]
    28be: 31 d2                        	xor	edx, edx
    28c0: e8 bb f9 ff ff               	call	0x2280 <vkCreatePipelineLayout@plt>
    28c5: 85 c0                        	test	eax, eax
    28c7: 0f 85 ba 07 00 00            	jne	0x3087 <nnRunTwoMatricesAndOutput+0xc27>
    28cd: 48 b8 07 00 00 00 03 00 00 00	movabs	rax, 12884901895
    28d7: 48 89 84 24 c0 00 00 00      	mov	qword ptr [rsp + 192], rax
    28df: c7 84 24 20 02 00 00 21 00 00 00     	mov	dword ptr [rsp + 544], 33
    28ea: 48 c7 84 24 28 02 00 00 00 00 00 00  	mov	qword ptr [rsp + 552], 0
    28f6: 4c 89 b4 24 30 02 00 00      	mov	qword ptr [rsp + 560], r14
    28fe: c7 84 24 38 02 00 00 01 00 00 00     	mov	dword ptr [rsp + 568], 1
    2909: 48 8d 84 24 c0 00 00 00      	lea	rax, [rsp + 192]
    2911: 48 89 84 24 40 02 00 00      	mov	qword ptr [rsp + 576], rax
    2919: 49 8b 3f                     	mov	rdi, qword ptr [r15]
    291c: 48 8d b4 24 20 02 00 00      	lea	rsi, [rsp + 544]
    2924: 48 8d 8c 24 b8 00 00 00      	lea	rcx, [rsp + 184]
    292c: 31 d2                        	xor	edx, edx
    292e: e8 0d fa ff ff               	call	0x2340 <vkCreateDescriptorPool@plt>
    2933: c7 84 24 b0 01 00 00 22 00 00 00     	mov	dword ptr [rsp + 432], 34
    293e: 48 c7 84 24 b8 01 00 00 00 00 00 00  	mov	qword ptr [rsp + 440], 0
    294a: 48 8b 84 24 b8 00 00 00      	mov	rax, qword ptr [rsp + 184]
    2952: 48 89 84 24 c0 01 00 00      	mov	qword ptr [rsp + 448], rax
    295a: c7 84 24 c8 01 00 00 01 00 00 00     	mov	dword ptr [rsp + 456], 1
    2965: 48 89 9c 24 d0 01 00 00      	mov	qword ptr [rsp + 464], rbx
    296d: 49 8b 3f                     	mov	rdi, qword ptr [r15]
    2970: 48 8d b4 24 b0 01 00 00      	lea	rsi, [rsp + 432]
    2978: 48 8d 54 24 58               	lea	rdx, [rsp + 88]
    297d: e8 de f8 ff ff               	call	0x2260 <vkAllocateDescriptorSets@plt>
    2982: 85 c0                        	test	eax, eax
    2984: 0f 85 27 07 00 00            	jne	0x30b1 <nnRunTwoMatricesAndOutput+0xc51>
    298a: bf c0 00 00 00               	mov	edi, 192
    298f: e8 ac f8 ff ff               	call	0x2240 <malloc@plt>
    2994: 48 89 c2                     	mov	rdx, rax
    2997: 48 8b 44 24 58               	mov	rax, qword ptr [rsp + 88]
    299c: 48 8b 4c 24 20               	mov	rcx, qword ptr [rsp + 32]
    29a1: 48 89 8c 24 78 02 00 00      	mov	qword ptr [rsp + 632], rcx
    29a9: c5 f8 28 05 4f 26 00 00      	vmovaps	xmm0, xmmword ptr [rip + 9807] # 0x5000 <vkUpdateDescriptorSets+0x5000>
    29b1: c5 f8 11 84 24 80 02 00 00   	vmovups	xmmword ptr [rsp + 640], xmm0
    29ba: c7 02 23 00 00 00            	mov	dword ptr [rdx], 35
    29c0: 48 c7 42 08 00 00 00 00      	mov	qword ptr [rdx + 8], 0
    29c8: 48 89 42 10                  	mov	qword ptr [rdx + 16], rax
    29cc: c5 f8 28 0d 3c 26 00 00      	vmovaps	xmm1, xmmword ptr [rip + 9788] # 0x5010 <vkUpdateDescriptorSets+0x5010>
    29d4: c5 f8 11 4a 18               	vmovups	xmmword ptr [rdx + 24], xmm1
    29d9: 48 c7 42 28 00 00 00 00      	mov	qword ptr [rdx + 40], 0
    29e1: 48 8d 8c 24 78 02 00 00      	lea	rcx, [rsp + 632]
    29e9: 48 89 4a 30                  	mov	qword ptr [rdx + 48], rcx
    29ed: 48 c7 42 38 00 00 00 00      	mov	qword ptr [rdx + 56], 0
    29f5: 48 8b 4c 24 40               	mov	rcx, qword ptr [rsp + 64]
    29fa: 48 89 8c 24 60 02 00 00      	mov	qword ptr [rsp + 608], rcx
    2a02: c5 f8 11 84 24 68 02 00 00   	vmovups	xmmword ptr [rsp + 616], xmm0
    2a0b: c7 42 40 23 00 00 00         	mov	dword ptr [rdx + 64], 35
    2a12: 48 c7 42 48 00 00 00 00      	mov	qword ptr [rdx + 72], 0
    2a1a: 48 89 42 50                  	mov	qword ptr [rdx + 80], rax
    2a1e: c5 f8 28 0d fa 25 00 00      	vmovaps	xmm1, xmmword ptr [rip + 9722] # 0x5020 <vkUpdateDescriptorSets+0x5020>
    2a26: c5 f8 11 4a 58               	vmovups	xmmword ptr [rdx + 88], xmm1
    2a2b: 48 c7 42 68 00 00 00 00      	mov	qword ptr [rdx + 104], 0
    2a33: 48 8d 8c 24 60 02 00 00      	lea	rcx, [rsp + 608]
    2a3b: 48 89 4a 70                  	mov	qword ptr [rdx + 112], rcx
    2a3f: 48 c7 42 78 00 00 00 00      	mov	qword ptr [rdx + 120], 0
    2a47: 48 8b 4c 24 38               	mov	rcx, qword ptr [rsp + 56]
    2a4c: 48 89 8c 24 48 02 00 00      	mov	qword ptr [rsp + 584], rcx
    2a54: c5 f8 11 84 24 50 02 00 00   	vmovups	xmmword ptr [rsp + 592], xmm0
    2a5d: c7 82 80 00 00 00 23 00 00 00	mov	dword ptr [rdx + 128], 35
    2a67: 48 c7 82 88 00 00 00 00 00 00 00     	mov	qword ptr [rdx + 136], 0
    2a72: 48 89 82 90 00 00 00         	mov	qword ptr [rdx + 144], rax
    2a79: c5 f8 28 05 af 25 00 00      	vmovaps	xmm0, xmmword ptr [rip + 9647] # 0x5030 <vkUpdateDescriptorSets+0x5030>
    2a81: c5 f8 11 82 98 00 00 00      	vmovups	xmmword ptr [rdx + 152], xmm0
    2a89: 48 c7 82 a8 00 00 00 00 00 00 00     	mov	qword ptr [rdx + 168], 0
    2a94: 48 8d 84 24 48 02 00 00      	lea	rax, [rsp + 584]
    2a9c: 48 89 82 b0 00 00 00         	mov	qword ptr [rdx + 176], rax
    2aa3: 48 c7 82 b8 00 00 00 00 00 00 00     	mov	qword ptr [rdx + 184], 0
    2aae: 49 8b 3f                     	mov	rdi, qword ptr [r15]
    2ab1: be 03 00 00 00               	mov	esi, 3
    2ab6: 48 89 94 24 88 00 00 00      	mov	qword ptr [rsp + 136], rdx
    2abe: 31 c9                        	xor	ecx, ecx
    2ac0: 45 31 c0                     	xor	r8d, r8d
    2ac3: e8 18 f8 ff ff               	call	0x22e0 <vkUpdateDescriptorSets@plt>
    2ac8: c7 84 24 a0 00 00 00 27 00 00 00     	mov	dword ptr [rsp + 160], 39
    2ad3: 48 c7 84 24 a8 00 00 00 00 00 00 00  	mov	qword ptr [rsp + 168], 0
    2adf: c7 84 24 b0 00 00 00 01 00 00 00     	mov	dword ptr [rsp + 176], 1
    2aea: 8b 44 24 34                  	mov	eax, dword ptr [rsp + 52]
    2aee: 89 84 24 b4 00 00 00         	mov	dword ptr [rsp + 180], eax
    2af5: 49 8b 3f                     	mov	rdi, qword ptr [r15]
    2af8: 48 8d b4 24 a0 00 00 00      	lea	rsi, [rsp + 160]
    2b00: 48 8d 4c 24 68               	lea	rcx, [rsp + 104]
    2b05: 31 d2                        	xor	edx, edx
    2b07: e8 e4 f5 ff ff               	call	0x20f0 <vkCreateCommandPool@plt>
    2b0c: 85 c0                        	test	eax, eax
    2b0e: 0f 85 c5 05 00 00            	jne	0x30d9 <nnRunTwoMatricesAndOutput+0xc79>
    2b14: c7 84 24 50 01 00 00 28 00 00 00     	mov	dword ptr [rsp + 336], 40
    2b1f: 48 c7 84 24 58 01 00 00 00 00 00 00  	mov	qword ptr [rsp + 344], 0
    2b2b: 48 8b 44 24 68               	mov	rax, qword ptr [rsp + 104]
    2b30: 48 89 84 24 60 01 00 00      	mov	qword ptr [rsp + 352], rax
    2b38: 4c 89 b4 24 68 01 00 00      	mov	qword ptr [rsp + 360], r14
    2b40: 49 8b 3f                     	mov	rdi, qword ptr [r15]
    2b43: 48 8d b4 24 50 01 00 00      	lea	rsi, [rsp + 336]
    2b4b: 4c 8d 74 24 18               	lea	r14, [rsp + 24]
    2b50: 4c 89 f2                     	mov	rdx, r14
    2b53: e8 68 f7 ff ff               	call	0x22c0 <vkAllocateCommandBuffers@plt>
    2b58: 85 c0                        	test	eax, eax
    2b5a: 0f 85 a3 05 00 00            	jne	0x3103 <nnRunTwoMatricesAndOutput+0xca3>
    2b60: c5 fc 10 05 10 25 00 00      	vmovups	ymm0, ymmword ptr [rip + 9488] # 0x5078 <vkUpdateDescriptorSets+0x5078>
    2b68: c5 fc 11 84 24 c0 02 00 00   	vmovups	ymmword ptr [rsp + 704], ymm0
    2b71: 48 8b 7c 24 18               	mov	rdi, qword ptr [rsp + 24]
    2b76: 48 8d b4 24 c0 02 00 00      	lea	rsi, [rsp + 704]
    2b7e: c5 f8 77                     	vzeroupper
    2b81: e8 da f7 ff ff               	call	0x2360 <vkBeginCommandBuffer@plt>
    2b86: 48 8b 7c 24 18               	mov	rdi, qword ptr [rsp + 24]
    2b8b: 49 8b 57 28                  	mov	rdx, qword ptr [r15 + 40]
    2b8f: be 01 00 00 00               	mov	esi, 1
    2b94: e8 07 f5 ff ff               	call	0x20a0 <vkCmdBindPipeline@plt>
    2b99: 48 8b 7c 24 18               	mov	rdi, qword ptr [rsp + 24]
    2b9e: 48 8b 54 24 70               	mov	rdx, qword ptr [rsp + 112]
    2ba3: 4c 8d 4c 24 58               	lea	r9, [rsp + 88]
    2ba8: be 01 00 00 00               	mov	esi, 1
    2bad: 31 c9                        	xor	ecx, ecx
    2baf: 41 b8 01 00 00 00            	mov	r8d, 1
    2bb5: 6a 00                        	push	0
    2bb7: 6a 00                        	push	0
    2bb9: e8 a2 f4 ff ff               	call	0x2060 <vkCmdBindDescriptorSets@plt>
    2bbe: 48 83 c4 10                  	add	rsp, 16
    2bc2: 48 8b 7c 24 18               	mov	rdi, qword ptr [rsp + 24]
    2bc7: 44 89 e6                     	mov	esi, r12d
    2bca: ba 01 00 00 00               	mov	edx, 1
    2bcf: b9 01 00 00 00               	mov	ecx, 1
    2bd4: e8 f7 f6 ff ff               	call	0x22d0 <vkCmdDispatch@plt>
    2bd9: 48 8b 7c 24 18               	mov	rdi, qword ptr [rsp + 24]
    2bde: e8 ad f5 ff ff               	call	0x2190 <vkEndCommandBuffer@plt>
    2be3: 85 c0                        	test	eax, eax
    2be5: 0f 85 3d 05 00 00            	jne	0x3128 <nnRunTwoMatricesAndOutput+0xcc8>
    2beb: 4c 89 ac 24 80 00 00 00      	mov	qword ptr [rsp + 128], r13
    2bf3: 48 c7 44 24 28 00 00 00 00   	mov	qword ptr [rsp + 40], 0
    2bfc: 49 8b 3f                     	mov	rdi, qword ptr [r15]
    2bff: 48 8b 74 24 08               	mov	rsi, qword ptr [rsp + 8]
    2c04: 4c 8d 4c 24 28               	lea	r9, [rsp + 40]
    2c09: 31 d2                        	xor	edx, edx
    2c0b: 48 c7 c1 ff ff ff ff         	mov	rcx, -1
    2c12: 45 31 c0                     	xor	r8d, r8d
    2c15: e8 36 f6 ff ff               	call	0x2250 <vkMapMemory@plt>
    2c1a: 85 c0                        	test	eax, eax
    2c1c: 0f 85 20 05 00 00            	jne	0x3142 <nnRunTwoMatricesAndOutput+0xce2>
    2c22: 48 8b 7c 24 28               	mov	rdi, qword ptr [rsp + 40]
    2c27: 4c 8b 6c 24 48               	mov	r13, qword ptr [rsp + 72]
    2c2c: 4e 8d 24 af                  	lea	r12, [rdi + 4*r13]
    2c30: 48 8b 84 24 90 00 00 00      	mov	rax, qword ptr [rsp + 144]
    2c38: 48 8b 30                     	mov	rsi, qword ptr [rax]
    2c3b: 48 8b 5c 24 50               	mov	rbx, qword ptr [rsp + 80]
    2c40: 48 89 da                     	mov	rdx, rbx
    2c43: e8 c8 f5 ff ff               	call	0x2210 <memcpy@plt>
    2c48: 48 8b 84 24 98 00 00 00      	mov	rax, qword ptr [rsp + 152]
    2c50: 48 8b 30                     	mov	rsi, qword ptr [rax]
    2c53: 4c 89 e7                     	mov	rdi, r12
    2c56: 48 89 da                     	mov	rdx, rbx
    2c59: e8 b2 f5 ff ff               	call	0x2210 <memcpy@plt>
    2c5e: 49 8b 3f                     	mov	rdi, qword ptr [r15]
    2c61: 48 8b 74 24 08               	mov	rsi, qword ptr [rsp + 8]
    2c66: e8 d5 f4 ff ff               	call	0x2140 <vkUnmapMemory@plt>
    2c6b: c5 f8 57 c0                  	vxorps	xmm0, xmm0, xmm0
    2c6f: c5 fc 29 84 24 00 01 00 00   	vmovaps	ymmword ptr [rsp + 256], ymm0
    2c78: c5 fc 29 84 24 20 01 00 00   	vmovaps	ymmword ptr [rsp + 288], ymm0
    2c81: 48 c7 84 24 40 01 00 00 00 00 00 00  	mov	qword ptr [rsp + 320], 0
    2c8d: c7 84 24 00 01 00 00 04 00 00 00     	mov	dword ptr [rsp + 256], 4
    2c98: c7 84 24 28 01 00 00 01 00 00 00     	mov	dword ptr [rsp + 296], 1
    2ca3: 4c 89 b4 24 30 01 00 00      	mov	qword ptr [rsp + 304], r14
    2cab: 49 8b 7f 20                  	mov	rdi, qword ptr [r15 + 32]
    2caf: 48 8d 94 24 00 01 00 00      	lea	rdx, [rsp + 256]
    2cb7: be 01 00 00 00               	mov	esi, 1
    2cbc: 31 c9                        	xor	ecx, ecx
    2cbe: c5 f8 77                     	vzeroupper
    2cc1: e8 ba f4 ff ff               	call	0x2180 <vkQueueSubmit@plt>
    2cc6: 49 8b 7f 20                  	mov	rdi, qword ptr [r15 + 32]
    2cca: e8 a1 f3 ff ff               	call	0x2070 <vkQueueWaitIdle@plt>
    2ccf: 48 c7 44 24 28 00 00 00 00   	mov	qword ptr [rsp + 40], 0
    2cd8: 49 8b 3f                     	mov	rdi, qword ptr [r15]
    2cdb: 48 8b 74 24 08               	mov	rsi, qword ptr [rsp + 8]
    2ce0: 4c 8d 4c 24 28               	lea	r9, [rsp + 40]
    2ce5: 31 d2                        	xor	edx, edx
    2ce7: 48 c7 c1 ff ff ff ff         	mov	rcx, -1
    2cee: 45 31 c0                     	xor	r8d, r8d
    2cf1: e8 5a f5 ff ff               	call	0x2250 <vkMapMemory@plt>
    2cf6: 85 c0                        	test	eax, eax
    2cf8: 0f 85 72 04 00 00            	jne	0x3170 <nnRunTwoMatricesAndOutput+0xd10>
    2cfe: 4b 8d 34 ac                  	lea	rsi, [r12 + 4*r13]
    2d02: 4c 8b 64 24 60               	mov	r12, qword ptr [rsp + 96]
    2d07: 49 8b 3c 24                  	mov	rdi, qword ptr [r12]
    2d0b: 48 89 da                     	mov	rdx, rbx
    2d0e: e8 fd f4 ff ff               	call	0x2210 <memcpy@plt>
    2d13: 48 8b 1d de 42 00 00         	mov	rbx, qword ptr [rip + 17118] # 0x6ff8 <vkUpdateDescriptorSets+0x6ff8>
    2d1a: 48 8b 3b                     	mov	rdi, qword ptr [rbx]
    2d1d: 41 8b 54 24 08               	mov	edx, dword ptr [r12 + 8]
    2d22: 41 8b 4c 24 0c               	mov	ecx, dword ptr [r12 + 12]
    2d27: 48 8d 35 12 23 00 00         	lea	rsi, [rip + 8978]       # 0x5040 <vkUpdateDescriptorSets+0x5040>
    2d2e: 45 31 ff                     	xor	r15d, r15d
    2d31: 31 c0                        	xor	eax, eax
    2d33: e8 a8 f4 ff ff               	call	0x21e0 <fprintf@plt>
    2d38: 48 8b 33                     	mov	rsi, qword ptr [rbx]
    2d3b: bf 0a 00 00 00               	mov	edi, 10
    2d40: e8 5b f4 ff ff               	call	0x21a0 <fputc@plt>
    2d45: 41 83 7c 24 08 00            	cmp	dword ptr [r12 + 8], 0
    2d4b: 0f 84 c9 00 00 00            	je	0x2e1a <nnRunTwoMatricesAndOutput+0x9ba>
    2d51: 4c 8d 35 fe 22 00 00         	lea	r14, [rip + 8958]       # 0x5056 <vkUpdateDescriptorSets+0x5056>
    2d58: eb 7f                        	jmp	0x2dd9 <nnRunTwoMatricesAndOutput+0x979>
    2d5a: 66 0f 1f 44 00 00            	nop	word ptr [rax + rax]
    2d60: 49 8b 34 24                  	mov	rsi, qword ptr [r12]
    2d64: bf 0a 00 00 00               	mov	edi, 10
    2d69: e8 32 f4 ff ff               	call	0x21a0 <fputc@plt>
    2d6e: 41 83 c5 01                  	add	r13d, 1
    2d72: 44 3b 6b 08                  	cmp	r13d, dword ptr [rbx + 8]
    2d76: 0f 83 55 f7 ff ff            	jae	0x24d1 <nnRunTwoMatricesAndOutput+0x71>
    2d7c: 8b 43 0c                     	mov	eax, dword ptr [rbx + 12]
    2d7f: 85 c0                        	test	eax, eax
    2d81: 74 dd                        	je	0x2d60 <nnRunTwoMatricesAndOutput+0x900>
    2d83: 45 31 ff                     	xor	r15d, r15d
    2d86: 49 8b 3c 24                  	mov	rdi, qword ptr [r12]
    2d8a: 48 8b 0b                     	mov	rcx, qword ptr [rbx]
    2d8d: 41 0f af c5                  	imul	eax, r13d
    2d91: 44 01 f8                     	add	eax, r15d
    2d94: c5 fa 10 04 81               	vmovss	xmm0, dword ptr [rcx + 4*rax] # xmm0 = mem[0],zero,zero,zero
    2d99: c5 fa 5a c0                  	vcvtss2sd	xmm0, xmm0, xmm0
    2d9d: 48 8d 35 b2 22 00 00         	lea	rsi, [rip + 8882]       # 0x5056 <vkUpdateDescriptorSets+0x5056>
    2da4: b0 01                        	mov	al, 1
    2da6: e8 35 f4 ff ff               	call	0x21e0 <fprintf@plt>
    2dab: 41 83 c7 01                  	add	r15d, 1
    2daf: 8b 43 0c                     	mov	eax, dword ptr [rbx + 12]
    2db2: 41 39 c7                     	cmp	r15d, eax
    2db5: 72 cf                        	jb	0x2d86 <nnRunTwoMatricesAndOutput+0x926>
    2db7: eb a7                        	jmp	0x2d60 <nnRunTwoMatricesAndOutput+0x900>
    2db9: 0f 1f 80 00 00 00 00         	nop	dword ptr [rax]
    2dc0: 49 8b 75 00                  	mov	rsi, qword ptr [r13]
    2dc4: bf 0a 00 00 00               	mov	edi, 10
    2dc9: e8 d2 f3 ff ff               	call	0x21a0 <fputc@plt>
    2dce: 41 83 c7 01                  	add	r15d, 1
    2dd2: 45 3b 7c 24 08               	cmp	r15d, dword ptr [r12 + 8]
    2dd7: 73 41                        	jae	0x2e1a <nnRunTwoMatricesAndOutput+0x9ba>
    2dd9: 41 8b 44 24 0c               	mov	eax, dword ptr [r12 + 12]
    2dde: 85 c0                        	test	eax, eax
    2de0: 4c 8b 2d 11 42 00 00         	mov	r13, qword ptr [rip + 16913] # 0x6ff8 <vkUpdateDescriptorSets+0x6ff8>
    2de7: 74 d7                        	je	0x2dc0 <nnRunTwoMatricesAndOutput+0x960>
    2de9: 31 db                        	xor	ebx, ebx
    2deb: 49 8b 7d 00                  	mov	rdi, qword ptr [r13]
    2def: 49 8b 0c 24                  	mov	rcx, qword ptr [r12]
    2df3: 41 0f af c7                  	imul	eax, r15d
    2df7: 01 d8                        	add	eax, ebx
    2df9: c5 fa 10 04 81               	vmovss	xmm0, dword ptr [rcx + 4*rax] # xmm0 = mem[0],zero,zero,zero
    2dfe: c5 fa 5a c0                  	vcvtss2sd	xmm0, xmm0, xmm0
    2e02: 4c 89 f6                     	mov	rsi, r14
    2e05: b0 01                        	mov	al, 1
    2e07: e8 d4 f3 ff ff               	call	0x21e0 <fprintf@plt>
    2e0c: 83 c3 01                     	add	ebx, 1
    2e0f: 41 8b 44 24 0c               	mov	eax, dword ptr [r12 + 12]
    2e14: 39 c3                        	cmp	ebx, eax
    2e16: 72 d3                        	jb	0x2deb <nnRunTwoMatricesAndOutput+0x98b>
    2e18: eb a6                        	jmp	0x2dc0 <nnRunTwoMatricesAndOutput+0x960>
    2e1a: 48 8b 05 d7 41 00 00         	mov	rax, qword ptr [rip + 16855] # 0x6ff8 <vkUpdateDescriptorSets+0x6ff8>
    2e21: 48 8b 30                     	mov	rsi, qword ptr [rax]
    2e24: bf 0a 00 00 00               	mov	edi, 10
    2e29: e8 72 f3 ff ff               	call	0x21a0 <fputc@plt>
    2e2e: 48 8b 44 24 10               	mov	rax, qword ptr [rsp + 16]
    2e33: 48 8b 38                     	mov	rdi, qword ptr [rax]
    2e36: 48 8b 74 24 08               	mov	rsi, qword ptr [rsp + 8]
    2e3b: e8 00 f3 ff ff               	call	0x2140 <vkUnmapMemory@plt>
    2e40: 48 8b bc 24 80 00 00 00      	mov	rdi, qword ptr [rsp + 128]
    2e48: e8 03 f2 ff ff               	call	0x2050 <free@plt>
    2e4d: 48 8b bc 24 88 00 00 00      	mov	rdi, qword ptr [rsp + 136]
    2e55: e8 f6 f1 ff ff               	call	0x2050 <free@plt>
    2e5a: 48 8d 65 d8                  	lea	rsp, [rbp - 40]
    2e5e: 5b                           	pop	rbx
    2e5f: 41 5c                        	pop	r12
    2e61: 41 5d                        	pop	r13
    2e63: 41 5e                        	pop	r14
    2e65: 41 5f                        	pop	r15
    2e67: 5d                           	pop	rbp
    2e68: c3                           	ret
    2e69: 4c 8d 2d e6 21 00 00         	lea	r13, [rip + 8678]       # 0x5056 <vkUpdateDescriptorSets+0x5056>
    2e70: eb 2a                        	jmp	0x2e9c <nnRunTwoMatricesAndOutput+0xa3c>
    2e72: 66 2e 0f 1f 84 00 00 00 00 00	nop	word ptr cs:[rax + rax]
    2e7c: 0f 1f 40 00                  	nop	dword ptr [rax]
    2e80: 49 8b 34 24                  	mov	rsi, qword ptr [r12]
    2e84: bf 0a 00 00 00               	mov	edi, 10
    2e89: e8 12 f3 ff ff               	call	0x21a0 <fputc@plt>
    2e8e: 41 83 c7 01                  	add	r15d, 1
    2e92: 45 3b 7e 08                  	cmp	r15d, dword ptr [r14 + 8]
    2e96: 0f 83 81 f6 ff ff            	jae	0x251d <nnRunTwoMatricesAndOutput+0xbd>
    2e9c: 41 8b 46 0c                  	mov	eax, dword ptr [r14 + 12]
    2ea0: 85 c0                        	test	eax, eax
    2ea2: 74 dc                        	je	0x2e80 <nnRunTwoMatricesAndOutput+0xa20>
    2ea4: 31 db                        	xor	ebx, ebx
    2ea6: 49 8b 3c 24                  	mov	rdi, qword ptr [r12]
    2eaa: 49 8b 0e                     	mov	rcx, qword ptr [r14]
    2ead: 41 0f af c7                  	imul	eax, r15d
    2eb1: 01 d8                        	add	eax, ebx
    2eb3: c5 fa 10 04 81               	vmovss	xmm0, dword ptr [rcx + 4*rax] # xmm0 = mem[0],zero,zero,zero
    2eb8: c5 fa 5a c0                  	vcvtss2sd	xmm0, xmm0, xmm0
    2ebc: 4c 89 ee                     	mov	rsi, r13
    2ebf: b0 01                        	mov	al, 1
    2ec1: e8 1a f3 ff ff               	call	0x21e0 <fprintf@plt>
    2ec6: 83 c3 01                     	add	ebx, 1
    2ec9: 41 8b 46 0c                  	mov	eax, dword ptr [r14 + 12]
    2ecd: 39 c3                        	cmp	ebx, eax
    2ecf: 72 d5                        	jb	0x2ea6 <nnRunTwoMatricesAndOutput+0xa46>
    2ed1: eb ad                        	jmp	0x2e80 <nnRunTwoMatricesAndOutput+0xa20>
    2ed3: 4c 8d 2d 7c 21 00 00         	lea	r13, [rip + 8572]       # 0x5056 <vkUpdateDescriptorSets+0x5056>
    2eda: eb 20                        	jmp	0x2efc <nnRunTwoMatricesAndOutput+0xa9c>
    2edc: 0f 1f 40 00                  	nop	dword ptr [rax]
    2ee0: 49 8b 36                     	mov	rsi, qword ptr [r14]
    2ee3: bf 0a 00 00 00               	mov	edi, 10
    2ee8: e8 b3 f2 ff ff               	call	0x21a0 <fputc@plt>
    2eed: 41 83 c7 01                  	add	r15d, 1
    2ef1: 45 3b 7c 24 08               	cmp	r15d, dword ptr [r12 + 8]
    2ef6: 0f 83 77 f6 ff ff            	jae	0x2573 <nnRunTwoMatricesAndOutput+0x113>
    2efc: 41 8b 44 24 0c               	mov	eax, dword ptr [r12 + 12]
    2f01: 85 c0                        	test	eax, eax
    2f03: 4c 8b 35 ee 40 00 00         	mov	r14, qword ptr [rip + 16622] # 0x6ff8 <vkUpdateDescriptorSets+0x6ff8>
    2f0a: 74 d4                        	je	0x2ee0 <nnRunTwoMatricesAndOutput+0xa80>
    2f0c: 31 db                        	xor	ebx, ebx
    2f0e: 49 8b 3e                     	mov	rdi, qword ptr [r14]
    2f11: 49 8b 0c 24                  	mov	rcx, qword ptr [r12]
    2f15: 41 0f af c7                  	imul	eax, r15d
    2f19: 01 d8                        	add	eax, ebx
    2f1b: c5 fa 10 04 81               	vmovss	xmm0, dword ptr [rcx + 4*rax] # xmm0 = mem[0],zero,zero,zero
    2f20: c5 fa 5a c0                  	vcvtss2sd	xmm0, xmm0, xmm0
    2f24: 4c 89 ee                     	mov	rsi, r13
    2f27: b0 01                        	mov	al, 1
    2f29: e8 b2 f2 ff ff               	call	0x21e0 <fprintf@plt>
    2f2e: 83 c3 01                     	add	ebx, 1
    2f31: 41 8b 44 24 0c               	mov	eax, dword ptr [r12 + 12]
    2f36: 39 c3                        	cmp	ebx, eax
    2f38: 72 d4                        	jb	0x2f0e <nnRunTwoMatricesAndOutput+0xaae>
    2f3a: eb a4                        	jmp	0x2ee0 <nnRunTwoMatricesAndOutput+0xa80>
    2f3c: 48 8b 3b                     	mov	rdi, qword ptr [rbx]
    2f3f: 48 8d b4 24 90 01 00 00      	lea	rsi, [rsp + 400]
    2f47: 48 8d 4c 24 78               	lea	rcx, [rsp + 120]
    2f4c: 31 d2                        	xor	edx, edx
    2f4e: e8 ed f0 ff ff               	call	0x2040 <vkCreateDescriptorSetLayout@plt>
    2f53: 48 8d 3d 00 21 00 00         	lea	rdi, [rip + 8448]       # 0x505a <vkUpdateDescriptorSets+0x505a>
    2f5a: 89 c6                        	mov	esi, eax
    2f5c: ba 24 00 00 00               	mov	edx, 36
    2f61: e9 3b 02 00 00               	jmp	0x31a1 <nnRunTwoMatricesAndOutput+0xd41>
    2f66: 48 8b 3b                     	mov	rdi, qword ptr [rbx]
    2f69: 48 8d b4 24 c8 00 00 00      	lea	rsi, [rsp + 200]
    2f71: 48 8d 4c 24 20               	lea	rcx, [rsp + 32]
    2f76: 31 d2                        	xor	edx, edx
    2f78: e8 f3 f2 ff ff               	call	0x2270 <vkCreateBuffer@plt>
    2f7d: 48 8d 3d d6 20 00 00         	lea	rdi, [rip + 8406]       # 0x505a <vkUpdateDescriptorSets+0x505a>
    2f84: 89 c6                        	mov	esi, eax
    2f86: ba 30 00 00 00               	mov	edx, 48
    2f8b: e9 11 02 00 00               	jmp	0x31a1 <nnRunTwoMatricesAndOutput+0xd41>
    2f90: 48 8b 3b                     	mov	rdi, qword ptr [rbx]
    2f93: 48 8d b4 24 c8 00 00 00      	lea	rsi, [rsp + 200]
    2f9b: 48 8d 4c 24 40               	lea	rcx, [rsp + 64]
    2fa0: 31 d2                        	xor	edx, edx
    2fa2: e8 c9 f2 ff ff               	call	0x2270 <vkCreateBuffer@plt>
    2fa7: 48 8d 3d ac 20 00 00         	lea	rdi, [rip + 8364]       # 0x505a <vkUpdateDescriptorSets+0x505a>
    2fae: 89 c6                        	mov	esi, eax
    2fb0: ba 33 00 00 00               	mov	edx, 51
    2fb5: e9 e7 01 00 00               	jmp	0x31a1 <nnRunTwoMatricesAndOutput+0xd41>
    2fba: 48 8b 3b                     	mov	rdi, qword ptr [rbx]
    2fbd: 48 8d b4 24 c8 00 00 00      	lea	rsi, [rsp + 200]
    2fc5: 48 8d 4c 24 38               	lea	rcx, [rsp + 56]
    2fca: 31 d2                        	xor	edx, edx
    2fcc: e8 9f f2 ff ff               	call	0x2270 <vkCreateBuffer@plt>
    2fd1: 48 8d 3d 82 20 00 00         	lea	rdi, [rip + 8322]       # 0x505a <vkUpdateDescriptorSets+0x505a>
    2fd8: 89 c6                        	mov	esi, eax
    2fda: ba 36 00 00 00               	mov	edx, 54
    2fdf: e9 bd 01 00 00               	jmp	0x31a1 <nnRunTwoMatricesAndOutput+0xd41>
    2fe4: 48 8d b4 24 70 01 00 00      	lea	rsi, [rsp + 368]
    2fec: 48 8d 4c 24 08               	lea	rcx, [rsp + 8]
    2ff1: 31 d2                        	xor	edx, edx
    2ff3: e8 38 f2 ff ff               	call	0x2230 <vkAllocateMemory@plt>
    2ff8: 48 8d 3d 5b 20 00 00         	lea	rdi, [rip + 8283]       # 0x505a <vkUpdateDescriptorSets+0x505a>
    2fff: 89 c6                        	mov	esi, eax
    3001: ba 4f 00 00 00               	mov	edx, 79
    3006: e9 96 01 00 00               	jmp	0x31a1 <nnRunTwoMatricesAndOutput+0xd41>
    300b: 48 8b 44 24 10               	mov	rax, qword ptr [rsp + 16]
    3010: 48 8b 38                     	mov	rdi, qword ptr [rax]
    3013: 48 8b 74 24 20               	mov	rsi, qword ptr [rsp + 32]
    3018: 48 8b 54 24 08               	mov	rdx, qword ptr [rsp + 8]
    301d: 31 c9                        	xor	ecx, ecx
    301f: e8 5c f3 ff ff               	call	0x2380 <vkBindBufferMemory@plt>
    3024: 48 8d 3d 2f 20 00 00         	lea	rdi, [rip + 8239]       # 0x505a <vkUpdateDescriptorSets+0x505a>
    302b: 89 c6                        	mov	esi, eax
    302d: ba 52 00 00 00               	mov	edx, 82
    3032: e9 6a 01 00 00               	jmp	0x31a1 <nnRunTwoMatricesAndOutput+0xd41>
    3037: 49 8b 3f                     	mov	rdi, qword ptr [r15]
    303a: 48 8b 74 24 40               	mov	rsi, qword ptr [rsp + 64]
    303f: 48 8b 54 24 08               	mov	rdx, qword ptr [rsp + 8]
    3044: 48 89 d9                     	mov	rcx, rbx
    3047: e8 34 f3 ff ff               	call	0x2380 <vkBindBufferMemory@plt>
    304c: 48 8d 3d 07 20 00 00         	lea	rdi, [rip + 8199]       # 0x505a <vkUpdateDescriptorSets+0x505a>
    3053: 89 c6                        	mov	esi, eax
    3055: ba 55 00 00 00               	mov	edx, 85
    305a: e9 42 01 00 00               	jmp	0x31a1 <nnRunTwoMatricesAndOutput+0xd41>
    305f: 49 8b 3f                     	mov	rdi, qword ptr [r15]
    3062: 48 8b 74 24 38               	mov	rsi, qword ptr [rsp + 56]
    3067: 48 8b 54 24 08               	mov	rdx, qword ptr [rsp + 8]
    306c: 48 89 d9                     	mov	rcx, rbx
    306f: e8 0c f3 ff ff               	call	0x2380 <vkBindBufferMemory@plt>
    3074: 48 8d 3d df 1f 00 00         	lea	rdi, [rip + 8159]       # 0x505a <vkUpdateDescriptorSets+0x505a>
    307b: 89 c6                        	mov	esi, eax
    307d: ba 58 00 00 00               	mov	edx, 88
    3082: e9 1a 01 00 00               	jmp	0x31a1 <nnRunTwoMatricesAndOutput+0xd41>
    3087: 49 8b 3f                     	mov	rdi, qword ptr [r15]
    308a: 48 8d b4 24 d8 01 00 00      	lea	rsi, [rsp + 472]
    3092: 48 8d 4c 24 70               	lea	rcx, [rsp + 112]
    3097: 31 d2                        	xor	edx, edx
    3099: e8 e2 f1 ff ff               	call	0x2280 <vkCreatePipelineLayout@plt>
    309e: 48 8d 3d b5 1f 00 00         	lea	rdi, [rip + 8117]       # 0x505a <vkUpdateDescriptorSets+0x505a>
    30a5: 89 c6                        	mov	esi, eax
    30a7: ba 65 00 00 00               	mov	edx, 101
    30ac: e9 f0 00 00 00               	jmp	0x31a1 <nnRunTwoMatricesAndOutput+0xd41>
    30b1: 49 8b 3f                     	mov	rdi, qword ptr [r15]
    30b4: 48 8d b4 24 b0 01 00 00      	lea	rsi, [rsp + 432]
    30bc: 48 8d 54 24 58               	lea	rdx, [rsp + 88]
    30c1: e8 9a f1 ff ff               	call	0x2260 <vkAllocateDescriptorSets@plt>
    30c6: 48 8d 3d 8d 1f 00 00         	lea	rdi, [rip + 8077]       # 0x505a <vkUpdateDescriptorSets+0x505a>
    30cd: 89 c6                        	mov	esi, eax
    30cf: ba 7c 00 00 00               	mov	edx, 124
    30d4: e9 c8 00 00 00               	jmp	0x31a1 <nnRunTwoMatricesAndOutput+0xd41>
    30d9: 49 8b 3f                     	mov	rdi, qword ptr [r15]
    30dc: 48 8d b4 24 a0 00 00 00      	lea	rsi, [rsp + 160]
    30e4: 48 8d 4c 24 68               	lea	rcx, [rsp + 104]
    30e9: 31 d2                        	xor	edx, edx
    30eb: e8 00 f0 ff ff               	call	0x20f0 <vkCreateCommandPool@plt>
    30f0: 48 8d 3d 63 1f 00 00         	lea	rdi, [rip + 8035]       # 0x505a <vkUpdateDescriptorSets+0x505a>
    30f7: 89 c6                        	mov	esi, eax
    30f9: ba ac 00 00 00               	mov	edx, 172
    30fe: e9 9e 00 00 00               	jmp	0x31a1 <nnRunTwoMatricesAndOutput+0xd41>
    3103: 49 8b 3f                     	mov	rdi, qword ptr [r15]
    3106: 48 8d b4 24 50 01 00 00      	lea	rsi, [rsp + 336]
    310e: 48 8d 54 24 18               	lea	rdx, [rsp + 24]
    3113: e8 a8 f1 ff ff               	call	0x22c0 <vkAllocateCommandBuffers@plt>
    3118: 48 8d 3d 3b 1f 00 00         	lea	rdi, [rip + 7995]       # 0x505a <vkUpdateDescriptorSets+0x505a>
    311f: 89 c6                        	mov	esi, eax
    3121: ba b5 00 00 00               	mov	edx, 181
    3126: eb 79                        	jmp	0x31a1 <nnRunTwoMatricesAndOutput+0xd41>
    3128: 48 8b 7c 24 18               	mov	rdi, qword ptr [rsp + 24]
    312d: e8 5e f0 ff ff               	call	0x2190 <vkEndCommandBuffer@plt>
    3132: 48 8d 3d 21 1f 00 00         	lea	rdi, [rip + 7969]       # 0x505a <vkUpdateDescriptorSets+0x505a>
    3139: 89 c6                        	mov	esi, eax
    313b: ba c4 00 00 00               	mov	edx, 196
    3140: eb 5f                        	jmp	0x31a1 <nnRunTwoMatricesAndOutput+0xd41>
    3142: 49 8b 3f                     	mov	rdi, qword ptr [r15]
    3145: 48 8b 74 24 08               	mov	rsi, qword ptr [rsp + 8]
    314a: 4c 8d 4c 24 28               	lea	r9, [rsp + 40]
    314f: 31 d2                        	xor	edx, edx
    3151: 48 c7 c1 ff ff ff ff         	mov	rcx, -1
    3158: 45 31 c0                     	xor	r8d, r8d
    315b: e8 f0 f0 ff ff               	call	0x2250 <vkMapMemory@plt>
    3160: 48 8d 3d f3 1e 00 00         	lea	rdi, [rip + 7923]       # 0x505a <vkUpdateDescriptorSets+0x505a>
    3167: 89 c6                        	mov	esi, eax
    3169: ba c7 00 00 00               	mov	edx, 199
    316e: eb 31                        	jmp	0x31a1 <nnRunTwoMatricesAndOutput+0xd41>
    3170: 48 8b 44 24 10               	mov	rax, qword ptr [rsp + 16]
    3175: 48 8b 38                     	mov	rdi, qword ptr [rax]
    3178: 48 8b 74 24 08               	mov	rsi, qword ptr [rsp + 8]
    317d: 4c 8d 4c 24 28               	lea	r9, [rsp + 40]
    3182: 31 d2                        	xor	edx, edx
    3184: 48 c7 c1 ff ff ff ff         	mov	rcx, -1
    318b: 45 31 c0                     	xor	r8d, r8d
    318e: e8 bd f0 ff ff               	call	0x2250 <vkMapMemory@plt>
    3193: 48 8d 3d c0 1e 00 00         	lea	rdi, [rip + 7872]       # 0x505a <vkUpdateDescriptorSets+0x505a>
    319a: 89 c6                        	mov	esi, eax
    319c: ba dc 00 00 00               	mov	edx, 220
    31a1: 31 c0                        	xor	eax, eax
    31a3: e8 58 ef ff ff               	call	0x2100 <printf@plt>
    31a8: 31 ff                        	xor	edi, edi
    31aa: e8 81 f1 ff ff               	call	0x2330 <exit@plt>
    31af: 90                           	nop

00000000000031b0 <nnValidCrossCorrelationCpu>:
    31b0: 55                           	push	rbp
    31b1: 41 57                        	push	r15
    31b3: 41 56                        	push	r14
    31b5: 41 55                        	push	r13
    31b7: 41 54                        	push	r12
    31b9: 53                           	push	rbx
    31ba: 8b 42 08                     	mov	eax, dword ptr [rdx + 8]
    31bd: 89 44 24 d0                  	mov	dword ptr [rsp - 48], eax
    31c1: 85 c0                        	test	eax, eax
    31c3: 0f 84 85 01 00 00            	je	0x334e <nnValidCrossCorrelationCpu+0x19e>
    31c9: 8b 42 0c                     	mov	eax, dword ptr [rdx + 12]
    31cc: 48 89 44 24 e0               	mov	qword ptr [rsp - 32], rax
    31d1: 48 85 c0                     	test	rax, rax
    31d4: 0f 84 74 01 00 00            	je	0x334e <nnValidCrossCorrelationCpu+0x19e>
    31da: 8b 46 08                     	mov	eax, dword ptr [rsi + 8]
    31dd: 89 44 24 dc                  	mov	dword ptr [rsp - 36], eax
    31e1: 85 c0                        	test	eax, eax
    31e3: 0f 84 65 01 00 00            	je	0x334e <nnValidCrossCorrelationCpu+0x19e>
    31e9: 44 8b 5e 0c                  	mov	r11d, dword ptr [rsi + 12]
    31ed: 4d 85 db                     	test	r11, r11
    31f0: 0f 84 58 01 00 00            	je	0x334e <nnValidCrossCorrelationCpu+0x19e>
    31f6: 48 8b 07                     	mov	rax, qword ptr [rdi]
    31f9: 44 8b 57 0c                  	mov	r10d, dword ptr [rdi + 12]
    31fd: 48 8b 36                     	mov	rsi, qword ptr [rsi]
    3200: 48 8b 12                     	mov	rdx, qword ptr [rdx]
    3203: 44 89 d9                     	mov	ecx, r11d
    3206: 83 e1 fe                     	and	ecx, -2
    3209: 31 ff                        	xor	edi, edi
    320b: 41 bc 01 00 00 00            	mov	r12d, 1
    3211: eb 22                        	jmp	0x3235 <nnValidCrossCorrelationCpu+0x85>
    3213: 66 2e 0f 1f 84 00 00 00 00 00	nop	word ptr cs:[rax + rax]
    321d: 0f 1f 00                     	nop	dword ptr [rax]
    3220: 83 c7 01                     	add	edi, 1
    3223: 44 8b 64 24 d4               	mov	r12d, dword ptr [rsp - 44]
    3228: 45 01 d4                     	add	r12d, r10d
    322b: 3b 7c 24 d0                  	cmp	edi, dword ptr [rsp - 48]
    322f: 0f 84 19 01 00 00            	je	0x334e <nnValidCrossCorrelationCpu+0x19e>
    3235: 48 89 7c 24 e8               	mov	qword ptr [rsp - 24], rdi
    323a: 48 8b 7c 24 e0               	mov	rdi, qword ptr [rsp - 32]
    323f: 89 fb                        	mov	ebx, edi
    3241: 48 8b 7c 24 e8               	mov	rdi, qword ptr [rsp - 24]
    3246: 0f af df                     	imul	ebx, edi
    3249: 48 89 5c 24 f8               	mov	qword ptr [rsp - 8], rbx
    324e: 44 89 64 24 d4               	mov	dword ptr [rsp - 44], r12d
    3253: 31 db                        	xor	ebx, ebx
    3255: eb 22                        	jmp	0x3279 <nnValidCrossCorrelationCpu+0xc9>
    3257: 66 0f 1f 84 00 00 00 00 00   	nop	word ptr [rax + rax]
    3260: 48 8b 5c 24 f0               	mov	rbx, qword ptr [rsp - 16]
    3265: 48 83 c3 01                  	add	rbx, 1
    3269: 44 8b 64 24 d8               	mov	r12d, dword ptr [rsp - 40]
    326e: 41 83 c4 01                  	add	r12d, 1
    3272: 48 3b 5c 24 e0               	cmp	rbx, qword ptr [rsp - 32]
    3277: 74 a7                        	je	0x3220 <nnValidCrossCorrelationCpu+0x70>
    3279: 48 8b 6c 24 f8               	mov	rbp, qword ptr [rsp - 8]
    327e: 48 89 5c 24 f0               	mov	qword ptr [rsp - 16], rbx
    3283: 01 eb                        	add	ebx, ebp
    3285: c5 fa 10 04 9a               	vmovss	xmm0, dword ptr [rdx + 4*rbx] # xmm0 = mem[0],zero,zero,zero
    328a: 45 31 c0                     	xor	r8d, r8d
    328d: 41 be 01 00 00 00            	mov	r14d, 1
    3293: 44 89 64 24 d8               	mov	dword ptr [rsp - 40], r12d
    3298: eb 17                        	jmp	0x32b1 <nnValidCrossCorrelationCpu+0x101>
    329a: 66 0f 1f 44 00 00            	nop	word ptr [rax + rax]
    32a0: 41 83 c0 01                  	add	r8d, 1
    32a4: 45 01 d4                     	add	r12d, r10d
    32a7: 45 01 de                     	add	r14d, r11d
    32aa: 44 3b 44 24 dc               	cmp	r8d, dword ptr [rsp - 36]
    32af: 74 af                        	je	0x3260 <nnValidCrossCorrelationCpu+0xb0>
    32b1: 41 83 fb 01                  	cmp	r11d, 1
    32b5: 75 09                        	jne	0x32c0 <nnValidCrossCorrelationCpu+0x110>
    32b7: 45 31 ff                     	xor	r15d, r15d
    32ba: eb 55                        	jmp	0x3311 <nnValidCrossCorrelationCpu+0x161>
    32bc: 0f 1f 40 00                  	nop	dword ptr [rax]
    32c0: 45 89 f1                     	mov	r9d, r14d
    32c3: 45 89 e5                     	mov	r13d, r12d
    32c6: 45 31 ff                     	xor	r15d, r15d
    32c9: 0f 1f 80 00 00 00 00         	nop	dword ptr [rax]
    32d0: 41 8d 6d ff                  	lea	ebp, [r13 - 1]
    32d4: c5 fa 10 0c a8               	vmovss	xmm1, dword ptr [rax + 4*rbp] # xmm1 = mem[0],zero,zero,zero
    32d9: 41 8d 69 ff                  	lea	ebp, [r9 - 1]
    32dd: c4 e3 71 6a 04 ae 00         	vfmaddss	xmm0, xmm1, dword ptr [rsi + 4*rbp], xmm0 # xmm0 = (xmm1 * mem) + xmm0
    32e4: c5 fa 11 04 9a               	vmovss	dword ptr [rdx + 4*rbx], xmm0
    32e9: 44 89 ed                     	mov	ebp, r13d
    32ec: c5 fa 10 0c a8               	vmovss	xmm1, dword ptr [rax + 4*rbp] # xmm1 = mem[0],zero,zero,zero
    32f1: 44 89 cd                     	mov	ebp, r9d
    32f4: c4 e3 71 6a 04 ae 00         	vfmaddss	xmm0, xmm1, dword ptr [rsi + 4*rbp], xmm0 # xmm0 = (xmm1 * mem) + xmm0
    32fb: c5 fa 11 04 9a               	vmovss	dword ptr [rdx + 4*rbx], xmm0
    3300: 49 83 c7 02                  	add	r15, 2
    3304: 41 83 c5 02                  	add	r13d, 2
    3308: 41 83 c1 02                  	add	r9d, 2
    330c: 4c 39 f9                     	cmp	rcx, r15
    330f: 75 bf                        	jne	0x32d0 <nnValidCrossCorrelationCpu+0x120>
    3311: 41 f6 c3 01                  	test	r11b, 1
    3315: 74 89                        	je	0x32a0 <nnValidCrossCorrelationCpu+0xf0>
    3317: 41 8d 2c 38                  	lea	ebp, [r8 + rdi]
    331b: 41 0f af ea                  	imul	ebp, r10d
    331f: 45 89 d9                     	mov	r9d, r11d
    3322: 45 0f af c8                  	imul	r9d, r8d
    3326: 48 8b 7c 24 f0               	mov	rdi, qword ptr [rsp - 16]
    332b: 44 01 ff                     	add	edi, r15d
    332e: 01 fd                        	add	ebp, edi
    3330: 48 8b 7c 24 e8               	mov	rdi, qword ptr [rsp - 24]
    3335: c5 fa 10 0c a8               	vmovss	xmm1, dword ptr [rax + 4*rbp] # xmm1 = mem[0],zero,zero,zero
    333a: 45 01 f9                     	add	r9d, r15d
    333d: c4 a3 71 6a 04 8e 00         	vfmaddss	xmm0, xmm1, dword ptr [rsi + 4*r9], xmm0 # xmm0 = (xmm1 * mem) + xmm0
    3344: c5 fa 11 04 9a               	vmovss	dword ptr [rdx + 4*rbx], xmm0
    3349: e9 52 ff ff ff               	jmp	0x32a0 <nnValidCrossCorrelationCpu+0xf0>
    334e: 5b                           	pop	rbx
    334f: 41 5c                        	pop	r12
    3351: 41 5d                        	pop	r13
    3353: 41 5e                        	pop	r14
    3355: 41 5f                        	pop	r15
    3357: 5d                           	pop	rbp
    3358: c3                           	ret
    3359: 0f 1f 80 00 00 00 00         	nop	dword ptr [rax]

0000000000003360 <nnValidCrossCorrelationGpu>:
    3360: 55                           	push	rbp
    3361: 48 89 e5                     	mov	rbp, rsp
    3364: 41 57                        	push	r15
    3366: 41 56                        	push	r14
    3368: 41 55                        	push	r13
    336a: 41 54                        	push	r12
    336c: 53                           	push	rbx
    336d: 48 83 e4 e0                  	and	rsp, -32
    3371: 48 81 ec e0 02 00 00         	sub	rsp, 736
    3378: 48 89 bc 24 a8 00 00 00      	mov	qword ptr [rsp + 168], rdi
    3380: 8b 47 08                     	mov	eax, dword ptr [rdi + 8]
    3383: 89 44 24 34                  	mov	dword ptr [rsp + 52], eax
    3387: 8b 46 0c                     	mov	eax, dword ptr [rsi + 12]
    338a: 48 89 74 24 58               	mov	qword ptr [rsp + 88], rsi
    338f: 0f af 46 08                  	imul	eax, dword ptr [rsi + 8]
    3393: 89 44 24 4c                  	mov	dword ptr [rsp + 76], eax
    3397: 48 89 c8                     	mov	rax, rcx
    339a: 49 89 d5                     	mov	r13, rdx
    339d: 8b 52 08                     	mov	edx, dword ptr [rdx + 8]
    33a0: 41 8b 4d 0c                  	mov	ecx, dword ptr [r13 + 12]
    33a4: 89 ce                        	mov	esi, ecx
    33a6: 0f af f2                     	imul	esi, edx
    33a9: 89 74 24 30                  	mov	dword ptr [rsp + 48], esi
    33ad: 8b 70 08                     	mov	esi, dword ptr [rax + 8]
    33b0: 89 74 24 44                  	mov	dword ptr [rsp + 68], esi
    33b4: 48 89 44 24 50               	mov	qword ptr [rsp + 80], rax
    33b9: 8b 40 0c                     	mov	eax, dword ptr [rax + 12]
    33bc: 89 44 24 48                  	mov	dword ptr [rsp + 72], eax
    33c0: 48 8b 1d 31 3c 00 00         	mov	rbx, qword ptr [rip + 15409] # 0x6ff8 <vkUpdateDescriptorSets+0x6ff8>
    33c7: 48 8b 3b                     	mov	rdi, qword ptr [rbx]
    33ca: 48 8d 35 6f 1c 00 00         	lea	rsi, [rip + 7279]       # 0x5040 <vkUpdateDescriptorSets+0x5040>
    33d1: 45 31 e4                     	xor	r12d, r12d
    33d4: 31 c0                        	xor	eax, eax
    33d6: e8 05 ee ff ff               	call	0x21e0 <fprintf@plt>
    33db: 48 8b 33                     	mov	rsi, qword ptr [rbx]
    33de: bf 0a 00 00 00               	mov	edi, 10
    33e3: e8 b8 ed ff ff               	call	0x21a0 <fputc@plt>
    33e8: 41 83 7d 08 00               	cmp	dword ptr [r13 + 8], 0
    33ed: 0f 85 b0 07 00 00            	jne	0x3ba3 <nnValidCrossCorrelationGpu+0x843>
    33f3: 48 8b 33                     	mov	rsi, qword ptr [rbx]
    33f6: bf 0a 00 00 00               	mov	edi, 10
    33fb: e8 a0 ed ff ff               	call	0x21a0 <fputc@plt>
    3400: 48 8b 3b                     	mov	rdi, qword ptr [rbx]
    3403: 48 8d 35 64 1c 00 00         	lea	rsi, [rip + 7268]       # 0x506e <vkUpdateDescriptorSets+0x506e>
    340a: 8b 54 24 30                  	mov	edx, dword ptr [rsp + 48]
    340e: 31 c0                        	xor	eax, eax
    3410: e8 cb ed ff ff               	call	0x21e0 <fprintf@plt>
    3415: bf 48 00 00 00               	mov	edi, 72
    341a: e8 21 ee ff ff               	call	0x2240 <malloc@plt>
    341f: 48 89 c3                     	mov	rbx, rax
    3422: 4c 8d b4 24 e0 00 00 00      	lea	r14, [rsp + 224]
    342a: 4c 89 f7                     	mov	rdi, r14
    342d: 31 f6                        	xor	esi, esi
    342f: e8 1c ed ff ff               	call	0x2150 <nnCreateVkDescriptorSetLayoutBindingStorageBuffer@plt>
    3434: 48 8b 84 24 f0 00 00 00      	mov	rax, qword ptr [rsp + 240]
    343c: 48 89 43 10                  	mov	qword ptr [rbx + 16], rax
    3440: c5 f8 10 84 24 e0 00 00 00   	vmovups	xmm0, xmmword ptr [rsp + 224]
    3449: c5 f8 11 03                  	vmovups	xmmword ptr [rbx], xmm0
    344d: 4c 89 f7                     	mov	rdi, r14
    3450: be 01 00 00 00               	mov	esi, 1
    3455: e8 f6 ec ff ff               	call	0x2150 <nnCreateVkDescriptorSetLayoutBindingStorageBuffer@plt>
    345a: 48 8b 84 24 f0 00 00 00      	mov	rax, qword ptr [rsp + 240]
    3462: 48 89 43 28                  	mov	qword ptr [rbx + 40], rax
    3466: c5 f8 10 84 24 e0 00 00 00   	vmovups	xmm0, xmmword ptr [rsp + 224]
    346f: c5 f8 11 43 18               	vmovups	xmmword ptr [rbx + 24], xmm0
    3474: 4c 89 f7                     	mov	rdi, r14
    3477: be 02 00 00 00               	mov	esi, 2
    347c: e8 cf ec ff ff               	call	0x2150 <nnCreateVkDescriptorSetLayoutBindingStorageBuffer@plt>
    3481: 48 8b 84 24 f0 00 00 00      	mov	rax, qword ptr [rsp + 240]
    3489: 48 89 43 40                  	mov	qword ptr [rbx + 64], rax
    348d: c5 f8 10 84 24 e0 00 00 00   	vmovups	xmm0, xmmword ptr [rsp + 224]
    3496: c5 f8 11 43 30               	vmovups	xmmword ptr [rbx + 48], xmm0
    349b: c7 84 24 70 01 00 00 20 00 00 00     	mov	dword ptr [rsp + 368], 32
    34a6: 48 c7 84 24 78 01 00 00 00 00 00 00  	mov	qword ptr [rsp + 376], 0
    34b2: 48 b8 00 00 00 00 03 00 00 00	movabs	rax, 12884901888
    34bc: 48 89 84 24 80 01 00 00      	mov	qword ptr [rsp + 384], rax
    34c4: 48 89 9c 24 88 01 00 00      	mov	qword ptr [rsp + 392], rbx
    34cc: 4c 8b bc 24 a8 00 00 00      	mov	r15, qword ptr [rsp + 168]
    34d4: 49 8b 3f                     	mov	rdi, qword ptr [r15]
    34d7: 48 8d b4 24 70 01 00 00      	lea	rsi, [rsp + 368]
    34df: 4c 8d a4 24 d8 00 00 00      	lea	r12, [rsp + 216]
    34e7: 31 d2                        	xor	edx, edx
    34e9: 4c 89 e1                     	mov	rcx, r12
    34ec: e8 4f eb ff ff               	call	0x2040 <vkCreateDescriptorSetLayout@plt>
    34f1: 85 c0                        	test	eax, eax
    34f3: 0f 85 0d 07 00 00            	jne	0x3c06 <nnValidCrossCorrelationGpu+0x8a6>
    34f9: c7 44 24 70 0c 00 00 00      	mov	dword ptr [rsp + 112], 12
    3501: 48 c7 44 24 78 00 00 00 00   	mov	qword ptr [rsp + 120], 0
    350a: c7 84 24 80 00 00 00 00 00 00 00     	mov	dword ptr [rsp + 128], 0
    3515: 4c 8b 74 24 58               	mov	r14, qword ptr [rsp + 88]
    351a: 41 8b 46 0c                  	mov	eax, dword ptr [r14 + 12]
    351e: 41 0f af 46 08               	imul	eax, dword ptr [r14 + 8]
    3523: 48 c1 e0 02                  	shl	rax, 2
    3527: 48 89 84 24 88 00 00 00      	mov	qword ptr [rsp + 136], rax
    352f: 48 c7 84 24 90 00 00 00 20 00 00 00  	mov	qword ptr [rsp + 144], 32
    353b: c7 84 24 98 00 00 00 01 00 00 00     	mov	dword ptr [rsp + 152], 1
    3546: 48 8d 44 24 34               	lea	rax, [rsp + 52]
    354b: 48 89 84 24 a0 00 00 00      	mov	qword ptr [rsp + 160], rax
    3553: 49 8b 3f                     	mov	rdi, qword ptr [r15]
    3556: 48 8d 74 24 70               	lea	rsi, [rsp + 112]
    355b: 48 8d 4c 24 28               	lea	rcx, [rsp + 40]
    3560: 31 d2                        	xor	edx, edx
    3562: e8 09 ed ff ff               	call	0x2270 <vkCreateBuffer@plt>
    3567: 85 c0                        	test	eax, eax
    3569: 0f 85 c4 06 00 00            	jne	0x3c33 <nnValidCrossCorrelationGpu+0x8d3>
    356f: 41 8b 45 0c                  	mov	eax, dword ptr [r13 + 12]
    3573: 41 0f af 45 08               	imul	eax, dword ptr [r13 + 8]
    3578: 48 c1 e0 02                  	shl	rax, 2
    357c: 48 89 84 24 88 00 00 00      	mov	qword ptr [rsp + 136], rax
    3584: 49 8b 3f                     	mov	rdi, qword ptr [r15]
    3587: 48 8d 74 24 70               	lea	rsi, [rsp + 112]
    358c: 48 8d 4c 24 20               	lea	rcx, [rsp + 32]
    3591: 31 d2                        	xor	edx, edx
    3593: e8 d8 ec ff ff               	call	0x2270 <vkCreateBuffer@plt>
    3598: 85 c0                        	test	eax, eax
    359a: 0f 85 ba 06 00 00            	jne	0x3c5a <nnValidCrossCorrelationGpu+0x8fa>
    35a0: 48 8b 4c 24 50               	mov	rcx, qword ptr [rsp + 80]
    35a5: 8b 41 0c                     	mov	eax, dword ptr [rcx + 12]
    35a8: 0f af 41 08                  	imul	eax, dword ptr [rcx + 8]
    35ac: 48 c1 e0 02                  	shl	rax, 2
    35b0: 48 89 84 24 88 00 00 00      	mov	qword ptr [rsp + 136], rax
    35b8: 49 8b 3f                     	mov	rdi, qword ptr [r15]
    35bb: 48 8d 74 24 70               	lea	rsi, [rsp + 112]
    35c0: 48 8d 4c 24 18               	lea	rcx, [rsp + 24]
    35c5: 31 d2                        	xor	edx, edx
    35c7: e8 a4 ec ff ff               	call	0x2270 <vkCreateBuffer@plt>
    35cc: 85 c0                        	test	eax, eax
    35ce: 0f 85 ad 06 00 00            	jne	0x3c81 <nnValidCrossCorrelationGpu+0x921>
    35d4: 49 8b 3f                     	mov	rdi, qword ptr [r15]
    35d7: 48 8b 74 24 28               	mov	rsi, qword ptr [rsp + 40]
    35dc: 48 8d 94 24 e8 01 00 00      	lea	rdx, [rsp + 488]
    35e4: e8 47 eb ff ff               	call	0x2130 <vkGetBufferMemoryRequirements@plt>
    35e9: 48 8b 9c 24 e8 01 00 00      	mov	rbx, qword ptr [rsp + 488]
    35f1: 49 8b 3f                     	mov	rdi, qword ptr [r15]
    35f4: 48 8b 74 24 20               	mov	rsi, qword ptr [rsp + 32]
    35f9: 48 8d 94 24 70 02 00 00      	lea	rdx, [rsp + 624]
    3601: e8 2a eb ff ff               	call	0x2130 <vkGetBufferMemoryRequirements@plt>
    3606: 48 03 9c 24 70 02 00 00      	add	rbx, qword ptr [rsp + 624]
    360e: 49 8b 3f                     	mov	rdi, qword ptr [r15]
    3611: 48 8b 74 24 18               	mov	rsi, qword ptr [rsp + 24]
    3616: 48 8d 94 24 88 02 00 00      	lea	rdx, [rsp + 648]
    361e: e8 0d eb ff ff               	call	0x2130 <vkGetBufferMemoryRequirements@plt>
    3623: 48 03 9c 24 88 02 00 00      	add	rbx, qword ptr [rsp + 648]
    362b: 49 8d 7f 10                  	lea	rdi, [r15 + 16]
    362f: 8b b4 24 f8 01 00 00         	mov	esi, dword ptr [rsp + 504]
    3636: ba 0e 00 00 00               	mov	edx, 14
    363b: e8 40 ea ff ff               	call	0x2080 <nnFindMemoryProperties@plt>
    3640: c7 84 24 50 01 00 00 05 00 00 00     	mov	dword ptr [rsp + 336], 5
    364b: 48 c7 84 24 58 01 00 00 00 00 00 00  	mov	qword ptr [rsp + 344], 0
    3657: 48 89 9c 24 60 01 00 00      	mov	qword ptr [rsp + 352], rbx
    365f: 89 84 24 68 01 00 00         	mov	dword ptr [rsp + 360], eax
    3666: 49 8b 3f                     	mov	rdi, qword ptr [r15]
    3669: 48 8d b4 24 50 01 00 00      	lea	rsi, [rsp + 336]
    3671: 48 89 e1                     	mov	rcx, rsp
    3674: 31 d2                        	xor	edx, edx
    3676: e8 b5 eb ff ff               	call	0x2230 <vkAllocateMemory@plt>
    367b: 49 8b 3f                     	mov	rdi, qword ptr [r15]
    367e: 85 c0                        	test	eax, eax
    3680: 0f 85 22 06 00 00            	jne	0x3ca8 <nnValidCrossCorrelationGpu+0x948>
    3686: 48 8b 74 24 28               	mov	rsi, qword ptr [rsp + 40]
    368b: 48 8b 14 24                  	mov	rdx, qword ptr [rsp]
    368f: 31 c9                        	xor	ecx, ecx
    3691: e8 ea ec ff ff               	call	0x2380 <vkBindBufferMemory@plt>
    3696: 85 c0                        	test	eax, eax
    3698: 0f 85 2f 06 00 00            	jne	0x3ccd <nnValidCrossCorrelationGpu+0x96d>
    369e: 48 8b 9c 24 e8 01 00 00      	mov	rbx, qword ptr [rsp + 488]
    36a6: 49 8b 3f                     	mov	rdi, qword ptr [r15]
    36a9: 48 8b 74 24 20               	mov	rsi, qword ptr [rsp + 32]
    36ae: 48 8b 14 24                  	mov	rdx, qword ptr [rsp]
    36b2: 48 89 d9                     	mov	rcx, rbx
    36b5: e8 c6 ec ff ff               	call	0x2380 <vkBindBufferMemory@plt>
    36ba: 85 c0                        	test	eax, eax
    36bc: 0f 85 31 06 00 00            	jne	0x3cf3 <nnValidCrossCorrelationGpu+0x993>
    36c2: 48 03 9c 24 70 02 00 00      	add	rbx, qword ptr [rsp + 624]
    36ca: 49 8b 3f                     	mov	rdi, qword ptr [r15]
    36cd: 48 8b 74 24 18               	mov	rsi, qword ptr [rsp + 24]
    36d2: 48 8b 14 24                  	mov	rdx, qword ptr [rsp]
    36d6: 48 89 d9                     	mov	rcx, rbx
    36d9: e8 a2 ec ff ff               	call	0x2380 <vkBindBufferMemory@plt>
    36de: 85 c0                        	test	eax, eax
    36e0: 0f 85 34 06 00 00            	jne	0x3d1a <nnValidCrossCorrelationGpu+0x9ba>
    36e6: c7 84 24 b8 01 00 00 1e 00 00 00     	mov	dword ptr [rsp + 440], 30
    36f1: 48 c7 84 24 c0 01 00 00 00 00 00 00  	mov	qword ptr [rsp + 448], 0
    36fd: 48 bb 00 00 00 00 01 00 00 00	movabs	rbx, 4294967296
    3707: 48 89 9c 24 c8 01 00 00      	mov	qword ptr [rsp + 456], rbx
    370f: 4c 89 a4 24 d0 01 00 00      	mov	qword ptr [rsp + 464], r12
    3717: c7 84 24 d8 01 00 00 00 00 00 00     	mov	dword ptr [rsp + 472], 0
    3722: 48 c7 84 24 e0 01 00 00 00 00 00 00  	mov	qword ptr [rsp + 480], 0
    372e: 49 8b 3f                     	mov	rdi, qword ptr [r15]
    3731: 48 8d b4 24 b8 01 00 00      	lea	rsi, [rsp + 440]
    3739: 48 8d 4c 24 68               	lea	rcx, [rsp + 104]
    373e: 31 d2                        	xor	edx, edx
    3740: e8 3b eb ff ff               	call	0x2280 <vkCreatePipelineLayout@plt>
    3745: 85 c0                        	test	eax, eax
    3747: 0f 85 f4 05 00 00            	jne	0x3d41 <nnValidCrossCorrelationGpu+0x9e1>
    374d: 48 b8 07 00 00 00 03 00 00 00	movabs	rax, 12884901895
    3757: 48 89 84 24 d0 00 00 00      	mov	qword ptr [rsp + 208], rax
    375f: c7 84 24 00 02 00 00 21 00 00 00     	mov	dword ptr [rsp + 512], 33
    376a: 48 c7 84 24 08 02 00 00 00 00 00 00  	mov	qword ptr [rsp + 520], 0
    3776: 48 89 9c 24 10 02 00 00      	mov	qword ptr [rsp + 528], rbx
    377e: c7 84 24 18 02 00 00 01 00 00 00     	mov	dword ptr [rsp + 536], 1
    3789: 48 8d 84 24 d0 00 00 00      	lea	rax, [rsp + 208]
    3791: 48 89 84 24 20 02 00 00      	mov	qword ptr [rsp + 544], rax
    3799: 49 8b 3f                     	mov	rdi, qword ptr [r15]
    379c: 48 8d b4 24 00 02 00 00      	lea	rsi, [rsp + 512]
    37a4: 48 8d 8c 24 c8 00 00 00      	lea	rcx, [rsp + 200]
    37ac: 31 d2                        	xor	edx, edx
    37ae: e8 8d eb ff ff               	call	0x2340 <vkCreateDescriptorPool@plt>
    37b3: c7 84 24 90 01 00 00 22 00 00 00     	mov	dword ptr [rsp + 400], 34
    37be: 48 c7 84 24 98 01 00 00 00 00 00 00  	mov	qword ptr [rsp + 408], 0
    37ca: 48 8b 84 24 c8 00 00 00      	mov	rax, qword ptr [rsp + 200]
    37d2: 48 89 84 24 a0 01 00 00      	mov	qword ptr [rsp + 416], rax
    37da: c7 84 24 a8 01 00 00 01 00 00 00     	mov	dword ptr [rsp + 424], 1
    37e5: 4c 89 a4 24 b0 01 00 00      	mov	qword ptr [rsp + 432], r12
    37ed: 49 8b 3f                     	mov	rdi, qword ptr [r15]
    37f0: 48 8d b4 24 90 01 00 00      	lea	rsi, [rsp + 400]
    37f8: 48 8d 54 24 38               	lea	rdx, [rsp + 56]
    37fd: e8 5e ea ff ff               	call	0x2260 <vkAllocateDescriptorSets@plt>
    3802: 85 c0                        	test	eax, eax
    3804: 0f 85 61 05 00 00            	jne	0x3d6b <nnValidCrossCorrelationGpu+0xa0b>
    380a: bf c0 00 00 00               	mov	edi, 192
    380f: e8 2c ea ff ff               	call	0x2240 <malloc@plt>
    3814: 48 8b 4c 24 38               	mov	rcx, qword ptr [rsp + 56]
    3819: 48 8b 54 24 28               	mov	rdx, qword ptr [rsp + 40]
    381e: 48 89 94 24 58 02 00 00      	mov	qword ptr [rsp + 600], rdx
    3826: c5 f8 28 05 d2 17 00 00      	vmovaps	xmm0, xmmword ptr [rip + 6098] # 0x5000 <vkUpdateDescriptorSets+0x5000>
    382e: c5 f8 11 84 24 60 02 00 00   	vmovups	xmmword ptr [rsp + 608], xmm0
    3837: c7 00 23 00 00 00            	mov	dword ptr [rax], 35
    383d: 48 c7 40 08 00 00 00 00      	mov	qword ptr [rax + 8], 0
    3845: 48 89 48 10                  	mov	qword ptr [rax + 16], rcx
    3849: c5 f8 28 0d bf 17 00 00      	vmovaps	xmm1, xmmword ptr [rip + 6079] # 0x5010 <vkUpdateDescriptorSets+0x5010>
    3851: c5 f8 11 48 18               	vmovups	xmmword ptr [rax + 24], xmm1
    3856: 48 c7 40 28 00 00 00 00      	mov	qword ptr [rax + 40], 0
    385e: 48 8d 94 24 58 02 00 00      	lea	rdx, [rsp + 600]
    3866: 48 89 50 30                  	mov	qword ptr [rax + 48], rdx
    386a: 48 c7 40 38 00 00 00 00      	mov	qword ptr [rax + 56], 0
    3872: 48 8b 54 24 20               	mov	rdx, qword ptr [rsp + 32]
    3877: 48 89 94 24 40 02 00 00      	mov	qword ptr [rsp + 576], rdx
    387f: c5 f8 11 84 24 48 02 00 00   	vmovups	xmmword ptr [rsp + 584], xmm0
    3888: c7 40 40 23 00 00 00         	mov	dword ptr [rax + 64], 35
    388f: 48 c7 40 48 00 00 00 00      	mov	qword ptr [rax + 72], 0
    3897: 48 89 48 50                  	mov	qword ptr [rax + 80], rcx
    389b: c5 f8 28 0d 7d 17 00 00      	vmovaps	xmm1, xmmword ptr [rip + 6013] # 0x5020 <vkUpdateDescriptorSets+0x5020>
    38a3: c5 f8 11 48 58               	vmovups	xmmword ptr [rax + 88], xmm1
    38a8: 48 c7 40 68 00 00 00 00      	mov	qword ptr [rax + 104], 0
    38b0: 48 8d 94 24 40 02 00 00      	lea	rdx, [rsp + 576]
    38b8: 48 89 50 70                  	mov	qword ptr [rax + 112], rdx
    38bc: 48 c7 40 78 00 00 00 00      	mov	qword ptr [rax + 120], 0
    38c4: 48 8b 54 24 18               	mov	rdx, qword ptr [rsp + 24]
    38c9: 48 89 94 24 28 02 00 00      	mov	qword ptr [rsp + 552], rdx
    38d1: c5 f8 11 84 24 30 02 00 00   	vmovups	xmmword ptr [rsp + 560], xmm0
    38da: c7 80 80 00 00 00 23 00 00 00	mov	dword ptr [rax + 128], 35
    38e4: 48 c7 80 88 00 00 00 00 00 00 00     	mov	qword ptr [rax + 136], 0
    38ef: 48 89 88 90 00 00 00         	mov	qword ptr [rax + 144], rcx
    38f6: c5 f8 28 05 32 17 00 00      	vmovaps	xmm0, xmmword ptr [rip + 5938] # 0x5030 <vkUpdateDescriptorSets+0x5030>
    38fe: c5 f8 11 80 98 00 00 00      	vmovups	xmmword ptr [rax + 152], xmm0
    3906: 48 c7 80 a8 00 00 00 00 00 00 00     	mov	qword ptr [rax + 168], 0
    3911: 48 8d 8c 24 28 02 00 00      	lea	rcx, [rsp + 552]
    3919: 48 89 88 b0 00 00 00         	mov	qword ptr [rax + 176], rcx
    3920: 48 c7 80 b8 00 00 00 00 00 00 00     	mov	qword ptr [rax + 184], 0
    392b: 49 8b 3f                     	mov	rdi, qword ptr [r15]
    392e: be 03 00 00 00               	mov	esi, 3
    3933: 48 89 c2                     	mov	rdx, rax
    3936: 31 c9                        	xor	ecx, ecx
    3938: 45 31 c0                     	xor	r8d, r8d
    393b: e8 a0 e9 ff ff               	call	0x22e0 <vkUpdateDescriptorSets@plt>
    3940: c7 84 24 b0 00 00 00 27 00 00 00     	mov	dword ptr [rsp + 176], 39
    394b: 48 c7 84 24 b8 00 00 00 00 00 00 00  	mov	qword ptr [rsp + 184], 0
    3957: c7 84 24 c0 00 00 00 01 00 00 00     	mov	dword ptr [rsp + 192], 1
    3962: 8b 44 24 34                  	mov	eax, dword ptr [rsp + 52]
    3966: 89 84 24 c4 00 00 00         	mov	dword ptr [rsp + 196], eax
    396d: 49 8b 3f                     	mov	rdi, qword ptr [r15]
    3970: 48 8d b4 24 b0 00 00 00      	lea	rsi, [rsp + 176]
    3978: 48 8d 4c 24 60               	lea	rcx, [rsp + 96]
    397d: 31 d2                        	xor	edx, edx
    397f: e8 6c e7 ff ff               	call	0x20f0 <vkCreateCommandPool@plt>
    3984: 85 c0                        	test	eax, eax
    3986: 0f 85 07 04 00 00            	jne	0x3d93 <nnValidCrossCorrelationGpu+0xa33>
    398c: c7 84 24 30 01 00 00 28 00 00 00     	mov	dword ptr [rsp + 304], 40
    3997: 48 c7 84 24 38 01 00 00 00 00 00 00  	mov	qword ptr [rsp + 312], 0
    39a3: 48 8b 44 24 60               	mov	rax, qword ptr [rsp + 96]
    39a8: 48 89 84 24 40 01 00 00      	mov	qword ptr [rsp + 320], rax
    39b0: 48 89 9c 24 48 01 00 00      	mov	qword ptr [rsp + 328], rbx
    39b8: 49 8b 3f                     	mov	rdi, qword ptr [r15]
    39bb: 48 8d b4 24 30 01 00 00      	lea	rsi, [rsp + 304]
    39c3: 4c 8d 64 24 08               	lea	r12, [rsp + 8]
    39c8: 4c 89 e2                     	mov	rdx, r12
    39cb: e8 f0 e8 ff ff               	call	0x22c0 <vkAllocateCommandBuffers@plt>
    39d0: 85 c0                        	test	eax, eax
    39d2: 0f 85 e5 03 00 00            	jne	0x3dbd <nnValidCrossCorrelationGpu+0xa5d>
    39d8: c5 fc 10 05 98 16 00 00      	vmovups	ymm0, ymmword ptr [rip + 5784] # 0x5078 <vkUpdateDescriptorSets+0x5078>
    39e0: c5 fc 11 84 24 a0 02 00 00   	vmovups	ymmword ptr [rsp + 672], ymm0
    39e9: 48 8b 7c 24 08               	mov	rdi, qword ptr [rsp + 8]
    39ee: 48 8d b4 24 a0 02 00 00      	lea	rsi, [rsp + 672]
    39f6: c5 f8 77                     	vzeroupper
    39f9: e8 62 e9 ff ff               	call	0x2360 <vkBeginCommandBuffer@plt>
    39fe: 48 8b 7c 24 08               	mov	rdi, qword ptr [rsp + 8]
    3a03: 49 8b 57 28                  	mov	rdx, qword ptr [r15 + 40]
    3a07: be 01 00 00 00               	mov	esi, 1
    3a0c: e8 8f e6 ff ff               	call	0x20a0 <vkCmdBindPipeline@plt>
    3a11: 48 8b 7c 24 08               	mov	rdi, qword ptr [rsp + 8]
    3a16: 48 8b 54 24 68               	mov	rdx, qword ptr [rsp + 104]
    3a1b: 4c 8d 4c 24 38               	lea	r9, [rsp + 56]
    3a20: be 01 00 00 00               	mov	esi, 1
    3a25: 31 c9                        	xor	ecx, ecx
    3a27: 41 b8 01 00 00 00            	mov	r8d, 1
    3a2d: 6a 00                        	push	0
    3a2f: 6a 00                        	push	0
    3a31: e8 2a e6 ff ff               	call	0x2060 <vkCmdBindDescriptorSets@plt>
    3a36: 48 83 c4 10                  	add	rsp, 16
    3a3a: 48 8b 7c 24 08               	mov	rdi, qword ptr [rsp + 8]
    3a3f: 41 8b 56 08                  	mov	edx, dword ptr [r14 + 8]
    3a43: 41 8b 76 0c                  	mov	esi, dword ptr [r14 + 12]
    3a47: b9 01 00 00 00               	mov	ecx, 1
    3a4c: e8 7f e8 ff ff               	call	0x22d0 <vkCmdDispatch@plt>
    3a51: 48 8b 7c 24 08               	mov	rdi, qword ptr [rsp + 8]
    3a56: e8 35 e7 ff ff               	call	0x2190 <vkEndCommandBuffer@plt>
    3a5b: 85 c0                        	test	eax, eax
    3a5d: 0f 85 7f 03 00 00            	jne	0x3de2 <nnValidCrossCorrelationGpu+0xa82>
    3a63: 48 c7 44 24 10 00 00 00 00   	mov	qword ptr [rsp + 16], 0
    3a6c: 49 8b 3f                     	mov	rdi, qword ptr [r15]
    3a6f: 48 8b 34 24                  	mov	rsi, qword ptr [rsp]
    3a73: 4c 8d 4c 24 10               	lea	r9, [rsp + 16]
    3a78: 31 d2                        	xor	edx, edx
    3a7a: 48 c7 c1 ff ff ff ff         	mov	rcx, -1
    3a81: 45 31 c0                     	xor	r8d, r8d
    3a84: e8 c7 e7 ff ff               	call	0x2250 <vkMapMemory@plt>
    3a89: 85 c0                        	test	eax, eax
    3a8b: 0f 85 6b 03 00 00            	jne	0x3dfc <nnValidCrossCorrelationGpu+0xa9c>
    3a91: 48 8b 7c 24 10               	mov	rdi, qword ptr [rsp + 16]
    3a96: 48 63 54 24 4c               	movsxd	rdx, dword ptr [rsp + 76]
    3a9b: 4c 8d 34 97                  	lea	r14, [rdi + 4*rdx]
    3a9f: 48 63 5c 24 30               	movsxd	rbx, dword ptr [rsp + 48]
    3aa4: 48 8b 44 24 58               	mov	rax, qword ptr [rsp + 88]
    3aa9: 48 8b 30                     	mov	rsi, qword ptr [rax]
    3aac: 48 c1 e2 02                  	shl	rdx, 2
    3ab0: e8 5b e7 ff ff               	call	0x2210 <memcpy@plt>
    3ab5: 49 8b 75 00                  	mov	rsi, qword ptr [r13]
    3ab9: 48 8d 14 9d 00 00 00 00      	lea	rdx, [4*rbx]
    3ac1: 4c 89 f7                     	mov	rdi, r14
    3ac4: e8 47 e7 ff ff               	call	0x2210 <memcpy@plt>
    3ac9: 49 8b 3f                     	mov	rdi, qword ptr [r15]
    3acc: 48 8b 34 24                  	mov	rsi, qword ptr [rsp]
    3ad0: e8 6b e6 ff ff               	call	0x2140 <vkUnmapMemory@plt>
    3ad5: c5 f8 57 c0                  	vxorps	xmm0, xmm0, xmm0
    3ad9: c5 fc 29 84 24 e0 00 00 00   	vmovaps	ymmword ptr [rsp + 224], ymm0
    3ae2: c5 fc 29 84 24 00 01 00 00   	vmovaps	ymmword ptr [rsp + 256], ymm0
    3aeb: 48 c7 84 24 20 01 00 00 00 00 00 00  	mov	qword ptr [rsp + 288], 0
    3af7: c7 84 24 e0 00 00 00 04 00 00 00     	mov	dword ptr [rsp + 224], 4
    3b02: c7 84 24 08 01 00 00 01 00 00 00     	mov	dword ptr [rsp + 264], 1
    3b0d: 4c 89 a4 24 10 01 00 00      	mov	qword ptr [rsp + 272], r12
    3b15: 49 8b 7f 20                  	mov	rdi, qword ptr [r15 + 32]
    3b19: 48 8d 94 24 e0 00 00 00      	lea	rdx, [rsp + 224]
    3b21: be 01 00 00 00               	mov	esi, 1
    3b26: 31 c9                        	xor	ecx, ecx
    3b28: c5 f8 77                     	vzeroupper
    3b2b: e8 50 e6 ff ff               	call	0x2180 <vkQueueSubmit@plt>
    3b30: 49 8b 7f 20                  	mov	rdi, qword ptr [r15 + 32]
    3b34: e8 37 e5 ff ff               	call	0x2070 <vkQueueWaitIdle@plt>
    3b39: 48 c7 44 24 10 00 00 00 00   	mov	qword ptr [rsp + 16], 0
    3b42: 49 8b 3f                     	mov	rdi, qword ptr [r15]
    3b45: 48 8b 34 24                  	mov	rsi, qword ptr [rsp]
    3b49: 4c 8d 4c 24 10               	lea	r9, [rsp + 16]
    3b4e: 31 d2                        	xor	edx, edx
    3b50: 48 c7 c1 ff ff ff ff         	mov	rcx, -1
    3b57: 45 31 c0                     	xor	r8d, r8d
    3b5a: e8 f1 e6 ff ff               	call	0x2250 <vkMapMemory@plt>
    3b5f: 85 c0                        	test	eax, eax
    3b61: 0f 85 c2 02 00 00            	jne	0x3e29 <nnValidCrossCorrelationGpu+0xac9>
    3b67: 49 8d 34 9e                  	lea	rsi, [r14 + 4*rbx]
    3b6b: 8b 4c 24 48                  	mov	ecx, dword ptr [rsp + 72]
    3b6f: 0f af 4c 24 44               	imul	ecx, dword ptr [rsp + 68]
    3b74: 48 8b 44 24 50               	mov	rax, qword ptr [rsp + 80]
    3b79: 48 8b 38                     	mov	rdi, qword ptr [rax]
    3b7c: 48 63 d1                     	movsxd	rdx, ecx
    3b7f: 48 c1 e2 02                  	shl	rdx, 2
    3b83: e8 88 e6 ff ff               	call	0x2210 <memcpy@plt>
    3b88: 49 8b 3f                     	mov	rdi, qword ptr [r15]
    3b8b: 48 8b 34 24                  	mov	rsi, qword ptr [rsp]
    3b8f: e8 ac e5 ff ff               	call	0x2140 <vkUnmapMemory@plt>
    3b94: 48 8d 65 d8                  	lea	rsp, [rbp - 40]
    3b98: 5b                           	pop	rbx
    3b99: 41 5c                        	pop	r12
    3b9b: 41 5d                        	pop	r13
    3b9d: 41 5e                        	pop	r14
    3b9f: 41 5f                        	pop	r15
    3ba1: 5d                           	pop	rbp
    3ba2: c3                           	ret
    3ba3: 4c 8d 35 ac 14 00 00         	lea	r14, [rip + 5292]       # 0x5056 <vkUpdateDescriptorSets+0x5056>
    3baa: eb 1f                        	jmp	0x3bcb <nnValidCrossCorrelationGpu+0x86b>
    3bac: 0f 1f 40 00                  	nop	dword ptr [rax]
    3bb0: 48 8b 33                     	mov	rsi, qword ptr [rbx]
    3bb3: bf 0a 00 00 00               	mov	edi, 10
    3bb8: e8 e3 e5 ff ff               	call	0x21a0 <fputc@plt>
    3bbd: 41 83 c4 01                  	add	r12d, 1
    3bc1: 45 3b 65 08                  	cmp	r12d, dword ptr [r13 + 8]
    3bc5: 0f 83 28 f8 ff ff            	jae	0x33f3 <nnValidCrossCorrelationGpu+0x93>
    3bcb: 41 8b 45 0c                  	mov	eax, dword ptr [r13 + 12]
    3bcf: 85 c0                        	test	eax, eax
    3bd1: 74 dd                        	je	0x3bb0 <nnValidCrossCorrelationGpu+0x850>
    3bd3: 45 31 ff                     	xor	r15d, r15d
    3bd6: 48 8b 3b                     	mov	rdi, qword ptr [rbx]
    3bd9: 49 8b 4d 00                  	mov	rcx, qword ptr [r13]
    3bdd: 41 0f af c4                  	imul	eax, r12d
    3be1: 44 01 f8                     	add	eax, r15d
    3be4: c5 fa 10 04 81               	vmovss	xmm0, dword ptr [rcx + 4*rax] # xmm0 = mem[0],zero,zero,zero
    3be9: c5 fa 5a c0                  	vcvtss2sd	xmm0, xmm0, xmm0
    3bed: 4c 89 f6                     	mov	rsi, r14
    3bf0: b0 01                        	mov	al, 1
    3bf2: e8 e9 e5 ff ff               	call	0x21e0 <fprintf@plt>
    3bf7: 41 83 c7 01                  	add	r15d, 1
    3bfb: 41 8b 45 0c                  	mov	eax, dword ptr [r13 + 12]
    3bff: 41 39 c7                     	cmp	r15d, eax
    3c02: 72 d2                        	jb	0x3bd6 <nnValidCrossCorrelationGpu+0x876>
    3c04: eb aa                        	jmp	0x3bb0 <nnValidCrossCorrelationGpu+0x850>
    3c06: 49 8b 3f                     	mov	rdi, qword ptr [r15]
    3c09: 48 8d b4 24 70 01 00 00      	lea	rsi, [rsp + 368]
    3c11: 48 8d 8c 24 d8 00 00 00      	lea	rcx, [rsp + 216]
    3c19: 31 d2                        	xor	edx, edx
    3c1b: e8 20 e4 ff ff               	call	0x2040 <vkCreateDescriptorSetLayout@plt>
    3c20: 48 8d 3d 33 14 00 00         	lea	rdi, [rip + 5171]       # 0x505a <vkUpdateDescriptorSets+0x505a>
    3c27: 89 c6                        	mov	esi, eax
    3c29: ba 32 00 00 00               	mov	edx, 50
    3c2e: e9 21 02 00 00               	jmp	0x3e54 <nnValidCrossCorrelationGpu+0xaf4>
    3c33: 49 8b 3f                     	mov	rdi, qword ptr [r15]
    3c36: 48 8d 74 24 70               	lea	rsi, [rsp + 112]
    3c3b: 48 8d 4c 24 28               	lea	rcx, [rsp + 40]
    3c40: 31 d2                        	xor	edx, edx
    3c42: e8 29 e6 ff ff               	call	0x2270 <vkCreateBuffer@plt>
    3c47: 48 8d 3d 0c 14 00 00         	lea	rdi, [rip + 5132]       # 0x505a <vkUpdateDescriptorSets+0x505a>
    3c4e: 89 c6                        	mov	esi, eax
    3c50: ba 3e 00 00 00               	mov	edx, 62
    3c55: e9 fa 01 00 00               	jmp	0x3e54 <nnValidCrossCorrelationGpu+0xaf4>
    3c5a: 49 8b 3f                     	mov	rdi, qword ptr [r15]
    3c5d: 48 8d 74 24 70               	lea	rsi, [rsp + 112]
    3c62: 48 8d 4c 24 20               	lea	rcx, [rsp + 32]
    3c67: 31 d2                        	xor	edx, edx
    3c69: e8 02 e6 ff ff               	call	0x2270 <vkCreateBuffer@plt>
    3c6e: 48 8d 3d e5 13 00 00         	lea	rdi, [rip + 5093]       # 0x505a <vkUpdateDescriptorSets+0x505a>
    3c75: 89 c6                        	mov	esi, eax
    3c77: ba 42 00 00 00               	mov	edx, 66
    3c7c: e9 d3 01 00 00               	jmp	0x3e54 <nnValidCrossCorrelationGpu+0xaf4>
    3c81: 49 8b 3f                     	mov	rdi, qword ptr [r15]
    3c84: 48 8d 74 24 70               	lea	rsi, [rsp + 112]
    3c89: 48 8d 4c 24 18               	lea	rcx, [rsp + 24]
    3c8e: 31 d2                        	xor	edx, edx
    3c90: e8 db e5 ff ff               	call	0x2270 <vkCreateBuffer@plt>
    3c95: 48 8d 3d be 13 00 00         	lea	rdi, [rip + 5054]       # 0x505a <vkUpdateDescriptorSets+0x505a>
    3c9c: 89 c6                        	mov	esi, eax
    3c9e: ba 46 00 00 00               	mov	edx, 70
    3ca3: e9 ac 01 00 00               	jmp	0x3e54 <nnValidCrossCorrelationGpu+0xaf4>
    3ca8: 48 8d b4 24 50 01 00 00      	lea	rsi, [rsp + 336]
    3cb0: 48 89 e1                     	mov	rcx, rsp
    3cb3: 31 d2                        	xor	edx, edx
    3cb5: e8 76 e5 ff ff               	call	0x2230 <vkAllocateMemory@plt>
    3cba: 48 8d 3d 99 13 00 00         	lea	rdi, [rip + 5017]       # 0x505a <vkUpdateDescriptorSets+0x505a>
    3cc1: 89 c6                        	mov	esi, eax
    3cc3: ba 62 00 00 00               	mov	edx, 98
    3cc8: e9 87 01 00 00               	jmp	0x3e54 <nnValidCrossCorrelationGpu+0xaf4>
    3ccd: 49 8b 3f                     	mov	rdi, qword ptr [r15]
    3cd0: 48 8b 74 24 28               	mov	rsi, qword ptr [rsp + 40]
    3cd5: 48 8b 14 24                  	mov	rdx, qword ptr [rsp]
    3cd9: 31 c9                        	xor	ecx, ecx
    3cdb: e8 a0 e6 ff ff               	call	0x2380 <vkBindBufferMemory@plt>
    3ce0: 48 8d 3d 73 13 00 00         	lea	rdi, [rip + 4979]       # 0x505a <vkUpdateDescriptorSets+0x505a>
    3ce7: 89 c6                        	mov	esi, eax
    3ce9: ba 65 00 00 00               	mov	edx, 101
    3cee: e9 61 01 00 00               	jmp	0x3e54 <nnValidCrossCorrelationGpu+0xaf4>
    3cf3: 49 8b 3f                     	mov	rdi, qword ptr [r15]
    3cf6: 48 8b 74 24 20               	mov	rsi, qword ptr [rsp + 32]
    3cfb: 48 8b 14 24                  	mov	rdx, qword ptr [rsp]
    3cff: 48 89 d9                     	mov	rcx, rbx
    3d02: e8 79 e6 ff ff               	call	0x2380 <vkBindBufferMemory@plt>
    3d07: 48 8d 3d 4c 13 00 00         	lea	rdi, [rip + 4940]       # 0x505a <vkUpdateDescriptorSets+0x505a>
    3d0e: 89 c6                        	mov	esi, eax
    3d10: ba 68 00 00 00               	mov	edx, 104
    3d15: e9 3a 01 00 00               	jmp	0x3e54 <nnValidCrossCorrelationGpu+0xaf4>
    3d1a: 49 8b 3f                     	mov	rdi, qword ptr [r15]
    3d1d: 48 8b 74 24 18               	mov	rsi, qword ptr [rsp + 24]
    3d22: 48 8b 14 24                  	mov	rdx, qword ptr [rsp]
    3d26: 48 89 d9                     	mov	rcx, rbx
    3d29: e8 52 e6 ff ff               	call	0x2380 <vkBindBufferMemory@plt>
    3d2e: 48 8d 3d 25 13 00 00         	lea	rdi, [rip + 4901]       # 0x505a <vkUpdateDescriptorSets+0x505a>
    3d35: 89 c6                        	mov	esi, eax
    3d37: ba 6b 00 00 00               	mov	edx, 107
    3d3c: e9 13 01 00 00               	jmp	0x3e54 <nnValidCrossCorrelationGpu+0xaf4>
    3d41: 49 8b 3f                     	mov	rdi, qword ptr [r15]
    3d44: 48 8d b4 24 b8 01 00 00      	lea	rsi, [rsp + 440]
    3d4c: 48 8d 4c 24 68               	lea	rcx, [rsp + 104]
    3d51: 31 d2                        	xor	edx, edx
    3d53: e8 28 e5 ff ff               	call	0x2280 <vkCreatePipelineLayout@plt>
    3d58: 48 8d 3d fb 12 00 00         	lea	rdi, [rip + 4859]       # 0x505a <vkUpdateDescriptorSets+0x505a>
    3d5f: 89 c6                        	mov	esi, eax
    3d61: ba 78 00 00 00               	mov	edx, 120
    3d66: e9 e9 00 00 00               	jmp	0x3e54 <nnValidCrossCorrelationGpu+0xaf4>
    3d6b: 49 8b 3f                     	mov	rdi, qword ptr [r15]
    3d6e: 48 8d b4 24 90 01 00 00      	lea	rsi, [rsp + 400]
    3d76: 48 8d 54 24 38               	lea	rdx, [rsp + 56]
    3d7b: e8 e0 e4 ff ff               	call	0x2260 <vkAllocateDescriptorSets@plt>
    3d80: 48 8d 3d d3 12 00 00         	lea	rdi, [rip + 4819]       # 0x505a <vkUpdateDescriptorSets+0x505a>
    3d87: 89 c6                        	mov	esi, eax
    3d89: ba 8f 00 00 00               	mov	edx, 143
    3d8e: e9 c1 00 00 00               	jmp	0x3e54 <nnValidCrossCorrelationGpu+0xaf4>
    3d93: 49 8b 3f                     	mov	rdi, qword ptr [r15]
    3d96: 48 8d b4 24 b0 00 00 00      	lea	rsi, [rsp + 176]
    3d9e: 48 8d 4c 24 60               	lea	rcx, [rsp + 96]
    3da3: 31 d2                        	xor	edx, edx
    3da5: e8 46 e3 ff ff               	call	0x20f0 <vkCreateCommandPool@plt>
    3daa: 48 8d 3d a9 12 00 00         	lea	rdi, [rip + 4777]       # 0x505a <vkUpdateDescriptorSets+0x505a>
    3db1: 89 c6                        	mov	esi, eax
    3db3: ba bf 00 00 00               	mov	edx, 191
    3db8: e9 97 00 00 00               	jmp	0x3e54 <nnValidCrossCorrelationGpu+0xaf4>
    3dbd: 49 8b 3f                     	mov	rdi, qword ptr [r15]
    3dc0: 48 8d b4 24 30 01 00 00      	lea	rsi, [rsp + 304]
    3dc8: 48 8d 54 24 08               	lea	rdx, [rsp + 8]
    3dcd: e8 ee e4 ff ff               	call	0x22c0 <vkAllocateCommandBuffers@plt>
    3dd2: 48 8d 3d 81 12 00 00         	lea	rdi, [rip + 4737]       # 0x505a <vkUpdateDescriptorSets+0x505a>
    3dd9: 89 c6                        	mov	esi, eax
    3ddb: ba c8 00 00 00               	mov	edx, 200
    3de0: eb 72                        	jmp	0x3e54 <nnValidCrossCorrelationGpu+0xaf4>
    3de2: 48 8b 7c 24 08               	mov	rdi, qword ptr [rsp + 8]
    3de7: e8 a4 e3 ff ff               	call	0x2190 <vkEndCommandBuffer@plt>
    3dec: 48 8d 3d 67 12 00 00         	lea	rdi, [rip + 4711]       # 0x505a <vkUpdateDescriptorSets+0x505a>
    3df3: 89 c6                        	mov	esi, eax
    3df5: ba d7 00 00 00               	mov	edx, 215
    3dfa: eb 58                        	jmp	0x3e54 <nnValidCrossCorrelationGpu+0xaf4>
    3dfc: 49 8b 3f                     	mov	rdi, qword ptr [r15]
    3dff: 48 8b 34 24                  	mov	rsi, qword ptr [rsp]
    3e03: 4c 8d 4c 24 10               	lea	r9, [rsp + 16]
    3e08: 31 d2                        	xor	edx, edx
    3e0a: 48 c7 c1 ff ff ff ff         	mov	rcx, -1
    3e11: 45 31 c0                     	xor	r8d, r8d
    3e14: e8 37 e4 ff ff               	call	0x2250 <vkMapMemory@plt>
    3e19: 48 8d 3d 3a 12 00 00         	lea	rdi, [rip + 4666]       # 0x505a <vkUpdateDescriptorSets+0x505a>
    3e20: 89 c6                        	mov	esi, eax
    3e22: ba da 00 00 00               	mov	edx, 218
    3e27: eb 2b                        	jmp	0x3e54 <nnValidCrossCorrelationGpu+0xaf4>
    3e29: 49 8b 3f                     	mov	rdi, qword ptr [r15]
    3e2c: 48 8b 34 24                  	mov	rsi, qword ptr [rsp]
    3e30: 4c 8d 4c 24 10               	lea	r9, [rsp + 16]
    3e35: 31 d2                        	xor	edx, edx
    3e37: 48 c7 c1 ff ff ff ff         	mov	rcx, -1
    3e3e: 45 31 c0                     	xor	r8d, r8d
    3e41: e8 0a e4 ff ff               	call	0x2250 <vkMapMemory@plt>
    3e46: 48 8d 3d 0d 12 00 00         	lea	rdi, [rip + 4621]       # 0x505a <vkUpdateDescriptorSets+0x505a>
    3e4d: 89 c6                        	mov	esi, eax
    3e4f: ba ef 00 00 00               	mov	edx, 239
    3e54: 31 c0                        	xor	eax, eax
    3e56: e8 a5 e2 ff ff               	call	0x2100 <printf@plt>
    3e5b: 31 ff                        	xor	edi, edi
    3e5d: e8 ce e4 ff ff               	call	0x2330 <exit@plt>
    3e62: 66 2e 0f 1f 84 00 00 00 00 00	nop	word ptr cs:[rax + rax]
    3e6c: 0f 1f 40 00                  	nop	dword ptr [rax]

0000000000003e70 <nnReadBinaryFile>:
    3e70: 41 57                        	push	r15
    3e72: 41 56                        	push	r14
    3e74: 41 54                        	push	r12
    3e76: 53                           	push	rbx
    3e77: 50                           	push	rax
    3e78: 49 89 f6                     	mov	r14, rsi
    3e7b: 49 89 fc                     	mov	r12, rdi
    3e7e: 48 8d 35 13 12 00 00         	lea	rsi, [rip + 4627]       # 0x5098 <vkUpdateDescriptorSets+0x5098>
    3e85: e8 66 e4 ff ff               	call	0x22f0 <fopen@plt>
    3e8a: 48 85 c0                     	test	rax, rax
    3e8d: 74 5d                        	je	0x3eec <nnReadBinaryFile+0x7c>
    3e8f: 48 89 c3                     	mov	rbx, rax
    3e92: 48 89 c7                     	mov	rdi, rax
    3e95: 31 f6                        	xor	esi, esi
    3e97: ba 02 00 00 00               	mov	edx, 2
    3e9c: e8 ef e3 ff ff               	call	0x2290 <fseek@plt>
    3ea1: 48 89 df                     	mov	rdi, rbx
    3ea4: e8 47 e3 ff ff               	call	0x21f0 <ftell@plt>
    3ea9: 49 89 06                     	mov	qword ptr [r14], rax
    3eac: 48 89 df                     	mov	rdi, rbx
    3eaf: e8 5c e2 ff ff               	call	0x2110 <rewind@plt>
    3eb4: 4d 8b 36                     	mov	r14, qword ptr [r14]
    3eb7: 4c 89 f7                     	mov	rdi, r14
    3eba: e8 81 e3 ff ff               	call	0x2240 <malloc@plt>
    3ebf: 49 89 c7                     	mov	r15, rax
    3ec2: ba 01 00 00 00               	mov	edx, 1
    3ec7: 48 89 c7                     	mov	rdi, rax
    3eca: 4c 89 f6                     	mov	rsi, r14
    3ecd: 48 89 d9                     	mov	rcx, rbx
    3ed0: e8 bb e1 ff ff               	call	0x2090 <fread@plt>
    3ed5: 48 89 df                     	mov	rdi, rbx
    3ed8: e8 f3 e1 ff ff               	call	0x20d0 <fclose@plt>
    3edd: 4c 89 f8                     	mov	rax, r15
    3ee0: 48 83 c4 08                  	add	rsp, 8
    3ee4: 5b                           	pop	rbx
    3ee5: 41 5c                        	pop	r12
    3ee7: 41 5e                        	pop	r14
    3ee9: 41 5f                        	pop	r15
    3eeb: c3                           	ret
    3eec: 48 8b 05 05 31 00 00         	mov	rax, qword ptr [rip + 12549] # 0x6ff8 <vkUpdateDescriptorSets+0x6ff8>
    3ef3: 48 8b 38                     	mov	rdi, qword ptr [rax]
    3ef6: 48 8d 35 9e 11 00 00         	lea	rsi, [rip + 4510]       # 0x509b <vkUpdateDescriptorSets+0x509b>
    3efd: 45 31 ff                     	xor	r15d, r15d
    3f00: 4c 89 e2                     	mov	rdx, r12
    3f03: 31 c0                        	xor	eax, eax
    3f05: e8 d6 e2 ff ff               	call	0x21e0 <fprintf@plt>
    3f0a: 49 c7 06 00 00 00 00         	mov	qword ptr [r14], 0
    3f11: eb ca                        	jmp	0x3edd <nnReadBinaryFile+0x6d>
    3f13: 66 2e 0f 1f 84 00 00 00 00 00	nop	word ptr cs:[rax + rax]
    3f1d: 0f 1f 00                     	nop	dword ptr [rax]

0000000000003f20 <nnWriteBinaryFile>:
    3f20: 41 57                        	push	r15
    3f22: 41 56                        	push	r14
    3f24: 41 54                        	push	r12
    3f26: 53                           	push	rbx
    3f27: 50                           	push	rax
    3f28: 49 89 d6                     	mov	r14, rdx
    3f2b: 49 89 f7                     	mov	r15, rsi
    3f2e: 49 89 fc                     	mov	r12, rdi
    3f31: 48 8d 35 86 11 00 00         	lea	rsi, [rip + 4486]       # 0x50be <vkUpdateDescriptorSets+0x50be>
    3f38: e8 b3 e3 ff ff               	call	0x22f0 <fopen@plt>
    3f3d: 48 85 c0                     	test	rax, rax
    3f40: 74 2c                        	je	0x3f6e <nnWriteBinaryFile+0x4e>
    3f42: 48 89 c3                     	mov	rbx, rax
    3f45: ba 01 00 00 00               	mov	edx, 1
    3f4a: 4c 89 ff                     	mov	rdi, r15
    3f4d: 4c 89 f6                     	mov	rsi, r14
    3f50: 48 89 c1                     	mov	rcx, rax
    3f53: e8 f8 e3 ff ff               	call	0x2350 <fwrite@plt>
    3f58: 48 89 df                     	mov	rdi, rbx
    3f5b: e8 70 e1 ff ff               	call	0x20d0 <fclose@plt>
    3f60: 31 c0                        	xor	eax, eax
    3f62: 48 83 c4 08                  	add	rsp, 8
    3f66: 5b                           	pop	rbx
    3f67: 41 5c                        	pop	r12
    3f69: 41 5e                        	pop	r14
    3f6b: 41 5f                        	pop	r15
    3f6d: c3                           	ret
    3f6e: 48 8b 05 83 30 00 00         	mov	rax, qword ptr [rip + 12419] # 0x6ff8 <vkUpdateDescriptorSets+0x6ff8>
    3f75: 48 8b 38                     	mov	rdi, qword ptr [rax]
    3f78: 48 8d 35 1c 11 00 00         	lea	rsi, [rip + 4380]       # 0x509b <vkUpdateDescriptorSets+0x509b>
    3f7f: 4c 89 e2                     	mov	rdx, r12
    3f82: 31 c0                        	xor	eax, eax
    3f84: e8 57 e2 ff ff               	call	0x21e0 <fprintf@plt>
    3f89: b8 01 00 00 00               	mov	eax, 1
    3f8e: eb d2                        	jmp	0x3f62 <nnWriteBinaryFile+0x42>

0000000000003f90 <nnMemoryCopy>:
    3f90: e9 7b e2 ff ff               	jmp	0x2210 <memcpy@plt>
    3f95: 66 2e 0f 1f 84 00 00 00 00 00	nop	word ptr cs:[rax + rax]
    3f9f: 90                           	nop

0000000000003fa0 <nnCreateDefaultVkInstance>:
    3fa0: 55                           	push	rbp
    3fa1: 48 89 e5                     	mov	rbp, rsp
    3fa4: 41 57                        	push	r15
    3fa6: 41 56                        	push	r14
    3fa8: 41 55                        	push	r13
    3faa: 41 54                        	push	r12
    3fac: 53                           	push	rbx
    3fad: 48 83 e4 e0                  	and	rsp, -32
    3fb1: 48 81 ec 00 01 00 00         	sub	rsp, 256
    3fb8: 49 89 fe                     	mov	r14, rdi
    3fbb: c5 f8 57 c0                  	vxorps	xmm0, xmm0, xmm0
    3fbf: c5 fc 11 44 24 70            	vmovups	ymmword ptr [rsp + 112], ymm0
    3fc5: c5 fc 29 44 24 60            	vmovaps	ymmword ptr [rsp + 96], ymm0
    3fcb: 48 8d 05 f0 10 00 00         	lea	rax, [rip + 4336]       # 0x50c2 <vkUpdateDescriptorSets+0x50c2>
    3fd2: 48 89 44 24 70               	mov	qword ptr [rsp + 112], rax
    3fd7: c7 44 24 78 01 00 00 00      	mov	dword ptr [rsp + 120], 1
    3fdf: 48 8d 05 e8 10 00 00         	lea	rax, [rip + 4328]       # 0x50ce <vkUpdateDescriptorSets+0x50ce>
    3fe6: 48 89 84 24 80 00 00 00      	mov	qword ptr [rsp + 128], rax
    3fee: c7 84 24 8c 00 00 00 00 30 40 00     	mov	dword ptr [rsp + 140], 4206592
    3ff9: c5 fc 29 44 24 20            	vmovaps	ymmword ptr [rsp + 32], ymm0
    3fff: c5 fc 11 44 24 30            	vmovups	ymmword ptr [rsp + 48], ymm0
    4005: c7 44 24 20 d8 8e 9e 3b      	mov	dword ptr [rsp + 32], 1000247000
    400d: c7 44 24 30 01 00 00 00      	mov	dword ptr [rsp + 48], 1
    4015: c7 44 24 1c 03 00 00 00      	mov	dword ptr [rsp + 28], 3
    401d: 48 8d 44 24 1c               	lea	rax, [rsp + 28]
    4022: 48 89 44 24 38               	mov	qword ptr [rsp + 56], rax
    4027: c7 84 24 a8 00 00 00 01 00 00 00     	mov	dword ptr [rsp + 168], 1
    4032: c7 84 24 b8 00 00 00 00 00 00 00     	mov	dword ptr [rsp + 184], 0
    403d: 48 8d 44 24 60               	lea	rax, [rsp + 96]
    4042: 48 89 84 24 c0 00 00 00      	mov	qword ptr [rsp + 192], rax
    404a: c7 84 24 c8 00 00 00 01 00 00 00     	mov	dword ptr [rsp + 200], 1
    4055: 48 8d 05 84 31 00 00         	lea	rax, [rip + 12676]      # 0x71e0 <validationLayers>
    405c: 48 89 84 24 d0 00 00 00      	mov	qword ptr [rsp + 208], rax
    4064: c7 84 24 d8 00 00 00 02 00 00 00     	mov	dword ptr [rsp + 216], 2
    406f: 48 8d 05 7a 31 00 00         	lea	rax, [rip + 12666]      # 0x71f0 <enabledInstanceExtensions>
    4076: 48 89 84 24 e0 00 00 00      	mov	qword ptr [rsp + 224], rax
    407e: 48 c7 44 24 28 00 00 00 00   	mov	qword ptr [rsp + 40], 0
    4087: 48 8d 44 24 20               	lea	rax, [rsp + 32]
    408c: 48 89 84 24 b0 00 00 00      	mov	qword ptr [rsp + 176], rax
    4094: 48 8d 7c 24 18               	lea	rdi, [rsp + 24]
    4099: 31 f6                        	xor	esi, esi
    409b: c5 f8 77                     	vzeroupper
    409e: e8 cd e2 ff ff               	call	0x2370 <vkEnumerateInstanceLayerProperties@plt>
    40a3: 85 c0                        	test	eax, eax
    40a5: 0f 85 b9 00 00 00            	jne	0x4164 <nnCreateDefaultVkInstance+0x1c4>
    40ab: 8b 44 24 18                  	mov	eax, dword ptr [rsp + 24]
    40af: 48 89 c1                     	mov	rcx, rax
    40b2: 48 c1 e1 09                  	shl	rcx, 9
    40b6: 48 8d 3c c1                  	lea	rdi, [rcx + 8*rax]
    40ba: e8 81 e1 ff ff               	call	0x2240 <malloc@plt>
    40bf: 49 89 c5                     	mov	r13, rax
    40c2: 48 8d 7c 24 18               	lea	rdi, [rsp + 24]
    40c7: 48 89 c6                     	mov	rsi, rax
    40ca: e8 a1 e2 ff ff               	call	0x2370 <vkEnumerateInstanceLayerProperties@plt>
    40cf: 85 c0                        	test	eax, eax
    40d1: 0f 85 9d 00 00 00            	jne	0x4174 <nnCreateDefaultVkInstance+0x1d4>
    40d7: 44 8b 64 24 18               	mov	r12d, dword ptr [rsp + 24]
    40dc: 4d 85 e4                     	test	r12, r12
    40df: 74 6f                        	je	0x4150 <nnCreateDefaultVkInstance+0x1b0>
    40e1: 4c 8b 3d f8 30 00 00         	mov	r15, qword ptr [rip + 12536] # 0x71e0 <validationLayers>
    40e8: 4c 89 ff                     	mov	rdi, r15
    40eb: 4c 89 ee                     	mov	rsi, r13
    40ee: e8 cd e0 ff ff               	call	0x21c0 <strcmp@plt>
    40f3: 85 c0                        	test	eax, eax
    40f5: 74 45                        	je	0x413c <nnCreateDefaultVkInstance+0x19c>
    40f7: 49 81 c5 08 02 00 00         	add	r13, 520
    40fe: b9 01 00 00 00               	mov	ecx, 1
    4103: 66 2e 0f 1f 84 00 00 00 00 00	nop	word ptr cs:[rax + rax]
    410d: 0f 1f 00                     	nop	dword ptr [rax]
    4110: 48 89 cb                     	mov	rbx, rcx
    4113: 49 39 cc                     	cmp	r12, rcx
    4116: 74 1a                        	je	0x4132 <nnCreateDefaultVkInstance+0x192>
    4118: 4c 89 ff                     	mov	rdi, r15
    411b: 4c 89 ee                     	mov	rsi, r13
    411e: e8 9d e0 ff ff               	call	0x21c0 <strcmp@plt>
    4123: 48 8d 4b 01                  	lea	rcx, [rbx + 1]
    4127: 49 81 c5 08 02 00 00         	add	r13, 520
    412e: 85 c0                        	test	eax, eax
    4130: 75 de                        	jne	0x4110 <nnCreateDefaultVkInstance+0x170>
    4132: b8 f3 ff ff ff               	mov	eax, 4294967283
    4137: 4c 39 e3                     	cmp	rbx, r12
    413a: 73 19                        	jae	0x4155 <nnCreateDefaultVkInstance+0x1b5>
    413c: 48 8d bc 24 a8 00 00 00      	lea	rdi, [rsp + 168]
    4144: 31 f6                        	xor	esi, esi
    4146: 4c 89 f2                     	mov	rdx, r14
    4149: e8 d2 e1 ff ff               	call	0x2320 <vkCreateInstance@plt>
    414e: eb 05                        	jmp	0x4155 <nnCreateDefaultVkInstance+0x1b5>
    4150: b8 f3 ff ff ff               	mov	eax, 4294967283
    4155: 48 8d 65 d8                  	lea	rsp, [rbp - 40]
    4159: 5b                           	pop	rbx
    415a: 41 5c                        	pop	r12
    415c: 41 5d                        	pop	r13
    415e: 41 5e                        	pop	r14
    4160: 41 5f                        	pop	r15
    4162: 5d                           	pop	rbp
    4163: c3                           	ret
    4164: 48 8d 3d ef 0e 00 00         	lea	rdi, [rip + 3823]       # 0x505a <vkUpdateDescriptorSets+0x505a>
    416b: 89 c6                        	mov	esi, eax
    416d: ba 17 00 00 00               	mov	edx, 23
    4172: eb 0e                        	jmp	0x4182 <nnCreateDefaultVkInstance+0x1e2>
    4174: 48 8d 3d df 0e 00 00         	lea	rdi, [rip + 3807]       # 0x505a <vkUpdateDescriptorSets+0x505a>
    417b: 89 c6                        	mov	esi, eax
    417d: ba 1b 00 00 00               	mov	edx, 27
    4182: 31 c0                        	xor	eax, eax
    4184: e8 77 df ff ff               	call	0x2100 <printf@plt>
    4189: 31 ff                        	xor	edi, edi
    418b: e8 a0 e1 ff ff               	call	0x2330 <exit@plt>

0000000000004190 <vkGetPhysicalDevices>:
    4190: 41 56                        	push	r14
    4192: 53                           	push	rbx
    4193: 50                           	push	rax
    4194: 48 89 f3                     	mov	rbx, rsi
    4197: 49 89 fe                     	mov	r14, rdi
    419a: 48 8d 74 24 04               	lea	rsi, [rsp + 4]
    419f: 31 d2                        	xor	edx, edx
    41a1: e8 8a de ff ff               	call	0x2030 <vkEnumeratePhysicalDevices@plt>
    41a6: 85 c0                        	test	eax, eax
    41a8: 75 31                        	jne	0x41db <vkGetPhysicalDevices+0x4b>
    41aa: 8b 7c 24 04                  	mov	edi, dword ptr [rsp + 4]
    41ae: 89 3b                        	mov	dword ptr [rbx], edi
    41b0: 48 c1 e7 03                  	shl	rdi, 3
    41b4: e8 87 e0 ff ff               	call	0x2240 <malloc@plt>
    41b9: 48 89 c3                     	mov	rbx, rax
    41bc: 48 8d 74 24 04               	lea	rsi, [rsp + 4]
    41c1: 4c 89 f7                     	mov	rdi, r14
    41c4: 48 89 c2                     	mov	rdx, rax
    41c7: e8 64 de ff ff               	call	0x2030 <vkEnumeratePhysicalDevices@plt>
    41cc: 85 c0                        	test	eax, eax
    41ce: 75 2a                        	jne	0x41fa <vkGetPhysicalDevices+0x6a>
    41d0: 48 89 d8                     	mov	rax, rbx
    41d3: 48 83 c4 08                  	add	rsp, 8
    41d7: 5b                           	pop	rbx
    41d8: 41 5e                        	pop	r14
    41da: c3                           	ret
    41db: 48 8d 74 24 04               	lea	rsi, [rsp + 4]
    41e0: 4c 89 f7                     	mov	rdi, r14
    41e3: 31 d2                        	xor	edx, edx
    41e5: e8 46 de ff ff               	call	0x2030 <vkEnumeratePhysicalDevices@plt>
    41ea: 48 8d 3d 69 0e 00 00         	lea	rdi, [rip + 3689]       # 0x505a <vkUpdateDescriptorSets+0x505a>
    41f1: 89 c6                        	mov	esi, eax
    41f3: ba 55 00 00 00               	mov	edx, 85
    41f8: eb 1e                        	jmp	0x4218 <vkGetPhysicalDevices+0x88>
    41fa: 48 8d 74 24 04               	lea	rsi, [rsp + 4]
    41ff: 4c 89 f7                     	mov	rdi, r14
    4202: 48 89 da                     	mov	rdx, rbx
    4205: e8 26 de ff ff               	call	0x2030 <vkEnumeratePhysicalDevices@plt>
    420a: 48 8d 3d 49 0e 00 00         	lea	rdi, [rip + 3657]       # 0x505a <vkUpdateDescriptorSets+0x505a>
    4211: 89 c6                        	mov	esi, eax
    4213: ba 59 00 00 00               	mov	edx, 89
    4218: 31 c0                        	xor	eax, eax
    421a: e8 e1 de ff ff               	call	0x2100 <printf@plt>
    421f: 31 ff                        	xor	edi, edi
    4221: e8 0a e1 ff ff               	call	0x2330 <exit@plt>
    4226: 66 2e 0f 1f 84 00 00 00 00 00	nop	word ptr cs:[rax + rax]

0000000000004230 <nnGetVkPhysicalDeviceIndexByExtensionName>:
    4230: 55                           	push	rbp
    4231: 41 57                        	push	r15
    4233: 41 56                        	push	r14
    4235: 41 55                        	push	r13
    4237: 41 54                        	push	r12
    4239: 53                           	push	rbx
    423a: 48 83 ec 18                  	sub	rsp, 24
    423e: 48 89 54 24 10               	mov	qword ptr [rsp + 16], rdx
    4243: 85 f6                        	test	esi, esi
    4245: 0f 84 2d 01 00 00            	je	0x4378 <nnGetVkPhysicalDeviceIndexByExtensionName+0x148>
    424b: 49 89 fd                     	mov	r13, rdi
    424e: 89 f0                        	mov	eax, esi
    4250: 48 89 44 24 08               	mov	qword ptr [rsp + 8], rax
    4255: c7 44 24 04 ff ff ff ff      	mov	dword ptr [rsp + 4], 4294967295
    425d: 49 89 e6                     	mov	r14, rsp
    4260: 31 db                        	xor	ebx, ebx
    4262: eb 23                        	jmp	0x4287 <nnGetVkPhysicalDeviceIndexByExtensionName+0x57>
    4264: 89 d8                        	mov	eax, ebx
    4266: 89 5c 24 04                  	mov	dword ptr [rsp + 4], ebx
    426a: 66 0f 1f 44 00 00            	nop	word ptr [rax + rax]
    4270: 4c 89 e7                     	mov	rdi, r12
    4273: e8 d8 dd ff ff               	call	0x2050 <free@plt>
    4278: 48 83 c3 01                  	add	rbx, 1
    427c: 48 3b 5c 24 08               	cmp	rbx, qword ptr [rsp + 8]
    4281: 0f 84 a6 00 00 00            	je	0x432d <nnGetVkPhysicalDeviceIndexByExtensionName+0xfd>
    4287: c7 04 24 00 00 00 00         	mov	dword ptr [rsp], 0
    428e: 49 8b 7c dd 00               	mov	rdi, qword ptr [r13 + 8*rbx]
    4293: 31 f6                        	xor	esi, esi
    4295: 4c 89 f2                     	mov	rdx, r14
    4298: 31 c9                        	xor	ecx, ecx
    429a: e8 21 de ff ff               	call	0x20c0 <vkEnumerateDeviceExtensionProperties@plt>
    429f: 85 c0                        	test	eax, eax
    42a1: 0f 85 a5 00 00 00            	jne	0x434c <nnGetVkPhysicalDeviceIndexByExtensionName+0x11c>
    42a7: 8b 04 24                     	mov	eax, dword ptr [rsp]
    42aa: 48 89 c1                     	mov	rcx, rax
    42ad: 48 c1 e1 08                  	shl	rcx, 8
    42b1: 48 8d 3c 81                  	lea	rdi, [rcx + 4*rax]
    42b5: e8 86 df ff ff               	call	0x2240 <malloc@plt>
    42ba: 49 89 c4                     	mov	r12, rax
    42bd: 49 8b 7c dd 00               	mov	rdi, qword ptr [r13 + 8*rbx]
    42c2: 31 f6                        	xor	esi, esi
    42c4: 4c 89 f2                     	mov	rdx, r14
    42c7: 48 89 c1                     	mov	rcx, rax
    42ca: e8 f1 dd ff ff               	call	0x20c0 <vkEnumerateDeviceExtensionProperties@plt>
    42cf: 85 c0                        	test	eax, eax
    42d1: 0f 85 85 00 00 00            	jne	0x435c <nnGetVkPhysicalDeviceIndexByExtensionName+0x12c>
    42d7: 83 3c 24 00                  	cmp	dword ptr [rsp], 0
    42db: 74 93                        	je	0x4270 <nnGetVkPhysicalDeviceIndexByExtensionName+0x40>
    42dd: 4c 89 e5                     	mov	rbp, r12
    42e0: 45 31 ff                     	xor	r15d, r15d
    42e3: 48 8b 05 0e 2d 00 00         	mov	rax, qword ptr [rip + 11534] # 0x6ff8 <vkUpdateDescriptorSets+0x6ff8>
    42ea: 48 8b 38                     	mov	rdi, qword ptr [rax]
    42ed: 48 8d 35 df 0d 00 00         	lea	rsi, [rip + 3551]       # 0x50d3 <vkUpdateDescriptorSets+0x50d3>
    42f4: 89 da                        	mov	edx, ebx
    42f6: 48 89 e9                     	mov	rcx, rbp
    42f9: 31 c0                        	xor	eax, eax
    42fb: e8 e0 de ff ff               	call	0x21e0 <fprintf@plt>
    4300: 48 89 ef                     	mov	rdi, rbp
    4303: 48 8b 74 24 10               	mov	rsi, qword ptr [rsp + 16]
    4308: e8 b3 de ff ff               	call	0x21c0 <strcmp@plt>
    430d: 85 c0                        	test	eax, eax
    430f: 0f 84 4f ff ff ff            	je	0x4264 <nnGetVkPhysicalDeviceIndexByExtensionName+0x34>
    4315: 49 83 c7 01                  	add	r15, 1
    4319: 8b 04 24                     	mov	eax, dword ptr [rsp]
    431c: 48 81 c5 04 01 00 00         	add	rbp, 260
    4323: 49 39 c7                     	cmp	r15, rax
    4326: 72 bb                        	jb	0x42e3 <nnGetVkPhysicalDeviceIndexByExtensionName+0xb3>
    4328: e9 43 ff ff ff               	jmp	0x4270 <nnGetVkPhysicalDeviceIndexByExtensionName+0x40>
    432d: 8b 44 24 04                  	mov	eax, dword ptr [rsp + 4]
    4331: 83 f8 ff                     	cmp	eax, -1
    4334: 74 42                        	je	0x4378 <nnGetVkPhysicalDeviceIndexByExtensionName+0x148>
    4336: 48 98                        	cdqe
    4338: 49 8b 44 c5 00               	mov	rax, qword ptr [r13 + 8*rax]
    433d: 48 83 c4 18                  	add	rsp, 24
    4341: 5b                           	pop	rbx
    4342: 41 5c                        	pop	r12
    4344: 41 5d                        	pop	r13
    4346: 41 5e                        	pop	r14
    4348: 41 5f                        	pop	r15
    434a: 5d                           	pop	rbp
    434b: c3                           	ret
    434c: 48 8d 3d 07 0d 00 00         	lea	rdi, [rip + 3335]       # 0x505a <vkUpdateDescriptorSets+0x505a>
    4353: 89 c6                        	mov	esi, eax
    4355: ba 69 00 00 00               	mov	edx, 105
    435a: eb 0e                        	jmp	0x436a <nnGetVkPhysicalDeviceIndexByExtensionName+0x13a>
    435c: 48 8d 3d f7 0c 00 00         	lea	rdi, [rip + 3319]       # 0x505a <vkUpdateDescriptorSets+0x505a>
    4363: 89 c6                        	mov	esi, eax
    4365: ba 6d 00 00 00               	mov	edx, 109
    436a: 31 c0                        	xor	eax, eax
    436c: e8 8f dd ff ff               	call	0x2100 <printf@plt>
    4371: 31 ff                        	xor	edi, edi
    4373: e8 b8 df ff ff               	call	0x2330 <exit@plt>
    4378: 48 8b 05 79 2c 00 00         	mov	rax, qword ptr [rip + 11385] # 0x6ff8 <vkUpdateDescriptorSets+0x6ff8>
    437f: 48 8b 08                     	mov	rcx, qword ptr [rax]
    4382: 48 8d 3d 60 0d 00 00         	lea	rdi, [rip + 3424]       # 0x50e9 <vkUpdateDescriptorSets+0x50e9>
    4389: be 31 00 00 00               	mov	esi, 49
    438e: ba 01 00 00 00               	mov	edx, 1
    4393: e8 b8 df ff ff               	call	0x2350 <fwrite@plt>
    4398: bf 01 00 00 00               	mov	edi, 1
    439d: e8 8e df ff ff               	call	0x2330 <exit@plt>
    43a2: 66 2e 0f 1f 84 00 00 00 00 00	nop	word ptr cs:[rax + rax]
    43ac: 0f 1f 40 00                  	nop	dword ptr [rax]

00000000000043b0 <nnGetVkPhysicalDevices>:
    43b0: 41 56                        	push	r14
    43b2: 53                           	push	rbx
    43b3: 50                           	push	rax
    43b4: 48 89 f3                     	mov	rbx, rsi
    43b7: 49 89 fe                     	mov	r14, rdi
    43ba: 48 8d 74 24 04               	lea	rsi, [rsp + 4]
    43bf: 31 d2                        	xor	edx, edx
    43c1: e8 6a dc ff ff               	call	0x2030 <vkEnumeratePhysicalDevices@plt>
    43c6: 85 c0                        	test	eax, eax
    43c8: 75 31                        	jne	0x43fb <nnGetVkPhysicalDevices+0x4b>
    43ca: 8b 7c 24 04                  	mov	edi, dword ptr [rsp + 4]
    43ce: 89 3b                        	mov	dword ptr [rbx], edi
    43d0: 48 c1 e7 03                  	shl	rdi, 3
    43d4: e8 67 de ff ff               	call	0x2240 <malloc@plt>
    43d9: 48 89 c3                     	mov	rbx, rax
    43dc: 48 8d 74 24 04               	lea	rsi, [rsp + 4]
    43e1: 4c 89 f7                     	mov	rdi, r14
    43e4: 48 89 c2                     	mov	rdx, rax
    43e7: e8 44 dc ff ff               	call	0x2030 <vkEnumeratePhysicalDevices@plt>
    43ec: 85 c0                        	test	eax, eax
    43ee: 75 2a                        	jne	0x441a <nnGetVkPhysicalDevices+0x6a>
    43f0: 48 89 d8                     	mov	rax, rbx
    43f3: 48 83 c4 08                  	add	rsp, 8
    43f7: 5b                           	pop	rbx
    43f8: 41 5e                        	pop	r14
    43fa: c3                           	ret
    43fb: 48 8d 74 24 04               	lea	rsi, [rsp + 4]
    4400: 4c 89 f7                     	mov	rdi, r14
    4403: 31 d2                        	xor	edx, edx
    4405: e8 26 dc ff ff               	call	0x2030 <vkEnumeratePhysicalDevices@plt>
    440a: 48 8d 3d 49 0c 00 00         	lea	rdi, [rip + 3145]       # 0x505a <vkUpdateDescriptorSets+0x505a>
    4411: 89 c6                        	mov	esi, eax
    4413: ba 82 00 00 00               	mov	edx, 130
    4418: eb 1e                        	jmp	0x4438 <nnGetVkPhysicalDevices+0x88>
    441a: 48 8d 74 24 04               	lea	rsi, [rsp + 4]
    441f: 4c 89 f7                     	mov	rdi, r14
    4422: 48 89 da                     	mov	rdx, rbx
    4425: e8 06 dc ff ff               	call	0x2030 <vkEnumeratePhysicalDevices@plt>
    442a: 48 8d 3d 29 0c 00 00         	lea	rdi, [rip + 3113]       # 0x505a <vkUpdateDescriptorSets+0x505a>
    4431: 89 c6                        	mov	esi, eax
    4433: ba 86 00 00 00               	mov	edx, 134
    4438: 31 c0                        	xor	eax, eax
    443a: e8 c1 dc ff ff               	call	0x2100 <printf@plt>
    443f: 31 ff                        	xor	edi, edi
    4441: e8 ea de ff ff               	call	0x2330 <exit@plt>
    4446: 66 2e 0f 1f 84 00 00 00 00 00	nop	word ptr cs:[rax + rax]

0000000000004450 <nnGetVkQueueComputeIndex>:
    4450: 55                           	push	rbp
    4451: 41 56                        	push	r14
    4453: 53                           	push	rbx
    4454: 48 83 ec 10                  	sub	rsp, 16
    4458: 48 89 fd                     	mov	rbp, rdi
    445b: c7 44 24 0c 00 00 00 00      	mov	dword ptr [rsp + 12], 0
    4463: 4c 8d 74 24 0c               	lea	r14, [rsp + 12]
    4468: 4c 89 f6                     	mov	rsi, r14
    446b: 31 d2                        	xor	edx, edx
    446d: e8 3e dc ff ff               	call	0x20b0 <vkGetPhysicalDeviceQueueFamilyProperties@plt>
    4472: 8b 44 24 0c                  	mov	eax, dword ptr [rsp + 12]
    4476: 48 c1 e0 03                  	shl	rax, 3
    447a: 48 8d 3c 40                  	lea	rdi, [rax + 2*rax]
    447e: e8 bd dd ff ff               	call	0x2240 <malloc@plt>
    4483: 48 89 c3                     	mov	rbx, rax
    4486: 48 89 ef                     	mov	rdi, rbp
    4489: 4c 89 f6                     	mov	rsi, r14
    448c: 48 89 c2                     	mov	rdx, rax
    448f: e8 1c dc ff ff               	call	0x20b0 <vkGetPhysicalDeviceQueueFamilyProperties@plt>
    4494: 8b 44 24 0c                  	mov	eax, dword ptr [rsp + 12]
    4498: bd ff ff ff ff               	mov	ebp, 4294967295
    449d: 48 85 c0                     	test	rax, rax
    44a0: 74 24                        	je	0x44c6 <nnGetVkQueueComputeIndex+0x76>
    44a2: 31 c9                        	xor	ecx, ecx
    44a4: 48 89 da                     	mov	rdx, rbx
    44a7: 66 0f 1f 84 00 00 00 00 00   	nop	word ptr [rax + rax]
    44b0: f6 02 02                     	test	byte ptr [rdx], 2
    44b3: 75 0f                        	jne	0x44c4 <nnGetVkQueueComputeIndex+0x74>
    44b5: 48 83 c1 01                  	add	rcx, 1
    44b9: 48 83 c2 18                  	add	rdx, 24
    44bd: 48 39 c8                     	cmp	rax, rcx
    44c0: 75 ee                        	jne	0x44b0 <nnGetVkQueueComputeIndex+0x60>
    44c2: eb 02                        	jmp	0x44c6 <nnGetVkQueueComputeIndex+0x76>
    44c4: 89 cd                        	mov	ebp, ecx
    44c6: 48 89 df                     	mov	rdi, rbx
    44c9: e8 82 db ff ff               	call	0x2050 <free@plt>
    44ce: 89 e8                        	mov	eax, ebp
    44d0: 48 83 c4 10                  	add	rsp, 16
    44d4: 5b                           	pop	rbx
    44d5: 41 5e                        	pop	r14
    44d7: 5d                           	pop	rbp
    44d8: c3                           	ret
    44d9: 0f 1f 80 00 00 00 00         	nop	dword ptr [rax]

00000000000044e0 <nnGetMemoryProperties>:
    44e0: 53                           	push	rbx
    44e1: 48 81 ec 10 02 00 00         	sub	rsp, 528
    44e8: 48 8d 74 24 08               	lea	rsi, [rsp + 8]
    44ed: e8 2e dd ff ff               	call	0x2220 <vkGetPhysicalDeviceMemoryProperties@plt>
    44f2: 8b 5c 24 08                  	mov	ebx, dword ptr [rsp + 8]
    44f6: bf 00 01 00 00               	mov	edi, 256
    44fb: e8 40 dd ff ff               	call	0x2240 <malloc@plt>
    4500: 48 89 c2                     	mov	rdx, rax
    4503: c5 fc 10 44 24 0c            	vmovups	ymm0, ymmword ptr [rsp + 12]
    4509: c5 fc 11 00                  	vmovups	ymmword ptr [rax], ymm0
    450d: 89 d8                        	mov	eax, ebx
    450f: 48 81 c4 10 02 00 00         	add	rsp, 528
    4516: 5b                           	pop	rbx
    4517: c5 f8 77                     	vzeroupper
    451a: c3                           	ret
    451b: 0f 1f 44 00 00               	nop	dword ptr [rax + rax]

0000000000004520 <nnFindMemoryProperties>:
    4520: 44 8b 07                     	mov	r8d, dword ptr [rdi]
    4523: b8 ff ff ff ff               	mov	eax, 4294967295
    4528: 4d 85 c0                     	test	r8, r8
    452b: 74 33                        	je	0x4560 <nnFindMemoryProperties+0x40>
    452d: 45 31 c9                     	xor	r9d, r9d
    4530: eb 17                        	jmp	0x4549 <nnFindMemoryProperties+0x29>
    4532: 66 2e 0f 1f 84 00 00 00 00 00	nop	word ptr cs:[rax + rax]
    453c: 0f 1f 40 00                  	nop	dword ptr [rax]
    4540: 49 83 c1 01                  	add	r9, 1
    4544: 4d 39 c8                     	cmp	r8, r9
    4547: 74 17                        	je	0x4560 <nnFindMemoryProperties+0x40>
    4549: 44 0f a3 ce                  	bt	esi, r9d
    454d: 73 f1                        	jae	0x4540 <nnFindMemoryProperties+0x20>
    454f: 48 8b 4f 08                  	mov	rcx, qword ptr [rdi + 8]
    4553: 42 8b 0c c9                  	mov	ecx, dword ptr [rcx + 8*r9]
    4557: f7 d1                        	not	ecx
    4559: 85 ca                        	test	edx, ecx
    455b: 75 e3                        	jne	0x4540 <nnFindMemoryProperties+0x20>
    455d: 44 89 c8                     	mov	eax, r9d
    4560: c3                           	ret
    4561: 66 2e 0f 1f 84 00 00 00 00 00	nop	word ptr cs:[rax + rax]
    456b: 0f 1f 44 00 00               	nop	dword ptr [rax + rax]

0000000000004570 <nnCreateVkDevice>:
    4570: 48 81 ec 88 00 00 00         	sub	rsp, 136
    4577: c7 44 24 0c 00 00 80 3f      	mov	dword ptr [rsp + 12], 1065353216
    457f: c7 44 24 18 02 00 00 00      	mov	dword ptr [rsp + 24], 2
    4587: 48 c7 44 24 20 00 00 00 00   	mov	qword ptr [rsp + 32], 0
    4590: c7 44 24 28 00 00 00 00      	mov	dword ptr [rsp + 40], 0
    4598: 89 74 24 2c                  	mov	dword ptr [rsp + 44], esi
    459c: c7 44 24 30 01 00 00 00      	mov	dword ptr [rsp + 48], 1
    45a4: 48 8d 44 24 0c               	lea	rax, [rsp + 12]
    45a9: 48 89 44 24 38               	mov	qword ptr [rsp + 56], rax
    45ae: c7 44 24 40 03 00 00 00      	mov	dword ptr [rsp + 64], 3
    45b6: 48 c7 44 24 48 00 00 00 00   	mov	qword ptr [rsp + 72], 0
    45bf: 48 b8 00 00 00 00 01 00 00 00	movabs	rax, 4294967296
    45c9: 48 89 44 24 50               	mov	qword ptr [rsp + 80], rax
    45ce: 48 8d 44 24 18               	lea	rax, [rsp + 24]
    45d3: 48 89 44 24 58               	mov	qword ptr [rsp + 88], rax
    45d8: c7 44 24 60 00 00 00 00      	mov	dword ptr [rsp + 96], 0
    45e0: 48 c7 44 24 68 00 00 00 00   	mov	qword ptr [rsp + 104], 0
    45e9: c7 44 24 70 02 00 00 00      	mov	dword ptr [rsp + 112], 2
    45f1: 48 8d 05 08 2c 00 00         	lea	rax, [rip + 11272]      # 0x7200 <enabledDeviceExtensions>
    45f8: 48 89 44 24 78               	mov	qword ptr [rsp + 120], rax
    45fd: 48 c7 84 24 80 00 00 00 00 00 00 00  	mov	qword ptr [rsp + 128], 0
    4609: 48 8d 74 24 40               	lea	rsi, [rsp + 64]
    460e: 48 8d 4c 24 10               	lea	rcx, [rsp + 16]
    4613: 31 d2                        	xor	edx, edx
    4615: e8 86 dc ff ff               	call	0x22a0 <vkCreateDevice@plt>
    461a: 85 c0                        	test	eax, eax
    461c: 75 0d                        	jne	0x462b <nnCreateVkDevice+0xbb>
    461e: 48 8b 44 24 10               	mov	rax, qword ptr [rsp + 16]
    4623: 48 81 c4 88 00 00 00         	add	rsp, 136
    462a: c3                           	ret
    462b: 48 8d 3d 28 0a 00 00         	lea	rdi, [rip + 2600]       # 0x505a <vkUpdateDescriptorSets+0x505a>
    4632: 89 c6                        	mov	esi, eax
    4634: ba e1 00 00 00               	mov	edx, 225
    4639: 31 c0                        	xor	eax, eax
    463b: e8 c0 da ff ff               	call	0x2100 <printf@plt>
    4640: 31 ff                        	xor	edi, edi
    4642: e8 e9 dc ff ff               	call	0x2330 <exit@plt>
    4647: 66 0f 1f 84 00 00 00 00 00   	nop	word ptr [rax + rax]

0000000000004650 <nnGetVkDeviceQueue>:
    4650: 50                           	push	rax
    4651: 48 89 e1                     	mov	rcx, rsp
    4654: 31 d2                        	xor	edx, edx
    4656: e8 c5 da ff ff               	call	0x2120 <vkGetDeviceQueue@plt>
    465b: 48 8b 04 24                  	mov	rax, qword ptr [rsp]
    465f: 59                           	pop	rcx
    4660: c3                           	ret
    4661: 66 2e 0f 1f 84 00 00 00 00 00	nop	word ptr cs:[rax + rax]
    466b: 0f 1f 44 00 00               	nop	dword ptr [rax + rax]

0000000000004670 <DestroyDebugUtilsMessengerEXT>:
    4670: 41 57                        	push	r15
    4672: 41 56                        	push	r14
    4674: 53                           	push	rbx
    4675: 49 89 d6                     	mov	r14, rdx
    4678: 49 89 f7                     	mov	r15, rsi
    467b: 48 89 fb                     	mov	rbx, rdi
    467e: 48 8d 35 29 0b 00 00         	lea	rsi, [rip + 2857]       # 0x51ae <vkUpdateDescriptorSets+0x51ae>
    4685: e8 d6 da ff ff               	call	0x2160 <vkGetInstanceProcAddr@plt>
    468a: 48 85 c0                     	test	rax, rax
    468d: 74 10                        	je	0x469f <DestroyDebugUtilsMessengerEXT+0x2f>
    468f: 48 89 df                     	mov	rdi, rbx
    4692: 4c 89 fe                     	mov	rsi, r15
    4695: 4c 89 f2                     	mov	rdx, r14
    4698: 5b                           	pop	rbx
    4699: 41 5e                        	pop	r14
    469b: 41 5f                        	pop	r15
    469d: ff e0                        	jmp	rax
    469f: 5b                           	pop	rbx
    46a0: 41 5e                        	pop	r14
    46a2: 41 5f                        	pop	r15
    46a4: c3                           	ret
    46a5: 66 2e 0f 1f 84 00 00 00 00 00	nop	word ptr cs:[rax + rax]
    46af: 90                           	nop

00000000000046b0 <nnCreateVkDebugUtilsMessenger>:
    46b0: 41 57                        	push	r15
    46b2: 41 56                        	push	r14
    46b4: 53                           	push	rbx
    46b5: 48 83 ec 30                  	sub	rsp, 48
    46b9: 49 89 f6                     	mov	r14, rsi
    46bc: 49 89 ff                     	mov	r15, rdi
    46bf: c5 fc 10 05 01 27 00 00      	vmovups	ymm0, ymmword ptr [rip + 9985] # 0x6dc8 <vkUpdateDescriptorSets+0x6dc8>
    46c7: c5 fc 11 44 24 10            	vmovups	ymmword ptr [rsp + 16], ymm0
    46cd: c5 fc 10 05 e3 26 00 00      	vmovups	ymm0, ymmword ptr [rip + 9955] # 0x6db8 <vkUpdateDescriptorSets+0x6db8>
    46d5: c5 fc 11 04 24               	vmovups	ymmword ptr [rsp], ymm0
    46da: 48 8d 35 34 0b 00 00         	lea	rsi, [rip + 2868]       # 0x5215 <vkUpdateDescriptorSets+0x5215>
    46e1: c5 f8 77                     	vzeroupper
    46e4: e8 77 da ff ff               	call	0x2160 <vkGetInstanceProcAddr@plt>
    46e9: 48 85 c0                     	test	rax, rax
    46ec: 74 12                        	je	0x4700 <nnCreateVkDebugUtilsMessenger+0x50>
    46ee: 48 89 c3                     	mov	rbx, rax
    46f1: 48 89 e6                     	mov	rsi, rsp
    46f4: 4c 89 ff                     	mov	rdi, r15
    46f7: 31 d2                        	xor	edx, edx
    46f9: 4c 89 f1                     	mov	rcx, r14
    46fc: ff d0                        	call	rax
    46fe: eb 05                        	jmp	0x4705 <nnCreateVkDebugUtilsMessenger+0x55>
    4700: b8 f9 ff ff ff               	mov	eax, 4294967289
    4705: 48 83 c4 30                  	add	rsp, 48
    4709: 5b                           	pop	rbx
    470a: 41 5e                        	pop	r14
    470c: 41 5f                        	pop	r15
    470e: c3                           	ret
    470f: 90                           	nop

0000000000004710 <debugCallback>:
    4710: 50                           	push	rax
    4711: 48 8b 72 28                  	mov	rsi, qword ptr [rdx + 40]
    4715: 81 ff ff 00 00 00            	cmp	edi, 255
    471b: 7f 13                        	jg	0x4730 <debugCallback+0x20>
    471d: 83 ff 01                     	cmp	edi, 1
    4720: 74 30                        	je	0x4752 <debugCallback+0x42>
    4722: 83 ff 10                     	cmp	edi, 16
    4725: 75 22                        	jne	0x4749 <debugCallback+0x39>
    4727: 48 8d 15 cc 0a 00 00         	lea	rdx, [rip + 2764]       # 0x51fa <vkUpdateDescriptorSets+0x51fa>
    472e: eb 32                        	jmp	0x4762 <debugCallback+0x52>
    4730: 81 ff 00 01 00 00            	cmp	edi, 256
    4736: 74 23                        	je	0x475b <debugCallback+0x4b>
    4738: 81 ff 00 10 00 00            	cmp	edi, 4096
    473e: 75 09                        	jne	0x4749 <debugCallback+0x39>
    4740: 48 8d 15 c0 0a 00 00         	lea	rdx, [rip + 2752]       # 0x5207 <vkUpdateDescriptorSets+0x5207>
    4747: eb 19                        	jmp	0x4762 <debugCallback+0x52>
    4749: 48 8d 15 bd 0a 00 00         	lea	rdx, [rip + 2749]       # 0x520d <vkUpdateDescriptorSets+0x520d>
    4750: eb 10                        	jmp	0x4762 <debugCallback+0x52>
    4752: 48 8d 15 99 0a 00 00         	lea	rdx, [rip + 2713]       # 0x51f2 <vkUpdateDescriptorSets+0x51f2>
    4759: eb 07                        	jmp	0x4762 <debugCallback+0x52>
    475b: 48 8d 15 9d 0a 00 00         	lea	rdx, [rip + 2717]       # 0x51ff <vkUpdateDescriptorSets+0x51ff>
    4762: 48 8d 3d 65 0a 00 00         	lea	rdi, [rip + 2661]       # 0x51ce <vkUpdateDescriptorSets+0x51ce>
    4769: 31 c0                        	xor	eax, eax
    476b: e8 90 d9 ff ff               	call	0x2100 <printf@plt>
    4770: 31 c0                        	xor	eax, eax
    4772: 59                           	pop	rcx
    4773: c3                           	ret
    4774: 66 2e 0f 1f 84 00 00 00 00 00	nop	word ptr cs:[rax + rax]
    477e: 66 90                        	nop

0000000000004780 <nnCreateVkDescriptorSetLayoutBindingStorageBuffer>:
    4780: 48 89 f8                     	mov	rax, rdi
    4783: 48 c7 47 10 00 00 00 00      	mov	qword ptr [rdi + 16], 0
    478b: 89 37                        	mov	dword ptr [rdi], esi
    478d: 48 b9 07 00 00 00 01 00 00 00	movabs	rcx, 4294967303
    4797: 48 89 4f 04                  	mov	qword ptr [rdi + 4], rcx
    479b: c7 47 0c 20 00 00 00         	mov	dword ptr [rdi + 12], 32
    47a2: c3                           	ret
    47a3: 66 2e 0f 1f 84 00 00 00 00 00	nop	word ptr cs:[rax + rax]
    47ad: 0f 1f 00                     	nop	dword ptr [rax]

00000000000047b0 <nnCreateVkPipelineCache>:
    47b0: 41 56                        	push	r14
    47b2: 53                           	push	rbx
    47b3: 48 83 ec 38                  	sub	rsp, 56
    47b7: 48 89 f0                     	mov	rax, rsi
    47ba: 49 89 fe                     	mov	r14, rdi
    47bd: 48 8d 74 24 08               	lea	rsi, [rsp + 8]
    47c2: 48 89 c7                     	mov	rdi, rax
    47c5: e8 e6 d9 ff ff               	call	0x21b0 <nnReadBinaryFile@plt>
    47ca: 48 89 c3                     	mov	rbx, rax
    47cd: c7 44 24 10 11 00 00 00      	mov	dword ptr [rsp + 16], 17
    47d5: 48 c7 44 24 18 00 00 00 00   	mov	qword ptr [rsp + 24], 0
    47de: c7 44 24 20 00 00 00 00      	mov	dword ptr [rsp + 32], 0
    47e6: 48 8b 44 24 08               	mov	rax, qword ptr [rsp + 8]
    47eb: 48 89 44 24 28               	mov	qword ptr [rsp + 40], rax
    47f0: 48 89 5c 24 30               	mov	qword ptr [rsp + 48], rbx
    47f5: 48 8d 74 24 10               	lea	rsi, [rsp + 16]
    47fa: 48 89 e1                     	mov	rcx, rsp
    47fd: 4c 89 f7                     	mov	rdi, r14
    4800: 31 d2                        	xor	edx, edx
    4802: e8 d9 d8 ff ff               	call	0x20e0 <vkCreatePipelineCache@plt>
    4807: 85 c0                        	test	eax, eax
    4809: 75 19                        	jne	0x4824 <nnCreateVkPipelineCache+0x74>
    480b: 48 85 db                     	test	rbx, rbx
    480e: 74 08                        	je	0x4818 <nnCreateVkPipelineCache+0x68>
    4810: 48 89 df                     	mov	rdi, rbx
    4813: e8 38 d8 ff ff               	call	0x2050 <free@plt>
    4818: 48 8b 04 24                  	mov	rax, qword ptr [rsp]
    481c: 48 83 c4 38                  	add	rsp, 56
    4820: 5b                           	pop	rbx
    4821: 41 5e                        	pop	r14
    4823: c3                           	ret
    4824: 48 8d 74 24 10               	lea	rsi, [rsp + 16]
    4829: 48 89 e1                     	mov	rcx, rsp
    482c: 4c 89 f7                     	mov	rdi, r14
    482f: 31 d2                        	xor	edx, edx
    4831: e8 aa d8 ff ff               	call	0x20e0 <vkCreatePipelineCache@plt>
    4836: 48 8d 3d 1d 08 00 00         	lea	rdi, [rip + 2077]       # 0x505a <vkUpdateDescriptorSets+0x505a>
    483d: 89 c6                        	mov	esi, eax
    483f: ba 1b 00 00 00               	mov	edx, 27
    4844: 31 c0                        	xor	eax, eax
    4846: e8 b5 d8 ff ff               	call	0x2100 <printf@plt>
    484b: 31 ff                        	xor	edi, edi
    484d: e8 de da ff ff               	call	0x2330 <exit@plt>
    4852: 66 2e 0f 1f 84 00 00 00 00 00	nop	word ptr cs:[rax + rax]
    485c: 0f 1f 40 00                  	nop	dword ptr [rax]

0000000000004860 <nnCreateVkComputePipeline2MatricesAndOutput>:
    4860: 41 57                        	push	r15
    4862: 41 56                        	push	r14
    4864: 41 55                        	push	r13
    4866: 41 54                        	push	r12
    4868: 53                           	push	rbx
    4869: 48 81 ec 00 01 00 00         	sub	rsp, 256
    4870: 49 89 d4                     	mov	r12, rdx
    4873: 49 89 f6                     	mov	r14, rsi
    4876: 49 89 ff                     	mov	r15, rdi
    4879: bf 48 00 00 00               	mov	edi, 72
    487e: e8 bd d9 ff ff               	call	0x2240 <malloc@plt>
    4883: 48 89 c3                     	mov	rbx, rax
    4886: c5 f8 28 05 b2 09 00 00      	vmovaps	xmm0, xmmword ptr [rip + 2482] # 0x5240 <vkUpdateDescriptorSets+0x5240>
    488e: c5 f8 11 00                  	vmovups	xmmword ptr [rax], xmm0
    4892: 48 c7 40 10 00 00 00 00      	mov	qword ptr [rax + 16], 0
    489a: c5 f8 28 05 ae 09 00 00      	vmovaps	xmm0, xmmword ptr [rip + 2478] # 0x5250 <vkUpdateDescriptorSets+0x5250>
    48a2: c5 f8 11 40 18               	vmovups	xmmword ptr [rax + 24], xmm0
    48a7: 48 c7 40 28 00 00 00 00      	mov	qword ptr [rax + 40], 0
    48af: c5 f8 28 05 a9 09 00 00      	vmovaps	xmm0, xmmword ptr [rip + 2473] # 0x5260 <vkUpdateDescriptorSets+0x5260>
    48b7: c5 f8 11 40 30               	vmovups	xmmword ptr [rax + 48], xmm0
    48bc: 48 c7 40 40 00 00 00 00      	mov	qword ptr [rax + 64], 0
    48c4: c7 44 24 28 20 00 00 00      	mov	dword ptr [rsp + 40], 32
    48cc: 48 c7 44 24 30 00 00 00 00   	mov	qword ptr [rsp + 48], 0
    48d5: 48 b8 00 00 00 00 03 00 00 00	movabs	rax, 12884901888
    48df: 48 89 44 24 38               	mov	qword ptr [rsp + 56], rax
    48e4: 48 89 5c 24 40               	mov	qword ptr [rsp + 64], rbx
    48e9: 48 8d 74 24 28               	lea	rsi, [rsp + 40]
    48ee: 4c 8d 6c 24 20               	lea	r13, [rsp + 32]
    48f3: 4c 89 ff                     	mov	rdi, r15
    48f6: 31 d2                        	xor	edx, edx
    48f8: 4c 89 e9                     	mov	rcx, r13
    48fb: e8 40 d7 ff ff               	call	0x2040 <vkCreateDescriptorSetLayout@plt>
    4900: 85 c0                        	test	eax, eax
    4902: 0f 85 ab 01 00 00            	jne	0x4ab3 <nnCreateVkComputePipeline2MatricesAndOutput+0x253>
    4908: c7 44 24 70 1e 00 00 00      	mov	dword ptr [rsp + 112], 30
    4910: 48 c7 44 24 78 00 00 00 00   	mov	qword ptr [rsp + 120], 0
    4919: 48 b8 00 00 00 00 01 00 00 00	movabs	rax, 4294967296
    4923: 48 89 84 24 80 00 00 00      	mov	qword ptr [rsp + 128], rax
    492b: 4c 89 ac 24 88 00 00 00      	mov	qword ptr [rsp + 136], r13
    4933: c7 84 24 90 00 00 00 00 00 00 00     	mov	dword ptr [rsp + 144], 0
    493e: 48 c7 84 24 98 00 00 00 00 00 00 00  	mov	qword ptr [rsp + 152], 0
    494a: 48 8d 74 24 70               	lea	rsi, [rsp + 112]
    494f: 48 8d 4c 24 10               	lea	rcx, [rsp + 16]
    4954: 4c 89 ff                     	mov	rdi, r15
    4957: 31 d2                        	xor	edx, edx
    4959: e8 22 d9 ff ff               	call	0x2280 <vkCreatePipelineLayout@plt>
    495e: 85 c0                        	test	eax, eax
    4960: 0f 85 74 01 00 00            	jne	0x4ada <nnCreateVkComputePipeline2MatricesAndOutput+0x27a>
    4966: 48 8d 74 24 18               	lea	rsi, [rsp + 24]
    496b: 4c 89 e7                     	mov	rdi, r12
    496e: e8 3d d8 ff ff               	call	0x21b0 <nnReadBinaryFile@plt>
    4973: 48 85 c0                     	test	rax, rax
    4976: 0f 84 82 01 00 00            	je	0x4afe <nnCreateVkComputePipeline2MatricesAndOutput+0x29e>
    497c: 49 89 c4                     	mov	r12, rax
    497f: c7 44 24 48 10 00 00 00      	mov	dword ptr [rsp + 72], 16
    4987: 48 c7 44 24 50 00 00 00 00   	mov	qword ptr [rsp + 80], 0
    4990: c7 44 24 58 00 00 00 00      	mov	dword ptr [rsp + 88], 0
    4998: 48 8b 44 24 18               	mov	rax, qword ptr [rsp + 24]
    499d: 48 89 44 24 60               	mov	qword ptr [rsp + 96], rax
    49a2: 4c 89 64 24 68               	mov	qword ptr [rsp + 104], r12
    49a7: 48 8d 74 24 48               	lea	rsi, [rsp + 72]
    49ac: 48 89 e1                     	mov	rcx, rsp
    49af: 4c 89 ff                     	mov	rdi, r15
    49b2: 31 d2                        	xor	edx, edx
    49b4: e8 f7 d8 ff ff               	call	0x22b0 <vkCreateShaderModule@plt>
    49b9: 85 c0                        	test	eax, eax
    49bb: 0f 85 67 01 00 00            	jne	0x4b28 <nnCreateVkComputePipeline2MatricesAndOutput+0x2c8>
    49c1: c7 84 24 a0 00 00 00 1d 00 00 00     	mov	dword ptr [rsp + 160], 29
    49cc: 48 c7 84 24 a8 00 00 00 00 00 00 00  	mov	qword ptr [rsp + 168], 0
    49d8: c7 84 24 b0 00 00 00 00 00 00 00     	mov	dword ptr [rsp + 176], 0
    49e3: c7 84 24 b8 00 00 00 12 00 00 00     	mov	dword ptr [rsp + 184], 18
    49ee: 48 c7 84 24 c0 00 00 00 00 00 00 00  	mov	qword ptr [rsp + 192], 0
    49fa: 48 b8 00 00 00 00 20 00 00 00	movabs	rax, 137438953472
    4a04: 48 89 84 24 c8 00 00 00      	mov	qword ptr [rsp + 200], rax
    4a0c: 48 8b 04 24                  	mov	rax, qword ptr [rsp]
    4a10: 48 89 84 24 d0 00 00 00      	mov	qword ptr [rsp + 208], rax
    4a18: 48 8d 05 71 08 00 00         	lea	rax, [rip + 2161]       # 0x5290 <vkUpdateDescriptorSets+0x5290>
    4a1f: 48 89 84 24 d8 00 00 00      	mov	qword ptr [rsp + 216], rax
    4a27: 48 c7 84 24 e0 00 00 00 00 00 00 00  	mov	qword ptr [rsp + 224], 0
    4a33: 48 8b 44 24 10               	mov	rax, qword ptr [rsp + 16]
    4a38: 48 89 84 24 e8 00 00 00      	mov	qword ptr [rsp + 232], rax
    4a40: 48 c7 84 24 f0 00 00 00 00 00 00 00  	mov	qword ptr [rsp + 240], 0
    4a4c: c7 84 24 f8 00 00 00 00 00 00 00     	mov	dword ptr [rsp + 248], 0
    4a57: 48 8d 8c 24 a0 00 00 00      	lea	rcx, [rsp + 160]
    4a5f: 4c 8d 4c 24 08               	lea	r9, [rsp + 8]
    4a64: 4c 89 ff                     	mov	rdi, r15
    4a67: 4c 89 f6                     	mov	rsi, r14
    4a6a: ba 01 00 00 00               	mov	edx, 1
    4a6f: 45 31 c0                     	xor	r8d, r8d
    4a72: e8 89 d7 ff ff               	call	0x2200 <vkCreateComputePipelines@plt>
    4a77: 85 c0                        	test	eax, eax
    4a79: 0f 85 cb 00 00 00            	jne	0x4b4a <nnCreateVkComputePipeline2MatricesAndOutput+0x2ea>
    4a7f: 4c 89 e7                     	mov	rdi, r12
    4a82: e8 c9 d5 ff ff               	call	0x2050 <free@plt>
    4a87: 48 89 df                     	mov	rdi, rbx
    4a8a: e8 c1 d5 ff ff               	call	0x2050 <free@plt>
    4a8f: 48 8b 34 24                  	mov	rsi, qword ptr [rsp]
    4a93: 4c 89 ff                     	mov	rdi, r15
    4a96: 31 d2                        	xor	edx, edx
    4a98: e8 33 d7 ff ff               	call	0x21d0 <vkDestroyShaderModule@plt>
    4a9d: 48 8b 44 24 08               	mov	rax, qword ptr [rsp + 8]
    4aa2: 48 81 c4 00 01 00 00         	add	rsp, 256
    4aa9: 5b                           	pop	rbx
    4aaa: 41 5c                        	pop	r12
    4aac: 41 5d                        	pop	r13
    4aae: 41 5e                        	pop	r14
    4ab0: 41 5f                        	pop	r15
    4ab2: c3                           	ret
    4ab3: 48 8d 74 24 28               	lea	rsi, [rsp + 40]
    4ab8: 48 8d 4c 24 20               	lea	rcx, [rsp + 32]
    4abd: 4c 89 ff                     	mov	rdi, r15
    4ac0: 31 d2                        	xor	edx, edx
    4ac2: e8 79 d5 ff ff               	call	0x2040 <vkCreateDescriptorSetLayout@plt>
    4ac7: 48 8d 3d 8c 05 00 00         	lea	rdi, [rip + 1420]       # 0x505a <vkUpdateDescriptorSets+0x505a>
    4ace: 89 c6                        	mov	esi, eax
    4ad0: ba 36 00 00 00               	mov	edx, 54
    4ad5: e9 9e 00 00 00               	jmp	0x4b78 <nnCreateVkComputePipeline2MatricesAndOutput+0x318>
    4ada: 48 8d 74 24 70               	lea	rsi, [rsp + 112]
    4adf: 48 8d 4c 24 10               	lea	rcx, [rsp + 16]
    4ae4: 4c 89 ff                     	mov	rdi, r15
    4ae7: 31 d2                        	xor	edx, edx
    4ae9: e8 92 d7 ff ff               	call	0x2280 <vkCreatePipelineLayout@plt>
    4aee: 48 8d 3d 65 05 00 00         	lea	rdi, [rip + 1381]       # 0x505a <vkUpdateDescriptorSets+0x505a>
    4af5: 89 c6                        	mov	esi, eax
    4af7: ba 43 00 00 00               	mov	edx, 67
    4afc: eb 7a                        	jmp	0x4b78 <nnCreateVkComputePipeline2MatricesAndOutput+0x318>
    4afe: 48 8b 05 f3 24 00 00         	mov	rax, qword ptr [rip + 9459] # 0x6ff8 <vkUpdateDescriptorSets+0x6ff8>
    4b05: 48 8b 08                     	mov	rcx, qword ptr [rax]
    4b08: 48 8d 3d 61 07 00 00         	lea	rdi, [rip + 1889]       # 0x5270 <vkUpdateDescriptorSets+0x5270>
    4b0f: be 1f 00 00 00               	mov	esi, 31
    4b14: ba 01 00 00 00               	mov	edx, 1
    4b19: e8 32 d8 ff ff               	call	0x2350 <fwrite@plt>
    4b1e: bf 01 00 00 00               	mov	edi, 1
    4b23: e8 08 d8 ff ff               	call	0x2330 <exit@plt>
    4b28: 48 8d 74 24 48               	lea	rsi, [rsp + 72]
    4b2d: 48 89 e1                     	mov	rcx, rsp
    4b30: 4c 89 ff                     	mov	rdi, r15
    4b33: 31 d2                        	xor	edx, edx
    4b35: e8 76 d7 ff ff               	call	0x22b0 <vkCreateShaderModule@plt>
    4b3a: 48 8d 3d 19 05 00 00         	lea	rdi, [rip + 1305]       # 0x505a <vkUpdateDescriptorSets+0x505a>
    4b41: 89 c6                        	mov	esi, eax
    4b43: ba 56 00 00 00               	mov	edx, 86
    4b48: eb 2e                        	jmp	0x4b78 <nnCreateVkComputePipeline2MatricesAndOutput+0x318>
    4b4a: 48 8d 8c 24 a0 00 00 00      	lea	rcx, [rsp + 160]
    4b52: 4c 8d 4c 24 08               	lea	r9, [rsp + 8]
    4b57: 4c 89 ff                     	mov	rdi, r15
    4b5a: 4c 89 f6                     	mov	rsi, r14
    4b5d: ba 01 00 00 00               	mov	edx, 1
    4b62: 45 31 c0                     	xor	r8d, r8d
    4b65: e8 96 d6 ff ff               	call	0x2200 <vkCreateComputePipelines@plt>
    4b6a: 48 8d 3d e9 04 00 00         	lea	rdi, [rip + 1257]       # 0x505a <vkUpdateDescriptorSets+0x505a>
    4b71: 89 c6                        	mov	esi, eax
    4b73: ba 63 00 00 00               	mov	edx, 99
    4b78: 31 c0                        	xor	eax, eax
    4b7a: e8 81 d5 ff ff               	call	0x2100 <printf@plt>
    4b7f: 31 ff                        	xor	edi, edi
    4b81: e8 aa d7 ff ff               	call	0x2330 <exit@plt>
    4b86: 66 2e 0f 1f 84 00 00 00 00 00	nop	word ptr cs:[rax + rax]

0000000000004b90 <nnCreateVkComputePipelineCorrelate2dValid>:
    4b90: 41 57                        	push	r15
    4b92: 41 56                        	push	r14
    4b94: 41 54                        	push	r12
    4b96: 53                           	push	rbx
    4b97: 48 81 ec 08 01 00 00         	sub	rsp, 264
    4b9e: 49 89 f6                     	mov	r14, rsi
    4ba1: 49 89 ff                     	mov	r15, rdi
    4ba4: bf 48 00 00 00               	mov	edi, 72
    4ba9: e8 92 d6 ff ff               	call	0x2240 <malloc@plt>
    4bae: 48 89 c3                     	mov	rbx, rax
    4bb1: c5 f8 28 05 87 06 00 00      	vmovaps	xmm0, xmmword ptr [rip + 1671] # 0x5240 <vkUpdateDescriptorSets+0x5240>
    4bb9: c5 f8 11 00                  	vmovups	xmmword ptr [rax], xmm0
    4bbd: 48 c7 40 10 00 00 00 00      	mov	qword ptr [rax + 16], 0
    4bc5: c5 f8 28 05 83 06 00 00      	vmovaps	xmm0, xmmword ptr [rip + 1667] # 0x5250 <vkUpdateDescriptorSets+0x5250>
    4bcd: c5 f8 11 40 18               	vmovups	xmmword ptr [rax + 24], xmm0
    4bd2: 48 c7 40 28 00 00 00 00      	mov	qword ptr [rax + 40], 0
    4bda: c5 f8 28 05 7e 06 00 00      	vmovaps	xmm0, xmmword ptr [rip + 1662] # 0x5260 <vkUpdateDescriptorSets+0x5260>
    4be2: c5 f8 11 40 30               	vmovups	xmmword ptr [rax + 48], xmm0
    4be7: 48 c7 40 40 00 00 00 00      	mov	qword ptr [rax + 64], 0
    4bef: c7 44 24 30 20 00 00 00      	mov	dword ptr [rsp + 48], 32
    4bf7: 48 c7 44 24 38 00 00 00 00   	mov	qword ptr [rsp + 56], 0
    4c00: 48 b8 00 00 00 00 03 00 00 00	movabs	rax, 12884901888
    4c0a: 48 89 44 24 40               	mov	qword ptr [rsp + 64], rax
    4c0f: 48 89 5c 24 48               	mov	qword ptr [rsp + 72], rbx
    4c14: 48 8d 74 24 30               	lea	rsi, [rsp + 48]
    4c19: 4c 8d 64 24 28               	lea	r12, [rsp + 40]
    4c1e: 4c 89 ff                     	mov	rdi, r15
    4c21: 31 d2                        	xor	edx, edx
    4c23: 4c 89 e1                     	mov	rcx, r12
    4c26: e8 15 d4 ff ff               	call	0x2040 <vkCreateDescriptorSetLayout@plt>
    4c2b: 85 c0                        	test	eax, eax
    4c2d: 0f 85 b4 01 00 00            	jne	0x4de7 <nnCreateVkComputePipelineCorrelate2dValid+0x257>
    4c33: c7 44 24 78 1e 00 00 00      	mov	dword ptr [rsp + 120], 30
    4c3b: 48 c7 84 24 80 00 00 00 00 00 00 00  	mov	qword ptr [rsp + 128], 0
    4c47: 48 b8 00 00 00 00 01 00 00 00	movabs	rax, 4294967296
    4c51: 48 89 84 24 88 00 00 00      	mov	qword ptr [rsp + 136], rax
    4c59: 4c 89 a4 24 90 00 00 00      	mov	qword ptr [rsp + 144], r12
    4c61: c7 84 24 98 00 00 00 00 00 00 00     	mov	dword ptr [rsp + 152], 0
    4c6c: 48 c7 84 24 a0 00 00 00 00 00 00 00  	mov	qword ptr [rsp + 160], 0
    4c78: 48 8d 74 24 78               	lea	rsi, [rsp + 120]
    4c7d: 48 8d 4c 24 18               	lea	rcx, [rsp + 24]
    4c82: 4c 89 ff                     	mov	rdi, r15
    4c85: 31 d2                        	xor	edx, edx
    4c87: e8 f4 d5 ff ff               	call	0x2280 <vkCreatePipelineLayout@plt>
    4c8c: 85 c0                        	test	eax, eax
    4c8e: 0f 85 7a 01 00 00            	jne	0x4e0e <nnCreateVkComputePipelineCorrelate2dValid+0x27e>
    4c94: 48 8d 3d fa 05 00 00         	lea	rdi, [rip + 1530]       # 0x5295 <vkUpdateDescriptorSets+0x5295>
    4c9b: 48 8d 74 24 20               	lea	rsi, [rsp + 32]
    4ca0: e8 0b d5 ff ff               	call	0x21b0 <nnReadBinaryFile@plt>
    4ca5: 48 85 c0                     	test	rax, rax
    4ca8: 0f 84 84 01 00 00            	je	0x4e32 <nnCreateVkComputePipelineCorrelate2dValid+0x2a2>
    4cae: 49 89 c4                     	mov	r12, rax
    4cb1: c7 44 24 50 10 00 00 00      	mov	dword ptr [rsp + 80], 16
    4cb9: 48 c7 44 24 58 00 00 00 00   	mov	qword ptr [rsp + 88], 0
    4cc2: c7 44 24 60 00 00 00 00      	mov	dword ptr [rsp + 96], 0
    4cca: 48 8b 44 24 20               	mov	rax, qword ptr [rsp + 32]
    4ccf: 48 89 44 24 68               	mov	qword ptr [rsp + 104], rax
    4cd4: 4c 89 64 24 70               	mov	qword ptr [rsp + 112], r12
    4cd9: 48 8d 74 24 50               	lea	rsi, [rsp + 80]
    4cde: 48 8d 4c 24 08               	lea	rcx, [rsp + 8]
    4ce3: 4c 89 ff                     	mov	rdi, r15
    4ce6: 31 d2                        	xor	edx, edx
    4ce8: e8 c3 d5 ff ff               	call	0x22b0 <vkCreateShaderModule@plt>
    4ced: 85 c0                        	test	eax, eax
    4cef: 0f 85 67 01 00 00            	jne	0x4e5c <nnCreateVkComputePipelineCorrelate2dValid+0x2cc>
    4cf5: c7 84 24 a8 00 00 00 1d 00 00 00     	mov	dword ptr [rsp + 168], 29
    4d00: 48 c7 84 24 b0 00 00 00 00 00 00 00  	mov	qword ptr [rsp + 176], 0
    4d0c: c7 84 24 b8 00 00 00 00 00 00 00     	mov	dword ptr [rsp + 184], 0
    4d17: c7 84 24 c0 00 00 00 12 00 00 00     	mov	dword ptr [rsp + 192], 18
    4d22: 48 c7 84 24 c8 00 00 00 00 00 00 00  	mov	qword ptr [rsp + 200], 0
    4d2e: 48 b8 00 00 00 00 20 00 00 00	movabs	rax, 137438953472
    4d38: 48 89 84 24 d0 00 00 00      	mov	qword ptr [rsp + 208], rax
    4d40: 48 8b 44 24 08               	mov	rax, qword ptr [rsp + 8]
    4d45: 48 89 84 24 d8 00 00 00      	mov	qword ptr [rsp + 216], rax
    4d4d: 48 8d 05 3c 05 00 00         	lea	rax, [rip + 1340]       # 0x5290 <vkUpdateDescriptorSets+0x5290>
    4d54: 48 89 84 24 e0 00 00 00      	mov	qword ptr [rsp + 224], rax
    4d5c: 48 c7 84 24 e8 00 00 00 00 00 00 00  	mov	qword ptr [rsp + 232], 0
    4d68: 48 8b 44 24 18               	mov	rax, qword ptr [rsp + 24]
    4d6d: 48 89 84 24 f0 00 00 00      	mov	qword ptr [rsp + 240], rax
    4d75: 48 c7 84 24 f8 00 00 00 00 00 00 00  	mov	qword ptr [rsp + 248], 0
    4d81: c7 84 24 00 01 00 00 00 00 00 00     	mov	dword ptr [rsp + 256], 0
    4d8c: 48 8d 8c 24 a8 00 00 00      	lea	rcx, [rsp + 168]
    4d94: 4c 8d 4c 24 10               	lea	r9, [rsp + 16]
    4d99: 4c 89 ff                     	mov	rdi, r15
    4d9c: 4c 89 f6                     	mov	rsi, r14
    4d9f: ba 01 00 00 00               	mov	edx, 1
    4da4: 45 31 c0                     	xor	r8d, r8d
    4da7: e8 54 d4 ff ff               	call	0x2200 <vkCreateComputePipelines@plt>
    4dac: 85 c0                        	test	eax, eax
    4dae: 0f 85 cc 00 00 00            	jne	0x4e80 <nnCreateVkComputePipelineCorrelate2dValid+0x2f0>
    4db4: 4c 89 e7                     	mov	rdi, r12
    4db7: e8 94 d2 ff ff               	call	0x2050 <free@plt>
    4dbc: 48 89 df                     	mov	rdi, rbx
    4dbf: e8 8c d2 ff ff               	call	0x2050 <free@plt>
    4dc4: 48 8b 74 24 08               	mov	rsi, qword ptr [rsp + 8]
    4dc9: 4c 89 ff                     	mov	rdi, r15
    4dcc: 31 d2                        	xor	edx, edx
    4dce: e8 fd d3 ff ff               	call	0x21d0 <vkDestroyShaderModule@plt>
    4dd3: 48 8b 44 24 10               	mov	rax, qword ptr [rsp + 16]
    4dd8: 48 81 c4 08 01 00 00         	add	rsp, 264
    4ddf: 5b                           	pop	rbx
    4de0: 41 5c                        	pop	r12
    4de2: 41 5e                        	pop	r14
    4de4: 41 5f                        	pop	r15
    4de6: c3                           	ret
    4de7: 48 8d 74 24 30               	lea	rsi, [rsp + 48]
    4dec: 48 8d 4c 24 28               	lea	rcx, [rsp + 40]
    4df1: 4c 89 ff                     	mov	rdi, r15
    4df4: 31 d2                        	xor	edx, edx
    4df6: e8 45 d2 ff ff               	call	0x2040 <vkCreateDescriptorSetLayout@plt>
    4dfb: 48 8d 3d 58 02 00 00         	lea	rdi, [rip + 600]        # 0x505a <vkUpdateDescriptorSets+0x505a>
    4e02: 89 c6                        	mov	esi, eax
    4e04: ba 7d 00 00 00               	mov	edx, 125
    4e09: e9 a0 00 00 00               	jmp	0x4eae <nnCreateVkComputePipelineCorrelate2dValid+0x31e>
    4e0e: 48 8d 74 24 78               	lea	rsi, [rsp + 120]
    4e13: 48 8d 4c 24 18               	lea	rcx, [rsp + 24]
    4e18: 4c 89 ff                     	mov	rdi, r15
    4e1b: 31 d2                        	xor	edx, edx
    4e1d: e8 5e d4 ff ff               	call	0x2280 <vkCreatePipelineLayout@plt>
    4e22: 48 8d 3d 31 02 00 00         	lea	rdi, [rip + 561]        # 0x505a <vkUpdateDescriptorSets+0x505a>
    4e29: 89 c6                        	mov	esi, eax
    4e2b: ba 8a 00 00 00               	mov	edx, 138
    4e30: eb 7c                        	jmp	0x4eae <nnCreateVkComputePipelineCorrelate2dValid+0x31e>
    4e32: 48 8b 05 bf 21 00 00         	mov	rax, qword ptr [rip + 8639] # 0x6ff8 <vkUpdateDescriptorSets+0x6ff8>
    4e39: 48 8b 08                     	mov	rcx, qword ptr [rax]
    4e3c: 48 8d 3d 2d 04 00 00         	lea	rdi, [rip + 1069]       # 0x5270 <vkUpdateDescriptorSets+0x5270>
    4e43: be 1f 00 00 00               	mov	esi, 31
    4e48: ba 01 00 00 00               	mov	edx, 1
    4e4d: e8 fe d4 ff ff               	call	0x2350 <fwrite@plt>
    4e52: bf 01 00 00 00               	mov	edi, 1
    4e57: e8 d4 d4 ff ff               	call	0x2330 <exit@plt>
    4e5c: 48 8d 74 24 50               	lea	rsi, [rsp + 80]
    4e61: 48 8d 4c 24 08               	lea	rcx, [rsp + 8]
    4e66: 4c 89 ff                     	mov	rdi, r15
    4e69: 31 d2                        	xor	edx, edx
    4e6b: e8 40 d4 ff ff               	call	0x22b0 <vkCreateShaderModule@plt>
    4e70: 48 8d 3d e3 01 00 00         	lea	rdi, [rip + 483]        # 0x505a <vkUpdateDescriptorSets+0x505a>
    4e77: 89 c6                        	mov	esi, eax
    4e79: ba 9d 00 00 00               	mov	edx, 157
    4e7e: eb 2e                        	jmp	0x4eae <nnCreateVkComputePipelineCorrelate2dValid+0x31e>
    4e80: 48 8d 8c 24 a8 00 00 00      	lea	rcx, [rsp + 168]
    4e88: 4c 8d 4c 24 10               	lea	r9, [rsp + 16]
    4e8d: 4c 89 ff                     	mov	rdi, r15
    4e90: 4c 89 f6                     	mov	rsi, r14
    4e93: ba 01 00 00 00               	mov	edx, 1
    4e98: 45 31 c0                     	xor	r8d, r8d
    4e9b: e8 60 d3 ff ff               	call	0x2200 <vkCreateComputePipelines@plt>
    4ea0: 48 8d 3d b3 01 00 00         	lea	rdi, [rip + 435]        # 0x505a <vkUpdateDescriptorSets+0x505a>
    4ea7: 89 c6                        	mov	esi, eax
    4ea9: ba aa 00 00 00               	mov	edx, 170
    4eae: 31 c0                        	xor	eax, eax
    4eb0: e8 4b d2 ff ff               	call	0x2100 <printf@plt>
    4eb5: 31 ff                        	xor	edi, edi
    4eb7: e8 74 d4 ff ff               	call	0x2330 <exit@plt>
    4ebc: 0f 1f 40 00                  	nop	dword ptr [rax]

0000000000004ec0 <nnSaveVkPipelineCache>:
    4ec0: 41 57                        	push	r15
    4ec2: 41 56                        	push	r14
    4ec4: 53                           	push	rbx
    4ec5: 48 83 ec 10                  	sub	rsp, 16
    4ec9: 49 89 f6                     	mov	r14, rsi
    4ecc: 49 89 ff                     	mov	r15, rdi
    4ecf: 48 8d 54 24 08               	lea	rdx, [rsp + 8]
    4ed4: 31 c9                        	xor	ecx, ecx
    4ed6: e8 25 d4 ff ff               	call	0x2300 <vkGetPipelineCacheData@plt>
    4edb: 85 c0                        	test	eax, eax
    4edd: 75 5b                        	jne	0x4f3a <nnSaveVkPipelineCache+0x7a>
    4edf: 48 8b 7c 24 08               	mov	rdi, qword ptr [rsp + 8]
    4ee4: e8 57 d3 ff ff               	call	0x2240 <malloc@plt>
    4ee9: 48 89 c3                     	mov	rbx, rax
    4eec: 48 8d 54 24 08               	lea	rdx, [rsp + 8]
    4ef1: 4c 89 ff                     	mov	rdi, r15
    4ef4: 4c 89 f6                     	mov	rsi, r14
    4ef7: 48 89 c1                     	mov	rcx, rax
    4efa: e8 01 d4 ff ff               	call	0x2300 <vkGetPipelineCacheData@plt>
    4eff: 85 c0                        	test	eax, eax
    4f01: 75 59                        	jne	0x4f5c <nnSaveVkPipelineCache+0x9c>
    4f03: 48 8b 54 24 08               	mov	rdx, qword ptr [rsp + 8]
    4f08: 48 8d 3d a5 03 00 00         	lea	rdi, [rip + 933]        # 0x52b4 <vkUpdateDescriptorSets+0x52b4>
    4f0f: 48 89 de                     	mov	rsi, rbx
    4f12: e8 f9 d3 ff ff               	call	0x2310 <nnWriteBinaryFile@plt>
    4f17: 85 c0                        	test	eax, eax
    4f19: 75 64                        	jne	0x4f7f <nnSaveVkPipelineCache+0xbf>
    4f1b: 4c 89 ff                     	mov	rdi, r15
    4f1e: 4c 89 f6                     	mov	rsi, r14
    4f21: 31 d2                        	xor	edx, edx
    4f23: e8 48 d2 ff ff               	call	0x2170 <vkDestroyPipelineCache@plt>
    4f28: 48 89 df                     	mov	rdi, rbx
    4f2b: e8 20 d1 ff ff               	call	0x2050 <free@plt>
    4f30: 48 83 c4 10                  	add	rsp, 16
    4f34: 5b                           	pop	rbx
    4f35: 41 5e                        	pop	r14
    4f37: 41 5f                        	pop	r15
    4f39: c3                           	ret
    4f3a: 48 8d 54 24 08               	lea	rdx, [rsp + 8]
    4f3f: 4c 89 ff                     	mov	rdi, r15
    4f42: 4c 89 f6                     	mov	rsi, r14
    4f45: 31 c9                        	xor	ecx, ecx
    4f47: e8 b4 d3 ff ff               	call	0x2300 <vkGetPipelineCacheData@plt>
    4f4c: 48 8d 3d 07 01 00 00         	lea	rdi, [rip + 263]        # 0x505a <vkUpdateDescriptorSets+0x505a>
    4f53: 89 c6                        	mov	esi, eax
    4f55: ba b4 00 00 00               	mov	edx, 180
    4f5a: eb 45                        	jmp	0x4fa1 <nnSaveVkPipelineCache+0xe1>
    4f5c: 48 8d 54 24 08               	lea	rdx, [rsp + 8]
    4f61: 4c 89 ff                     	mov	rdi, r15
    4f64: 4c 89 f6                     	mov	rsi, r14
    4f67: 48 89 d9                     	mov	rcx, rbx
    4f6a: e8 91 d3 ff ff               	call	0x2300 <vkGetPipelineCacheData@plt>
    4f6f: 48 8d 3d e4 00 00 00         	lea	rdi, [rip + 228]        # 0x505a <vkUpdateDescriptorSets+0x505a>
    4f76: 89 c6                        	mov	esi, eax
    4f78: ba b7 00 00 00               	mov	edx, 183
    4f7d: eb 22                        	jmp	0x4fa1 <nnSaveVkPipelineCache+0xe1>
    4f7f: 48 8b 54 24 08               	mov	rdx, qword ptr [rsp + 8]
    4f84: 48 8d 3d 29 03 00 00         	lea	rdi, [rip + 809]        # 0x52b4 <vkUpdateDescriptorSets+0x52b4>
    4f8b: 48 89 de                     	mov	rsi, rbx
    4f8e: e8 7d d3 ff ff               	call	0x2310 <nnWriteBinaryFile@plt>
    4f93: 48 8d 3d c0 00 00 00         	lea	rdi, [rip + 192]        # 0x505a <vkUpdateDescriptorSets+0x505a>
    4f9a: 89 c6                        	mov	esi, eax
    4f9c: ba b9 00 00 00               	mov	edx, 185
    4fa1: 31 c0                        	xor	eax, eax
    4fa3: e8 58 d1 ff ff               	call	0x2100 <printf@plt>
    4fa8: 31 ff                        	xor	edi, edi
    4faa: e8 81 d3 ff ff               	call	0x2330 <exit@plt>

Disassembly of section .fini:

0000000000004fb0 <_fini>:
    4fb0: f3 0f 1e fa                  	endbr64
    4fb4: 48 83 ec 08                  	sub	rsp, 8
    4fb8: 48 83 c4 08                  	add	rsp, 8
    4fbc: c3                           	ret

Disassembly of section .rodata:

0000000000005000 <.rodata>:
		...
    5008: ff ff                        	<unknown>
    500a: ff ff                        	<unknown>
    500c: ff ff                        	<unknown>
    500e: ff ff                        	<unknown>
		...
    5018: 01 00                        	add	dword ptr [rax], eax
    501a: 00 00                        	add	byte ptr [rax], al
    501c: 07                           	<unknown>
    501d: 00 00                        	add	byte ptr [rax], al
    501f: 00 01                        	add	byte ptr [rcx], al
    5021: 00 00                        	add	byte ptr [rax], al
    5023: 00 00                        	add	byte ptr [rax], al
    5025: 00 00                        	add	byte ptr [rax], al
    5027: 00 01                        	add	byte ptr [rcx], al
    5029: 00 00                        	add	byte ptr [rax], al
    502b: 00 07                        	add	byte ptr [rdi], al
    502d: 00 00                        	add	byte ptr [rax], al
    502f: 00 02                        	add	byte ptr [rdx], al
    5031: 00 00                        	add	byte ptr [rax], al
    5033: 00 00                        	add	byte ptr [rax], al
    5035: 00 00                        	add	byte ptr [rax], al
    5037: 00 01                        	add	byte ptr [rcx], al
    5039: 00 00                        	add	byte ptr [rax], al
    503b: 00 07                        	add	byte ptr [rdi], al
    503d: 00 00                        	add	byte ptr [rax], al
    503f: 00 72 6f                     	add	byte ptr [rdx + 111], dh
    5042: 77 73                        	ja	0x50b7 <.rodata+0xb7>
    5044: 3a 20                        	cmp	ah, byte ptr [rax]
    5046: 25 64 2c 20 63               	and	eax, 1663052900
    504b: 6f                           	outsd	dx, dword ptr [rsi]
    504c: 6c                           	insb	byte ptr es:[rdi], dx
    504d: 75 6d                        	jne	0x50bc <.rodata+0xbc>
    504f: 6e                           	outsb	dx, byte ptr [rsi]
    5050: 73 3a                        	jae	0x508c <.rodata+0x8c>
    5052: 20 25 64 00 25 66            	and	byte ptr [rip + 1713700964], ah # 0x662550bc <completed.0+0x6624deac>
    5058: 20 00                        	and	byte ptr [rax], al
    505a: 72 65                        	jb	0x50c1 <.rodata+0xc1>
    505c: 73 75                        	jae	0x50d3 <.rodata+0xd3>
    505e: 6c                           	insb	byte ptr es:[rdi], dx
    505f: 74 20                        	je	0x5081 <.rodata+0x81>
    5061: 3d 20 25 64 2c               	cmp	eax, 744760608
    5066: 20 6c 69 6e                  	and	byte ptr [rcx + 2*rbp + 110], ch
    506a: 65 20 3d 20 25 64 0a         	and	byte ptr gs:[rip + 174335264], bh
    5071: 00 00                        	add	byte ptr [rax], al
    5073: 00 00                        	add	byte ptr [rax], al
    5075: 00 00                        	add	byte ptr [rax], al
    5077: 00 2a                        	add	byte ptr [rdx], ch
		...
    5085: 00 00                        	add	byte ptr [rax], al
    5087: 00 01                        	add	byte ptr [rcx], al
		...
    5095: 00 00                        	add	byte ptr [rax], al
    5097: 00 72 62                     	add	byte ptr [rdx + 98], dh
    509a: 00 5b 57                     	add	byte ptr [rbx + 87], bl
    509d: 41 52                        	push	r10
    509f: 4e 49                        	<unknown>
    50a1: 4e 47                        	<unknown>
    50a3: 5d                           	pop	rbp
    50a4: 3a 20                        	cmp	ah, byte ptr [rax]
    50a6: 46 61                        	<unknown>
    50a8: 69 6c 65 64 20 74 6f 20      	imul	ebp, dword ptr [rbp + 2*riz + 100], 544175136
    50b0: 6f                           	outsd	dx, dword ptr [rsi]
    50b1: 70 65                        	jo	0x5118 <.rodata+0x118>
    50b3: 6e                           	outsb	dx, byte ptr [rsi]
    50b4: 20 66 69                     	and	byte ptr [rsi + 105], ah
    50b7: 6c                           	insb	byte ptr es:[rdi], dx
    50b8: 65 20 25 73 0a 00 61         	and	byte ptr gs:[rip + 1627392627], ah
    50bf: 62                           	<unknown>
    50c0: 2b 00                        	sub	eax, dword ptr [rax]
    50c2: 43 4e                        	<unknown>
    50c4: 4e 20 6c 69 62               	and	byte ptr [rcx + 2*r13 + 98], r13b
    50c9: 72 61                        	jb	0x512c <.rodata+0x12c>
    50cb: 72 79                        	jb	0x5146 <.rodata+0x146>
    50cd: 00 6e 6f                     	add	byte ptr [rsi + 111], ch
    50d0: 6e                           	outsb	dx, byte ptr [rsi]
    50d1: 65 00 69 3a                  	add	byte ptr gs:[rcx + 58], ch
    50d5: 20 25 64 2c 20 65            	and	byte ptr [rip + 1696607332], ah # 0x65207d3f <completed.0+0x65200b2f>
    50db: 78 74                        	js	0x5151 <.rodata+0x151>
    50dd: 65 6e                        	outsb	dx, byte ptr gs:[rsi]
    50df: 73 69                        	jae	0x514a <.rodata+0x14a>
    50e1: 6f                           	outsd	dx, dword ptr [rsi]
    50e2: 6e                           	outsb	dx, byte ptr [rsi]
    50e3: 3a 20                        	cmp	ah, byte ptr [rax]
    50e5: 25 73 0a 00 50               	and	eax, 1342179955
    50ea: 68 79 73 69 63               	push	1667855225
    50ef: 61                           	<unknown>
    50f0: 6c                           	insb	byte ptr es:[rdi], dx
    50f1: 20 44 65 76                  	and	byte ptr [rbp + 2*riz + 118], al
    50f5: 69 63 65 20 69 73 20         	imul	esp, dword ptr [rbx + 101], 544434464
    50fc: 6e                           	outsb	dx, byte ptr [rsi]
    50fd: 6f                           	outsd	dx, dword ptr [rsi]
    50fe: 74 20                        	je	0x5120 <.rodata+0x120>
    5100: 66 6f                        	outsw	dx, word ptr [rsi]
    5102: 75 6e                        	jne	0x5172 <.rodata+0x172>
    5104: 64 20 63 61                  	and	byte ptr fs:[rbx + 97], ah
    5108: 6e                           	outsb	dx, byte ptr [rsi]
    5109: 27                           	<unknown>
    510a: 74 20                        	je	0x512c <.rodata+0x12c>
    510c: 75 73                        	jne	0x5181 <.rodata+0x181>
    510e: 65 20 6e 6e                  	and	byte ptr gs:[rsi + 110], ch
    5112: 5f                           	pop	rdi
    5113: 62                           	<unknown>
    5114: 61                           	<unknown>
    5115: 63 6b 65                     	movsxd	ebp, dword ptr [rbx + 101]
    5118: 6e                           	outsb	dx, byte ptr [rsi]
    5119: 64 00 56 4b                  	add	byte ptr fs:[rsi + 75], dl
    511d: 5f                           	pop	rdi
    511e: 4c 41                        	<unknown>
    5120: 59                           	pop	rcx
    5121: 45 52                        	push	r10
    5123: 5f                           	pop	rdi
    5124: 4b 48                        	rex64
    5126: 52                           	push	rdx
    5127: 4f 4e                        	<unknown>
    5129: 4f 53                        	push	r11
    512b: 5f                           	pop	rdi
    512c: 76 61                        	jbe	0x518f <.rodata+0x18f>
    512e: 6c                           	insb	byte ptr es:[rdi], dx
    512f: 69 64 61 74 69 6f 6e 00      	imul	esp, dword ptr [rcx + 2*riz + 116], 7237481
    5137: 56                           	push	rsi
    5138: 4b 5f                        	pop	r15
    513a: 4b 48                        	rex64
    513c: 52                           	push	rdx
    513d: 5f                           	pop	rdi
    513e: 67 65 74 5f                  	je	0x51a1 <.rodata+0x1a1>
    5142: 70 68                        	jo	0x51ac <.rodata+0x1ac>
    5144: 79 73                        	jns	0x51b9 <.rodata+0x1b9>
    5146: 69 63 61 6c 5f 64 65         	imul	esp, dword ptr [rbx + 97], 1701076844
    514d: 76 69                        	jbe	0x51b8 <.rodata+0x1b8>
    514f: 63 65 5f                     	movsxd	esp, dword ptr [rbp + 95]
    5152: 70 72                        	jo	0x51c6 <.rodata+0x1c6>
    5154: 6f                           	outsd	dx, dword ptr [rsi]
    5155: 70 65                        	jo	0x51bc <.rodata+0x1bc>
    5157: 72 74                        	jb	0x51cd <.rodata+0x1cd>
    5159: 69 65 73 32 00 56 4b         	imul	esp, dword ptr [rbp + 115], 1263927346
    5160: 5f                           	pop	rdi
    5161: 45 58                        	pop	r8
    5163: 54                           	push	rsp
    5164: 5f                           	pop	rdi
    5165: 64 65 62 75 67 5f 75         	<unknown>
    516c: 74 69                        	je	0x51d7 <.rodata+0x1d7>
    516e: 6c                           	insb	byte ptr es:[rdi], dx
    516f: 73 00                        	jae	0x5171 <.rodata+0x171>
    5171: 56                           	push	rsi
    5172: 4b 5f                        	pop	r15
    5174: 4b 48                        	rex64
    5176: 52                           	push	rdx
    5177: 5f                           	pop	rdi
    5178: 73 68                        	jae	0x51e2 <.rodata+0x1e2>
    517a: 61                           	<unknown>
    517b: 64 65 72 5f                  	jb	0x51de <.rodata+0x1de>
    517f: 6e                           	outsb	dx, byte ptr [rsi]
    5180: 6f                           	outsd	dx, dword ptr [rsi]
    5181: 6e                           	outsb	dx, byte ptr [rsi]
    5182: 5f                           	pop	rdi
    5183: 73 65                        	jae	0x51ea <.rodata+0x1ea>
    5185: 6d                           	insd	dword ptr es:[rdi], dx
    5186: 61                           	<unknown>
    5187: 6e                           	outsb	dx, byte ptr [rsi]
    5188: 74 69                        	je	0x51f3 <.rodata+0x1f3>
    518a: 63 5f 69                     	movsxd	ebx, dword ptr [rdi + 105]
    518d: 6e                           	outsb	dx, byte ptr [rsi]
    518e: 66 6f                        	outsw	dx, word ptr [rsi]
    5190: 00 56 4b                     	add	byte ptr [rsi + 75], dl
    5193: 5f                           	pop	rdi
    5194: 45 58                        	pop	r8
    5196: 54                           	push	rsp
    5197: 5f                           	pop	rdi
    5198: 62 75 66 66 65               	<unknown>
    519d: 72 5f                        	jb	0x51fe <.rodata+0x1fe>
    519f: 64 65 76 69                  	jbe	0x520c <.rodata+0x20c>
    51a3: 63 65 5f                     	movsxd	esp, dword ptr [rbp + 95]
    51a6: 61                           	<unknown>
    51a7: 64 64 72 65                  	jb	0x5210 <.rodata+0x210>
    51ab: 73 73                        	jae	0x5220 <.rodata+0x220>
    51ad: 00 76 6b                     	add	byte ptr [rsi + 107], dh
    51b0: 44 65                        	gs
    51b2: 73 74                        	jae	0x5228 <.rodata+0x228>
    51b4: 72 6f                        	jb	0x5225 <.rodata+0x225>
    51b6: 79 44                        	jns	0x51fc <.rodata+0x1fc>
    51b8: 65 62 75 67 55 74            	<unknown>
    51be: 69 6c 73 4d 65 73 73 65      	imul	ebp, dword ptr [rbx + 2*rsi + 77], 1702064997
    51c6: 6e                           	outsb	dx, byte ptr [rsi]
    51c7: 67 65 72 45                  	jb	0x5210 <.rodata+0x210>
    51cb: 58                           	pop	rax
    51cc: 54                           	push	rsp
    51cd: 00 76 61                     	add	byte ptr [rsi + 97], dh
    51d0: 6c                           	insb	byte ptr es:[rdi], dx
    51d1: 69 64 61 74 69 6f 6e 20      	imul	esp, dword ptr [rcx + 2*riz + 116], 544108393
    51d9: 6c                           	insb	byte ptr es:[rdi], dx
    51da: 61                           	<unknown>
    51db: 79 65                        	jns	0x5242 <.rodata+0x242>
    51dd: 72 3a                        	jb	0x5219 <.rodata+0x219>
    51df: 20 25 73 2e 20 53            	and	byte ptr [rip + 1394617971], ah # 0x53208058 <completed.0+0x53200e48>
    51e5: 65 76 65                     	jbe	0x524d <.rodata+0x24d>
    51e8: 72 69                        	jb	0x5253 <.rodata+0x253>
    51ea: 74 79                        	je	0x5265 <.rodata+0x265>
    51ec: 3a 20                        	cmp	ah, byte ptr [rax]
    51ee: 25 73 0a 00 56               	and	eax, 1442843251
    51f3: 45 52                        	push	r10
    51f5: 42 4f                        	<unknown>
    51f7: 53                           	push	rbx
    51f8: 45 00 49 4e                  	add	byte ptr [r9 + 78], r9b
    51fc: 46 4f                        	<unknown>
    51fe: 00 57 41                     	add	byte ptr [rdi + 65], dl
    5201: 52                           	push	rdx
    5202: 4e 49                        	<unknown>
    5204: 4e 47                        	<unknown>
    5206: 00 45 52                     	add	byte ptr [rbp + 82], al
    5209: 52                           	push	rdx
    520a: 4f 52                        	push	r10
    520c: 00 55 4e                     	add	byte ptr [rbp + 78], dl
    520f: 4b 4e                        	<unknown>
    5211: 4f 57                        	push	r15
    5213: 4e 00 76 6b                  	add	byte ptr [rsi + 107], r14b
    5217: 43 72 65                     	jb	0x527f <.rodata+0x27f>
    521a: 61                           	<unknown>
    521b: 74 65                        	je	0x5282 <.rodata+0x282>
    521d: 44 65                        	gs
    521f: 62 75 67 55 74               	<unknown>
    5224: 69 6c 73 4d 65 73 73 65      	imul	ebp, dword ptr [rbx + 2*rsi + 77], 1702064997
    522c: 6e                           	outsb	dx, byte ptr [rsi]
    522d: 67 65 72 45                  	jb	0x5276 <.rodata+0x276>
    5231: 58                           	pop	rax
    5232: 54                           	push	rsp
		...
    5243: 00 07                        	add	byte ptr [rdi], al
    5245: 00 00                        	add	byte ptr [rax], al
    5247: 00 01                        	add	byte ptr [rcx], al
    5249: 00 00                        	add	byte ptr [rax], al
    524b: 00 20                        	add	byte ptr [rax], ah
    524d: 00 00                        	add	byte ptr [rax], al
    524f: 00 01                        	add	byte ptr [rcx], al
    5251: 00 00                        	add	byte ptr [rax], al
    5253: 00 07                        	add	byte ptr [rdi], al
    5255: 00 00                        	add	byte ptr [rax], al
    5257: 00 01                        	add	byte ptr [rcx], al
    5259: 00 00                        	add	byte ptr [rax], al
    525b: 00 20                        	add	byte ptr [rax], ah
    525d: 00 00                        	add	byte ptr [rax], al
    525f: 00 02                        	add	byte ptr [rdx], al
    5261: 00 00                        	add	byte ptr [rax], al
    5263: 00 07                        	add	byte ptr [rdi], al
    5265: 00 00                        	add	byte ptr [rax], al
    5267: 00 01                        	add	byte ptr [rcx], al
    5269: 00 00                        	add	byte ptr [rax], al
    526b: 00 20                        	add	byte ptr [rax], ah
    526d: 00 00                        	add	byte ptr [rax], al
    526f: 00 5b 46                     	add	byte ptr [rbx + 70], bl
    5272: 41 54                        	push	r12
    5274: 41 4c                        	<unknown>
    5276: 5d                           	pop	rbp
    5277: 3a 20                        	cmp	ah, byte ptr [rax]
    5279: 46 61                        	<unknown>
    527b: 69 6c 65 64 20 74 6f 20      	imul	ebp, dword ptr [rbp + 2*riz + 100], 544175136
    5283: 6c                           	insb	byte ptr es:[rdi], dx
    5284: 6f                           	outsd	dx, dword ptr [rsi]
    5285: 61                           	<unknown>
    5286: 64 20 73 68                  	and	byte ptr fs:[rbx + 104], dh
    528a: 61                           	<unknown>
    528b: 64 65 72 2e                  	jb	0x52bd <.rodata+0x2bd>
    528f: 00 6d 61                     	add	byte ptr [rbp + 97], ch
    5292: 69 6e 00 73 68 61 64         	imul	ebp, dword ptr [rsi], 1684105331
    5299: 65 72 73                     	jb	0x530f <__GNU_EH_FRAME_HDR+0x37>
    529c: 2f                           	<unknown>
    529d: 63 6f 72                     	movsxd	ebp, dword ptr [rdi + 114]
    52a0: 72 65                        	jb	0x5307 <__GNU_EH_FRAME_HDR+0x2f>
    52a2: 6c                           	insb	byte ptr es:[rdi], dx
    52a3: 61                           	<unknown>
    52a4: 74 65                        	je	0x530b <__GNU_EH_FRAME_HDR+0x33>
    52a6: 32 64 5f 76                  	xor	ah, byte ptr [rdi + 2*rbx + 118]
    52aa: 61                           	<unknown>
    52ab: 6c                           	insb	byte ptr es:[rdi], dx
    52ac: 69 64 32 2e 73 70 76 00      	imul	esp, dword ptr [rdx + rsi + 46], 7762035
    52b4: 70 69                        	jo	0x531f <__GNU_EH_FRAME_HDR+0x47>
    52b6: 70 65                        	jo	0x531d <__GNU_EH_FRAME_HDR+0x45>
    52b8: 6c                           	insb	byte ptr es:[rdi], dx
    52b9: 69 6e 65 5f 63 61 63         	imul	ebp, dword ptr [rsi + 101], 1667326815
    52c0: 68 65 73 2f 70               	push	1882157925
    52c5: 69 70 65 6c 69 6e 65         	imul	esi, dword ptr [rax + 101], 1701734764
    52cc: 5f                           	pop	rdi
    52cd: 63 61 63                     	movsxd	esp, dword ptr [rcx + 99]
    52d0: 68 65 2e 64 61               	push	1633955429
    52d5: 74 61                        	je	0x5338 <__GNU_EH_FRAME_HDR+0x60>
    52d7: 00                           	<unknown>

Disassembly of section .eh_frame_hdr:

00000000000052d8 <__GNU_EH_FRAME_HDR>:
    52d8: 01 1b                        	add	dword ptr [rbx], ebx
    52da: 03 3b                        	add	edi, dword ptr [rbx]
    52dc: d4                           	<unknown>
    52dd: 00 00                        	add	byte ptr [rax], al
    52df: 00 19                        	add	byte ptr [rcx], bl
    52e1: 00 00                        	add	byte ptr [rax], al
    52e3: 00 48 cd                     	add	byte ptr [rax - 51], cl
    52e6: ff ff                        	<unknown>
    52e8: f0                           	lock
    52e9: 00 00                        	add	byte ptr [rax], al
    52eb: 00 b8 d0 ff ff 18            	add	byte ptr [rax + 419430352], bh
    52f1: 01 00                        	add	dword ptr [rax], eax
    52f3: 00 88 d1 ff ff 30            	add	byte ptr [rax + 822083537], cl
    52f9: 01 00                        	add	dword ptr [rax], eax
    52fb: 00 d8                        	add	al, bl
    52fd: de ff                        	fdivp	st(7), st
    52ff: ff 60 01                     	jmp	qword ptr [rax + 1]
    5302: 00 00                        	add	byte ptr [rax], al
    5304: 88 e0                        	mov	al, ah
    5306: ff ff                        	<unknown>
    5308: a4                           	movsb	byte ptr es:[rdi], byte ptr [rsi]
    5309: 01 00                        	add	dword ptr [rax], eax
    530b: 00 98 eb ff ff d8            	add	byte ptr [rax - 654311445], bl
    5311: 01 00                        	add	dword ptr [rax], eax
    5313: 00 48 ec                     	add	byte ptr [rax - 20], cl
    5316: ff ff                        	<unknown>
    5318: 14 02                        	adc	al, 2
    531a: 00 00                        	add	byte ptr [rax], al
    531c: b8 ec ff ff 50               	mov	eax, 1358954476
    5321: 02 00                        	add	al, byte ptr [rax]
    5323: 00 c8                        	add	al, cl
    5325: ec                           	in	al, dx
    5326: ff ff                        	<unknown>
    5328: 68 02 00 00 b8               	push	-1207959550
    532d: ee                           	out	dx, al
    532e: ff ff                        	<unknown>
    5330: 98                           	cwde
    5331: 02 00                        	add	al, byte ptr [rax]
    5333: 00 58 ef                     	add	byte ptr [rax - 17], bl
    5336: ff ff                        	<unknown>
    5338: c4 02 00 00                  	<unknown>
    533c: d8 f0                        	fdiv	st, st(0)
    533e: ff ff                        	<unknown>
    5340: 10 03                        	adc	byte ptr [rbx], al
    5342: 00 00                        	add	byte ptr [rax], al
    5344: 78 f1                        	js	0x5337 <__GNU_EH_FRAME_HDR+0x5f>
    5346: ff ff                        	<unknown>
    5348: 3c 03                        	cmp	al, 3
    534a: 00 00                        	add	byte ptr [rax], al
    534c: 08 f2                        	or	dl, dh
    534e: ff ff                        	<unknown>
    5350: 6c                           	insb	byte ptr es:[rdi], dx
    5351: 03 00                        	add	eax, dword ptr [rax]
    5353: 00 48 f2                     	add	byte ptr [rax - 14], cl
    5356: ff ff                        	<unknown>
    5358: 8c 03                        	mov	word ptr [rbx], es
    535a: 00 00                        	add	byte ptr [rax], al
    535c: 98                           	cwde
    535d: f2 ff ff                     	<unknown>
    5360: a0 03 00 00 78 f3 ff ff c0   	movabs	al, byte ptr [-4539628478210768893]
    5369: 03 00                        	add	eax, dword ptr [rax]
    536b: 00 98 f3 ff ff d8            	add	byte ptr [rax - 654311437], bl
    5371: 03 00                        	add	eax, dword ptr [rax]
    5373: 00 d8                        	add	al, bl
    5375: f3 ff ff                     	<unknown>
    5378: 10 04 00                     	adc	byte ptr [rax + rax], al
    537b: 00 38                        	add	byte ptr [rax], bh
    537d: f4                           	hlt
    537e: ff ff                        	<unknown>
    5380: 40 04 00                     	add	al, 0
    5383: 00 a8 f4 ff ff 58            	add	byte ptr [rax + 1493172212], ch
    5389: 04 00                        	add	al, 0
    538b: 00 d8                        	add	al, bl
    538d: f4                           	hlt
    538e: ff ff                        	<unknown>
    5390: 6c                           	insb	byte ptr es:[rdi], dx
    5391: 04 00                        	add	al, 0
    5393: 00 88 f5 ff ff 98            	add	byte ptr [rax - 1728053259], cl
    5399: 04 00                        	add	al, 0
    539b: 00 b8 f8 ff ff e0            	add	byte ptr [rax - 520093704], bh
    53a1: 04 00                        	add	al, 0
    53a3: 00 e8                        	add	al, ch
    53a5: fb                           	sti
    53a6: ff ff                        	<unknown>
    53a8: 20 05                        	<unknown>
    53aa: 00 00                        	add	byte ptr [rax], al

Disassembly of section .eh_frame:

00000000000053b0 <.eh_frame>:
    53b0: 14 00                        	adc	al, 0
    53b2: 00 00                        	add	byte ptr [rax], al
    53b4: 00 00                        	add	byte ptr [rax], al
    53b6: 00 00                        	add	byte ptr [rax], al
    53b8: 01 7a 52                     	add	dword ptr [rdx + 82], edi
    53bb: 00 01                        	add	byte ptr [rcx], al
    53bd: 78 10                        	js	0x53cf <.eh_frame+0x1f>
    53bf: 01 1b                        	add	dword ptr [rbx], ebx
    53c1: 0c 07                        	or	al, 7
    53c3: 08 90 01 00 00 24            	or	byte ptr [rax + 603979777], dl
    53c9: 00 00                        	add	byte ptr [rax], al
    53cb: 00 1c 00                     	add	byte ptr [rax + rax], bl
    53ce: 00 00                        	add	byte ptr [rax], al
    53d0: 50                           	push	rax
    53d1: cc                           	int3
    53d2: ff ff                        	<unknown>
    53d4: 70 03                        	jo	0x53d9 <.eh_frame+0x29>
    53d6: 00 00                        	add	byte ptr [rax], al
    53d8: 00 0e                        	add	byte ptr [rsi], cl
    53da: 10 46 0e                     	adc	byte ptr [rsi + 14], al
    53dd: 18 4a 0f                     	sbb	byte ptr [rdx + 15], cl
    53e0: 0b 77 08                     	or	esi, dword ptr [rdi + 8]
    53e3: 80 00 3f                     	add	byte ptr [rax], 63
    53e6: 1a 3b                        	sbb	bh, byte ptr [rbx]
    53e8: 2a 33                        	sub	dh, byte ptr [rbx]
    53ea: 24 22                        	and	al, 34
    53ec: 00 00                        	add	byte ptr [rax], al
    53ee: 00 00                        	add	byte ptr [rax], al
    53f0: 14 00                        	adc	al, 0
    53f2: 00 00                        	add	byte ptr [rax], al
    53f4: 44 00 00                     	add	byte ptr [rax], r8b
    53f7: 00 98 cf ff ff 08            	add	byte ptr [rax + 150994895], bl
		...
    5405: 00 00                        	add	byte ptr [rax], al
    5407: 00 2c 00                     	add	byte ptr [rax + rax], ch
    540a: 00 00                        	add	byte ptr [rax], al
    540c: 5c                           	pop	rsp
    540d: 00 00                        	add	byte ptr [rax], al
    540f: 00 50 d0                     	add	byte ptr [rax - 48], dl
    5412: ff ff                        	<unknown>
    5414: 4f 0d 00 00 00 41            	or	rax, 1090519040
    541a: 0e                           	<unknown>
    541b: 10 86 02 43 0d 06            	adc	byte ptr [rsi + 101532418], al
    5421: 54                           	push	rsp
    5422: 83 07 8c                     	add	dword ptr [rdi], -116
    5425: 06                           	<unknown>
    5426: 8d 05 8e 04 8f 03            	lea	eax, [rip + 59704462]   # 0x38f58ba <completed.0+0x38ee6aa>
    542c: 03 f0                        	add	esi, eax
    542e: 09 0c 07                     	or	dword ptr [rdi + rax], ecx
    5431: 08 41 0c                     	or	byte ptr [rcx + 12], al
    5434: 06                           	<unknown>
    5435: 10 00                        	adc	byte ptr [rax], al
    5437: 00 40 00                     	add	byte ptr [rax], al
    543a: 00 00                        	add	byte ptr [rax], al
    543c: 8c 00                        	mov	word ptr [rax], es
    543e: 00 00                        	add	byte ptr [rax], al
    5440: 70 dd                        	jo	0x541f <.eh_frame+0x6f>
    5442: ff ff                        	<unknown>
    5444: a9 01 00 00 00               	test	eax, 1
    5449: 41 0e                        	<unknown>
    544b: 10 42 0e                     	adc	byte ptr [rdx + 14], al
    544e: 18 42 0e                     	sbb	byte ptr [rdx + 14], al
    5451: 20 42 0e                     	and	byte ptr [rdx + 14], al
    5454: 28 42 0e                     	sub	byte ptr [rdx + 14], al
    5457: 30 41 0e                     	xor	byte ptr [rcx + 14], al
    545a: 38 83 07 8c 06 8d            	cmp	byte ptr [rbx - 1928950777], al
    5460: 05 8e 04 8f 03               	add	eax, 59704462
    5465: 86 02                        	xchg	byte ptr [rdx], al
    5467: 03 95 01 0e 30 42            	add	edx, dword ptr [rbp + 1110445569]
    546d: 0e                           	<unknown>
    546e: 28 42 0e                     	sub	byte ptr [rdx + 14], al
    5471: 20 42 0e                     	and	byte ptr [rdx + 14], al
    5474: 18 42 0e                     	sbb	byte ptr [rdx + 14], al
    5477: 10 41 0e                     	adc	byte ptr [rcx + 14], al
    547a: 08 00                        	or	byte ptr [rax], al
    547c: 30 00                        	xor	byte ptr [rax], al
    547e: 00 00                        	add	byte ptr [rax], al
    5480: d0 00                        	rol	byte ptr [rax]
    5482: 00 00                        	add	byte ptr [rax], al
    5484: dc de                        	<unknown>
    5486: ff ff                        	<unknown>
    5488: 02 0b                        	add	cl, byte ptr [rbx]
    548a: 00 00                        	add	byte ptr [rax], al
    548c: 00 41 0e                     	add	byte ptr [rcx + 14], al
    548f: 10 86 02 43 0d 06            	adc	byte ptr [rsi + 101532418], al
    5495: 54                           	push	rsp
    5496: 83 07 8c                     	add	dword ptr [rdi], -116
    5499: 06                           	<unknown>
    549a: 8d 05 8e 04 8f 03            	lea	eax, [rip + 59704462]   # 0x38f592e <completed.0+0x38ee71e>
    54a0: 03 2a                        	add	ebp, dword ptr [rdx]
    54a2: 08 0c 07                     	or	byte ptr [rdi + rax], cl
    54a5: 08 41 0c                     	or	byte ptr [rcx + 12], al
    54a8: 06                           	<unknown>
    54a9: 10 00                        	adc	byte ptr [rax], al
    54ab: 00 00                        	add	byte ptr [rax], al
    54ad: 00 00                        	add	byte ptr [rax], al
    54af: 00 38                        	add	byte ptr [rax], bh
    54b1: 00 00                        	add	byte ptr [rax], al
    54b3: 00 04 01                     	add	byte ptr [rcx + rax], al
    54b6: 00 00                        	add	byte ptr [rax], al
    54b8: b8 e9 ff ff a3               	mov	eax, 2751463401
    54bd: 00 00                        	add	byte ptr [rax], al
    54bf: 00 00                        	add	byte ptr [rax], al
    54c1: 42 0e                        	<unknown>
    54c3: 10 42 0e                     	adc	byte ptr [rdx + 14], al
    54c6: 18 42 0e                     	sbb	byte ptr [rdx + 14], al
    54c9: 20 41 0e                     	and	byte ptr [rcx + 14], al
    54cc: 28 41 0e                     	sub	byte ptr [rcx + 14], al
    54cf: 30 83 05 8c 04 8e            	xor	byte ptr [rbx - 1912304635], al
    54d5: 03 8f 02 02 6c 0e            	add	ecx, dword ptr [rdi + 241959426]
    54db: 28 41 0e                     	sub	byte ptr [rcx + 14], al
    54de: 20 42 0e                     	and	byte ptr [rdx + 14], al
    54e1: 18 42 0e                     	sbb	byte ptr [rdx + 14], al
    54e4: 10 42 0e                     	adc	byte ptr [rdx + 14], al
    54e7: 08 41 0e                     	or	byte ptr [rcx + 14], al
    54ea: 30 00                        	xor	byte ptr [rax], al
    54ec: 38 00                        	cmp	byte ptr [rax], al
    54ee: 00 00                        	add	byte ptr [rax], al
    54f0: 40 01 00                     	add	dword ptr [rax], eax
    54f3: 00 2c ea                     	add	byte ptr [rdx + 8*rbp], ch
    54f6: ff ff                        	<unknown>
    54f8: 70 00                        	jo	0x54fa <.eh_frame+0x14a>
    54fa: 00 00                        	add	byte ptr [rax], al
    54fc: 00 42 0e                     	add	byte ptr [rdx + 14], al
    54ff: 10 42 0e                     	adc	byte ptr [rdx + 14], al
    5502: 18 42 0e                     	sbb	byte ptr [rdx + 14], al
    5505: 20 41 0e                     	and	byte ptr [rcx + 14], al
    5508: 28 41 0e                     	sub	byte ptr [rcx + 14], al
    550b: 30 83 05 8c 04 8e            	xor	byte ptr [rbx - 1912304635], al
    5511: 03 8f 02 7e 0e 28            	add	ecx, dword ptr [rdi + 672038402]
    5517: 41 0e                        	<unknown>
    5519: 20 42 0e                     	and	byte ptr [rdx + 14], al
    551c: 18 42 0e                     	sbb	byte ptr [rdx + 14], al
    551f: 10 42 0e                     	adc	byte ptr [rdx + 14], al
    5522: 08 41 0e                     	or	byte ptr [rcx + 14], al
    5525: 30 00                        	xor	byte ptr [rax], al
    5527: 00 14 00                     	add	byte ptr [rax + rax], dl
    552a: 00 00                        	add	byte ptr [rax], al
    552c: 7c 01                        	jl	0x552f <.eh_frame+0x17f>
    552e: 00 00                        	add	byte ptr [rax], al
    5530: 60                           	<unknown>
    5531: ea                           	<unknown>
    5532: ff ff                        	<unknown>
    5534: 05 00 00 00 00               	add	eax, 0
    5539: 00 00                        	add	byte ptr [rax], al
    553b: 00 00                        	add	byte ptr [rax], al
    553d: 00 00                        	add	byte ptr [rax], al
    553f: 00 2c 00                     	add	byte ptr [rax + rax], ch
    5542: 00 00                        	add	byte ptr [rax], al
    5544: 94                           	xchg	eax, esp
    5545: 01 00                        	add	dword ptr [rax], eax
    5547: 00 58 ea                     	add	byte ptr [rax - 22], bl
    554a: ff ff                        	<unknown>
    554c: f0                           	lock
    554d: 01 00                        	add	dword ptr [rax], eax
    554f: 00 00                        	add	byte ptr [rax], al
    5551: 41 0e                        	<unknown>
    5553: 10 86 02 43 0d 06            	adc	byte ptr [rsi + 101532418], al
    5559: 54                           	push	rsp
    555a: 83 07 8c                     	add	dword ptr [rdi], -116
    555d: 06                           	<unknown>
    555e: 8d 05 8e 04 8f 03            	lea	eax, [rip + 59704462]   # 0x38f59f2 <completed.0+0x38ee7e2>
    5564: 03 ab 01 0c 07 08            	add	ebp, dword ptr [rbx + 134679553]
    556a: 41 0c 06                     	or	al, 6
    556d: 10 00                        	adc	byte ptr [rax], al
    556f: 00 28                        	add	byte ptr [rax], ch
    5571: 00 00                        	add	byte ptr [rax], al
    5573: 00 c4                        	add	ah, al
    5575: 01 00                        	add	dword ptr [rax], eax
    5577: 00 18                        	add	byte ptr [rax], bl
    5579: ec                           	in	al, dx
    557a: ff ff                        	<unknown>
    557c: 96                           	xchg	eax, esi
    557d: 00 00                        	add	byte ptr [rax], al
    557f: 00 00                        	add	byte ptr [rax], al
    5581: 42 0e                        	<unknown>
    5583: 10 41 0e                     	adc	byte ptr [rcx + 14], al
    5586: 18 41 0e                     	sbb	byte ptr [rcx + 14], al
    5589: 20 83 03 8e 02 02            	and	byte ptr [rbx + 33721859], al
    558f: 43 0e                        	<unknown>
    5591: 18 41 0e                     	sbb	byte ptr [rcx + 14], al
    5594: 10 42 0e                     	adc	byte ptr [rdx + 14], al
    5597: 08 41 0e                     	or	byte ptr [rcx + 14], al
    559a: 20 00                        	and	byte ptr [rax], al
    559c: 48 00 00                     	add	byte ptr [rax], al
    559f: 00 f0                        	add	al, dh
    55a1: 01 00                        	add	dword ptr [rax], eax
    55a3: 00 8c ec ff ff 72 01         	add	byte ptr [rsp + 8*rbp + 24313855], cl
    55aa: 00 00                        	add	byte ptr [rax], al
    55ac: 00 41 0e                     	add	byte ptr [rcx + 14], al
    55af: 10 42 0e                     	adc	byte ptr [rdx + 14], al
    55b2: 18 42 0e                     	sbb	byte ptr [rdx + 14], al
    55b5: 20 42 0e                     	and	byte ptr [rdx + 14], al
    55b8: 28 42 0e                     	sub	byte ptr [rdx + 14], al
    55bb: 30 41 0e                     	xor	byte ptr [rcx + 14], al
    55be: 38 44 0e 50                  	cmp	byte ptr [rsi + rcx + 80], al
    55c2: 83 07 8c                     	add	dword ptr [rdi], -116
    55c5: 06                           	<unknown>
    55c6: 8d 05 8e 04 8f 03            	lea	eax, [rip + 59704462]   # 0x38f5a5a <completed.0+0x38ee84a>
    55cc: 86 02                        	xchg	byte ptr [rdx], al
    55ce: 03 03                        	add	eax, dword ptr [rbx]
    55d0: 01 0e                        	add	dword ptr [rsi], ecx
    55d2: 38 41 0e                     	cmp	byte ptr [rcx + 14], al
    55d5: 30 42 0e                     	xor	byte ptr [rdx + 14], al
    55d8: 28 42 0e                     	sub	byte ptr [rdx + 14], al
    55db: 20 42 0e                     	and	byte ptr [rdx + 14], al
    55de: 18 42 0e                     	sbb	byte ptr [rdx + 14], al
    55e1: 10 41 0e                     	adc	byte ptr [rcx + 14], al
    55e4: 08 41 0e                     	or	byte ptr [rcx + 14], al
    55e7: 50                           	push	rax
    55e8: 28 00                        	sub	byte ptr [rax], al
    55ea: 00 00                        	add	byte ptr [rax], al
    55ec: 3c 02                        	cmp	al, 2
    55ee: 00 00                        	add	byte ptr [rax], al
    55f0: c0 ed ff                     	shr	ch, 255
    55f3: ff 96 00 00 00 00            	call	qword ptr [rsi]
    55f9: 42 0e                        	<unknown>
    55fb: 10 41 0e                     	adc	byte ptr [rcx + 14], al
    55fe: 18 41 0e                     	sbb	byte ptr [rcx + 14], al
    5601: 20 83 03 8e 02 02            	and	byte ptr [rbx + 33721859], al
    5607: 43 0e                        	<unknown>
    5609: 18 41 0e                     	sbb	byte ptr [rcx + 14], al
    560c: 10 42 0e                     	adc	byte ptr [rdx + 14], al
    560f: 08 41 0e                     	or	byte ptr [rcx + 14], al
    5612: 20 00                        	and	byte ptr [rax], al
    5614: 2c 00                        	sub	al, 0
    5616: 00 00                        	add	byte ptr [rax], al
    5618: 68 02 00 00 34               	push	872415234
    561d: ee                           	out	dx, al
    561e: ff ff                        	<unknown>
    5620: 89 00                        	mov	dword ptr [rax], eax
    5622: 00 00                        	add	byte ptr [rax], al
    5624: 00 41 0e                     	add	byte ptr [rcx + 14], al
    5627: 10 42 0e                     	adc	byte ptr [rdx + 14], al
    562a: 18 41 0e                     	sbb	byte ptr [rcx + 14], al
    562d: 20 44 0e 30                  	and	byte ptr [rsi + rcx + 48], al
    5631: 83 04 8e 03                  	add	dword ptr [rsi + 4*rcx], 3
    5635: 86 02                        	xchg	byte ptr [rdx], al
    5637: 02 7c 0e 20                  	add	bh, byte ptr [rsi + rcx + 32]
    563b: 41 0e                        	<unknown>
    563d: 18 42 0e                     	sbb	byte ptr [rdx + 14], al
    5640: 10 41 0e                     	adc	byte ptr [rcx + 14], al
    5643: 08 1c 00                     	or	byte ptr [rax + rax], bl
    5646: 00 00                        	add	byte ptr [rax], al
    5648: 98                           	cwde
    5649: 02 00                        	add	al, byte ptr [rax]
    564b: 00 94 ee ff ff 3b 00         	add	byte ptr [rsi + 8*rbp + 3932159], dl
    5652: 00 00                        	add	byte ptr [rax], al
    5654: 00 41 0e                     	add	byte ptr [rcx + 14], al
    5657: 10 47 0e                     	adc	byte ptr [rdi + 14], al
    565a: a0 04 83 02 6e 0e 10 41 0e   	movabs	al, byte ptr [1027119844178428676]
    5663: 08 10                        	or	byte ptr [rax], dl
    5665: 00 00                        	add	byte ptr [rax], al
    5667: 00 b8 02 00 00 b4            	add	byte ptr [rax - 1275068414], bh
    566d: ee                           	out	dx, al
    566e: ff ff                        	<unknown>
    5670: 41 00 00                     	add	byte ptr [r8], al
    5673: 00 00                        	add	byte ptr [rax], al
    5675: 00 00                        	add	byte ptr [rax], al
    5677: 00 1c 00                     	add	byte ptr [rax + rax], bl
    567a: 00 00                        	add	byte ptr [rax], al
    567c: cc                           	int3
    567d: 02 00                        	add	al, byte ptr [rax]
    567f: 00 f0                        	add	al, dh
    5681: ee                           	out	dx, al
    5682: ff ff                        	<unknown>
    5684: d7                           	xlatb
    5685: 00 00                        	add	byte ptr [rax], al
    5687: 00 00                        	add	byte ptr [rax], al
    5689: 47 0e                        	<unknown>
    568b: 90                           	nop
    568c: 01 02                        	add	dword ptr [rdx], eax
    568e: b3 0e                        	mov	bl, 14
    5690: 08 41 0e                     	or	byte ptr [rcx + 14], al
    5693: 90                           	nop
    5694: 01 00                        	add	dword ptr [rax], eax
    5696: 00 00                        	add	byte ptr [rax], al
    5698: 14 00                        	adc	al, 0
    569a: 00 00                        	add	byte ptr [rax], al
    569c: ec                           	in	al, dx
    569d: 02 00                        	add	al, byte ptr [rax]
    569f: 00 b0 ef ff ff 11            	add	byte ptr [rax + 301989871], dh
    56a5: 00 00                        	add	byte ptr [rax], al
    56a7: 00 00                        	add	byte ptr [rax], al
    56a9: 41 0e                        	<unknown>
    56ab: 10 4f 0e                     	adc	byte ptr [rdi + 14], cl
    56ae: 08 00                        	or	byte ptr [rax], al
    56b0: 34 00                        	xor	al, 0
    56b2: 00 00                        	add	byte ptr [rax], al
    56b4: 04 03                        	add	al, 3
    56b6: 00 00                        	add	byte ptr [rax], al
    56b8: b8 ef ff ff 35               	mov	eax, 905969647
    56bd: 00 00                        	add	byte ptr [rax], al
    56bf: 00 00                        	add	byte ptr [rax], al
    56c1: 42 0e                        	<unknown>
    56c3: 10 42 0e                     	adc	byte ptr [rdx + 14], al
    56c6: 18 41 0e                     	sbb	byte ptr [rcx + 14], al
    56c9: 20 83 04 8e 03 8f            	and	byte ptr [rbx - 1895592444], al
    56cf: 02 64 0e 18                  	add	ah, byte ptr [rsi + rcx + 24]
    56d3: 42 0e                        	<unknown>
    56d5: 10 42 0e                     	adc	byte ptr [rdx + 14], al
    56d8: 08 42 0e                     	or	byte ptr [rdx + 14], al
    56db: 20 41 0e                     	and	byte ptr [rcx + 14], al
    56de: 18 42 0e                     	sbb	byte ptr [rdx + 14], al
    56e1: 10 42 0e                     	adc	byte ptr [rdx + 14], al
    56e4: 08 00                        	or	byte ptr [rax], al
    56e6: 00 00                        	add	byte ptr [rax], al
    56e8: 2c 00                        	sub	al, 0
    56ea: 00 00                        	add	byte ptr [rax], al
    56ec: 3c 03                        	cmp	al, 3
    56ee: 00 00                        	add	byte ptr [rax], al
    56f0: c0 ef ff                     	shr	bh, 255
    56f3: ff 5f 00                     	call	[rdi]
    56f6: 00 00                        	add	byte ptr [rax], al
    56f8: 00 42 0e                     	add	byte ptr [rdx + 14], al
    56fb: 10 42 0e                     	adc	byte ptr [rdx + 14], al
    56fe: 18 41 0e                     	sbb	byte ptr [rcx + 14], al
    5701: 20 44 0e 50                  	and	byte ptr [rsi + rcx + 80], al
    5705: 83 04 8e 03                  	add	dword ptr [rsi + 4*rcx], 3
    5709: 8f 02                        	pop	qword ptr [rdx]
    570b: 02 50 0e                     	add	dl, byte ptr [rax + 14]
    570e: 20 41 0e                     	and	byte ptr [rcx + 14], al
    5711: 18 42 0e                     	sbb	byte ptr [rdx + 14], al
    5714: 10 42 0e                     	adc	byte ptr [rdx + 14], al
    5717: 08 14 00                     	or	byte ptr [rax + rax], dl
    571a: 00 00                        	add	byte ptr [rax], al
    571c: 6c                           	insb	byte ptr es:[rdi], dx
    571d: 03 00                        	add	eax, dword ptr [rax]
    571f: 00 f0                        	add	al, dh
    5721: ef                           	out	dx, eax
    5722: ff ff                        	<unknown>
    5724: 64 00 00                     	add	byte ptr fs:[rax], al
    5727: 00 00                        	add	byte ptr [rax], al
    5729: 41 0e                        	<unknown>
    572b: 10 02                        	adc	byte ptr [rdx], al
    572d: 62                           	<unknown>
    572e: 0e                           	<unknown>
    572f: 08 10                        	or	byte ptr [rax], dl
    5731: 00 00                        	add	byte ptr [rax], al
    5733: 00 84 03 00 00 48 f0         	add	byte ptr [rbx + rax - 263716864], al
    573a: ff ff                        	<unknown>
    573c: 23 00                        	and	eax, dword ptr [rax]
    573e: 00 00                        	add	byte ptr [rax], al
    5740: 00 00                        	add	byte ptr [rax], al
    5742: 00 00                        	add	byte ptr [rax], al
    5744: 28 00                        	sub	byte ptr [rax], al
    5746: 00 00                        	add	byte ptr [rax], al
    5748: 98                           	cwde
    5749: 03 00                        	add	eax, dword ptr [rax]
    574b: 00 64 f0 ff                  	add	byte ptr [rax + 8*rsi - 1], ah
    574f: ff a2 00 00 00 00            	jmp	qword ptr [rdx]
    5755: 42 0e                        	<unknown>
    5757: 10 41 0e                     	adc	byte ptr [rcx + 14], al
    575a: 18 44 0e 50                  	sbb	byte ptr [rsi + rcx + 80], al
    575e: 83 03 8e                     	add	dword ptr [rbx], -114
    5761: 02 02                        	add	al, byte ptr [rdx]
    5763: 69 0e 18 41 0e 10            	imul	ecx, dword ptr [rsi], 269369624
    5769: 42 0e                        	<unknown>
    576b: 08 41 0e                     	or	byte ptr [rcx + 14], al
    576e: 50                           	push	rax
    576f: 00 44 00 00                  	add	byte ptr [rax + rax], al
    5773: 00 c4                        	add	ah, al
    5775: 03 00                        	add	eax, dword ptr [rax]
    5777: 00 e8                        	add	al, ch
    5779: f0                           	lock
    577a: ff ff                        	<unknown>
    577c: 26 03 00                     	add	eax, dword ptr es:[rax]
    577f: 00 00                        	add	byte ptr [rax], al
    5781: 42 0e                        	<unknown>
    5783: 10 42 0e                     	adc	byte ptr [rdx + 14], al
    5786: 18 42 0e                     	sbb	byte ptr [rdx + 14], al
    5789: 20 42 0e                     	and	byte ptr [rdx + 14], al
    578c: 28 41 0e                     	sub	byte ptr [rcx + 14], al
    578f: 30 47 0e                     	xor	byte ptr [rdi + 14], al
    5792: b0 02                        	mov	al, 2
    5794: 83 06 8c                     	add	dword ptr [rsi], -116
    5797: 05 8d 04 8e 03               	add	eax, 59638925
    579c: 8f 02                        	pop	qword ptr [rdx]
    579e: 03 39                        	add	edi, dword ptr [rcx]
    57a0: 02 0e                        	add	cl, byte ptr [rsi]
    57a2: 30 41 0e                     	xor	byte ptr [rcx + 14], al
    57a5: 28 42 0e                     	sub	byte ptr [rdx + 14], al
    57a8: 20 42 0e                     	and	byte ptr [rdx + 14], al
    57ab: 18 42 0e                     	sbb	byte ptr [rdx + 14], al
    57ae: 10 42 0e                     	adc	byte ptr [rdx + 14], al
    57b1: 08 41 0e                     	or	byte ptr [rcx + 14], al
    57b4: b0 02                        	mov	al, 2
    57b6: 00 00                        	add	byte ptr [rax], al
    57b8: 3c 00                        	cmp	al, 0
    57ba: 00 00                        	add	byte ptr [rax], al
    57bc: 0c 04                        	or	al, 4
    57be: 00 00                        	add	byte ptr [rax], al
    57c0: d0 f3                        	<unknown>
    57c2: ff ff                        	<unknown>
    57c4: 2c 03                        	sub	al, 3
    57c6: 00 00                        	add	byte ptr [rax], al
    57c8: 00 42 0e                     	add	byte ptr [rdx + 14], al
    57cb: 10 42 0e                     	adc	byte ptr [rdx + 14], al
    57ce: 18 42 0e                     	sbb	byte ptr [rdx + 14], al
    57d1: 20 41 0e                     	and	byte ptr [rcx + 14], al
    57d4: 28 47 0e                     	sub	byte ptr [rdi + 14], al
    57d7: b0 02                        	mov	al, 2
    57d9: 83 05 8c 04 8e 03 8f         	add	dword ptr [rip + 59638924], -113 # 0x38e5c6c <completed.0+0x38dea5c>
    57e0: 02 03                        	add	al, byte ptr [rbx]
    57e2: 41 02 0e                     	add	cl, byte ptr [r14]
    57e5: 28 41 0e                     	sub	byte ptr [rcx + 14], al
    57e8: 20 42 0e                     	and	byte ptr [rdx + 14], al
    57eb: 18 42 0e                     	sbb	byte ptr [rdx + 14], al
    57ee: 10 42 0e                     	adc	byte ptr [rdx + 14], al
    57f1: 08 41 0e                     	or	byte ptr [rcx + 14], al
    57f4: b0 02                        	mov	al, 2
    57f6: 00 00                        	add	byte ptr [rax], al
    57f8: 30 00                        	xor	byte ptr [rax], al
    57fa: 00 00                        	add	byte ptr [rax], al
    57fc: 4c 04 00                     	add	al, 0
    57ff: 00 c0                        	add	al, al
    5801: f6 ff                        	idiv	bh
    5803: ff ef                        	<unknown>
    5805: 00 00                        	add	byte ptr [rax], al
    5807: 00 00                        	add	byte ptr [rax], al
    5809: 42 0e                        	<unknown>
    580b: 10 42 0e                     	adc	byte ptr [rdx + 14], al
    580e: 18 41 0e                     	sbb	byte ptr [rcx + 14], al
    5811: 20 44 0e 30                  	and	byte ptr [rsi + rcx + 48], al
    5815: 83 04 8e 03                  	add	dword ptr [rsi + 4*rcx], 3
    5819: 8f 02                        	pop	qword ptr [rdx]
    581b: 02 6b 0e                     	add	ch, byte ptr [rbx + 14]
    581e: 20 41 0e                     	and	byte ptr [rcx + 14], al
    5821: 18 42 0e                     	sbb	byte ptr [rdx + 14], al
    5824: 10 42 0e                     	adc	byte ptr [rdx + 14], al
    5827: 08 41 0e                     	or	byte ptr [rcx + 14], al
    582a: 30 00                        	xor	byte ptr [rax], al

000000000000582c <__FRAME_END__>:
    582c: 00 00                        	add	byte ptr [rax], al
    582e: 00 00                        	add	byte ptr [rax], al

Disassembly of section .init_array:

0000000000006da8 <__frame_dummy_init_array_entry>:
    6da8: 50                           	push	rax
    6da9: 24 00                        	and	al, 0
    6dab: 00 00                        	add	byte ptr [rax], al
    6dad: 00 00                        	add	byte ptr [rax], al
    6daf: 00                           	<unknown>

Disassembly of section .fini_array:

0000000000006db0 <__do_global_dtors_aux_fini_array_entry>:
    6db0: 10 24 00                     	adc	byte ptr [rax + rax], ah
    6db3: 00 00                        	add	byte ptr [rax], al
    6db5: 00 00                        	add	byte ptr [rax], al
    6db7: 00                           	<unknown>

Disassembly of section .data.rel.ro:

0000000000006db8 <.data.rel.ro>:
    6db8: 04 be                        	add	al, -66
    6dba: 9c                           	pushfq
    6dbb: 3b 00                        	cmp	eax, dword ptr [rax]
		...
    6dc9: 00 00                        	add	byte ptr [rax], al
    6dcb: 00 11                        	add	byte ptr [rcx], dl
    6dcd: 11 00                        	adc	dword ptr [rax], eax
    6dcf: 00 07                        	add	byte ptr [rdi], al
    6dd1: 00 00                        	add	byte ptr [rax], al
    6dd3: 00 00                        	add	byte ptr [rax], al
    6dd5: 00 00                        	add	byte ptr [rax], al
    6dd7: 00 10                        	add	byte ptr [rax], dl
    6dd9: 47 00 00                     	add	byte ptr [r8], r8b
		...

Disassembly of section .dynamic:

0000000000006de8 <_DYNAMIC>:
    6de8: 01 00                        	add	dword ptr [rax], eax
    6dea: 00 00                        	add	byte ptr [rax], al
    6dec: 00 00                        	add	byte ptr [rax], al
    6dee: 00 00                        	add	byte ptr [rax], al
    6df0: 11 06                        	adc	dword ptr [rsi], eax
    6df2: 00 00                        	add	byte ptr [rax], al
    6df4: 00 00                        	add	byte ptr [rax], al
    6df6: 00 00                        	add	byte ptr [rax], al
    6df8: 01 00                        	add	dword ptr [rax], eax
    6dfa: 00 00                        	add	byte ptr [rax], al
    6dfc: 00 00                        	add	byte ptr [rax], al
    6dfe: 00 00                        	add	byte ptr [rax], al
    6e00: 1e                           	<unknown>
    6e01: 06                           	<unknown>
    6e02: 00 00                        	add	byte ptr [rax], al
    6e04: 00 00                        	add	byte ptr [rax], al
    6e06: 00 00                        	add	byte ptr [rax], al
    6e08: 01 00                        	add	dword ptr [rax], eax
    6e0a: 00 00                        	add	byte ptr [rax], al
    6e0c: 00 00                        	add	byte ptr [rax], al
    6e0e: 00 00                        	add	byte ptr [rax], al
    6e10: 2d 06 00 00 00               	sub	eax, 6
    6e15: 00 00                        	add	byte ptr [rax], al
    6e17: 00 0e                        	add	byte ptr [rsi], cl
    6e19: 00 00                        	add	byte ptr [rax], al
    6e1b: 00 00                        	add	byte ptr [rax], al
    6e1d: 00 00                        	add	byte ptr [rax], al
    6e1f: 00 37                        	add	byte ptr [rdi], dh
    6e21: 06                           	<unknown>
    6e22: 00 00                        	add	byte ptr [rax], al
    6e24: 00 00                        	add	byte ptr [rax], al
    6e26: 00 00                        	add	byte ptr [rax], al
    6e28: 0c 00                        	or	al, 0
    6e2a: 00 00                        	add	byte ptr [rax], al
    6e2c: 00 00                        	add	byte ptr [rax], al
    6e2e: 00 00                        	add	byte ptr [rax], al
    6e30: 00 20                        	add	byte ptr [rax], ah
    6e32: 00 00                        	add	byte ptr [rax], al
    6e34: 00 00                        	add	byte ptr [rax], al
    6e36: 00 00                        	add	byte ptr [rax], al
    6e38: 0d 00 00 00 00               	or	eax, 0
    6e3d: 00 00                        	add	byte ptr [rax], al
    6e3f: 00 b0 4f 00 00 00            	add	byte ptr [rax + 79], dh
    6e45: 00 00                        	add	byte ptr [rax], al
    6e47: 00 19                        	add	byte ptr [rcx], bl
    6e49: 00 00                        	add	byte ptr [rax], al
    6e4b: 00 00                        	add	byte ptr [rax], al
    6e4d: 00 00                        	add	byte ptr [rax], al
    6e4f: 00 a8 6d 00 00 00            	add	byte ptr [rax + 109], ch
    6e55: 00 00                        	add	byte ptr [rax], al
    6e57: 00 1b                        	add	byte ptr [rbx], bl
    6e59: 00 00                        	add	byte ptr [rax], al
    6e5b: 00 00                        	add	byte ptr [rax], al
    6e5d: 00 00                        	add	byte ptr [rax], al
    6e5f: 00 08                        	add	byte ptr [rax], cl
    6e61: 00 00                        	add	byte ptr [rax], al
    6e63: 00 00                        	add	byte ptr [rax], al
    6e65: 00 00                        	add	byte ptr [rax], al
    6e67: 00 1a                        	add	byte ptr [rdx], bl
    6e69: 00 00                        	add	byte ptr [rax], al
    6e6b: 00 00                        	add	byte ptr [rax], al
    6e6d: 00 00                        	add	byte ptr [rax], al
    6e6f: 00 b0 6d 00 00 00            	add	byte ptr [rax + 109], dh
    6e75: 00 00                        	add	byte ptr [rax], al
    6e77: 00 1c 00                     	add	byte ptr [rax + rax], bl
    6e7a: 00 00                        	add	byte ptr [rax], al
    6e7c: 00 00                        	add	byte ptr [rax], al
    6e7e: 00 00                        	add	byte ptr [rax], al
    6e80: 08 00                        	or	byte ptr [rax], al
    6e82: 00 00                        	add	byte ptr [rax], al
    6e84: 00 00                        	add	byte ptr [rax], al
    6e86: 00 00                        	add	byte ptr [rax], al
    6e88: f5                           	cmc
    6e89: fe ff                        	<unknown>
    6e8b: 6f                           	outsd	dx, dword ptr [rsi]
    6e8c: 00 00                        	add	byte ptr [rax], al
    6e8e: 00 00                        	add	byte ptr [rax], al
    6e90: 60                           	<unknown>
    6e91: 02 00                        	add	al, byte ptr [rax]
    6e93: 00 00                        	add	byte ptr [rax], al
    6e95: 00 00                        	add	byte ptr [rax], al
    6e97: 00 05 00 00 00 00            	add	byte ptr [rip], al      # 0x6e9d <_DYNAMIC+0xb5>
    6e9d: 00 00                        	add	byte ptr [rax], al
    6e9f: 00 70 0a                     	add	byte ptr [rax + 10], dh
    6ea2: 00 00                        	add	byte ptr [rax], al
    6ea4: 00 00                        	add	byte ptr [rax], al
    6ea6: 00 00                        	add	byte ptr [rax], al
    6ea8: 06                           	<unknown>
    6ea9: 00 00                        	add	byte ptr [rax], al
    6eab: 00 00                        	add	byte ptr [rax], al
    6ead: 00 00                        	add	byte ptr [rax], al
    6eaf: 00 20                        	add	byte ptr [rax], ah
    6eb1: 03 00                        	add	eax, dword ptr [rax]
    6eb3: 00 00                        	add	byte ptr [rax], al
    6eb5: 00 00                        	add	byte ptr [rax], al
    6eb7: 00 0a                        	add	byte ptr [rdx], cl
    6eb9: 00 00                        	add	byte ptr [rax], al
    6ebb: 00 00                        	add	byte ptr [rax], al
    6ebd: 00 00                        	add	byte ptr [rax], al
    6ebf: 00 5f 06                     	add	byte ptr [rdi + 6], bl
    6ec2: 00 00                        	add	byte ptr [rax], al
    6ec4: 00 00                        	add	byte ptr [rax], al
    6ec6: 00 00                        	add	byte ptr [rax], al
    6ec8: 0b 00                        	or	eax, dword ptr [rax]
    6eca: 00 00                        	add	byte ptr [rax], al
    6ecc: 00 00                        	add	byte ptr [rax], al
    6ece: 00 00                        	add	byte ptr [rax], al
    6ed0: 18 00                        	sbb	byte ptr [rax], al
    6ed2: 00 00                        	add	byte ptr [rax], al
    6ed4: 00 00                        	add	byte ptr [rax], al
    6ed6: 00 00                        	add	byte ptr [rax], al
    6ed8: 03 00                        	add	eax, dword ptr [rax]
    6eda: 00 00                        	add	byte ptr [rax], al
    6edc: 00 00                        	add	byte ptr [rax], al
    6ede: 00 00                        	add	byte ptr [rax], al
    6ee0: 00 70 00                     	add	byte ptr [rax], dh
    6ee3: 00 00                        	add	byte ptr [rax], al
    6ee5: 00 00                        	add	byte ptr [rax], al
    6ee7: 00 02                        	add	byte ptr [rdx], al
    6ee9: 00 00                        	add	byte ptr [rax], al
    6eeb: 00 00                        	add	byte ptr [rax], al
    6eed: 00 00                        	add	byte ptr [rax], al
    6eef: 00 10                        	add	byte ptr [rax], dl
    6ef1: 05 00 00 00 00               	add	eax, 0
    6ef6: 00 00                        	add	byte ptr [rax], al
    6ef8: 14 00                        	adc	al, 0
    6efa: 00 00                        	add	byte ptr [rax], al
    6efc: 00 00                        	add	byte ptr [rax], al
    6efe: 00 00                        	add	byte ptr [rax], al
    6f00: 07                           	<unknown>
    6f01: 00 00                        	add	byte ptr [rax], al
    6f03: 00 00                        	add	byte ptr [rax], al
    6f05: 00 00                        	add	byte ptr [rax], al
    6f07: 00 17                        	add	byte ptr [rdi], dl
    6f09: 00 00                        	add	byte ptr [rax], al
    6f0b: 00 00                        	add	byte ptr [rax], al
    6f0d: 00 00                        	add	byte ptr [rax], al
    6f0f: 00 f0                        	add	al, dh
    6f11: 12 00                        	adc	al, byte ptr [rax]
    6f13: 00 00                        	add	byte ptr [rax], al
    6f15: 00 00                        	add	byte ptr [rax], al
    6f17: 00 07                        	add	byte ptr [rdi], al
    6f19: 00 00                        	add	byte ptr [rax], al
    6f1b: 00 00                        	add	byte ptr [rax], al
    6f1d: 00 00                        	add	byte ptr [rax], al
    6f1f: 00 a0 11 00 00 00            	add	byte ptr [rax + 17], ah
    6f25: 00 00                        	add	byte ptr [rax], al
    6f27: 00 08                        	add	byte ptr [rax], cl
    6f29: 00 00                        	add	byte ptr [rax], al
    6f2b: 00 00                        	add	byte ptr [rax], al
    6f2d: 00 00                        	add	byte ptr [rax], al
    6f2f: 00 50 01                     	add	byte ptr [rax + 1], dl
    6f32: 00 00                        	add	byte ptr [rax], al
    6f34: 00 00                        	add	byte ptr [rax], al
    6f36: 00 00                        	add	byte ptr [rax], al
    6f38: 09 00                        	or	dword ptr [rax], eax
    6f3a: 00 00                        	add	byte ptr [rax], al
    6f3c: 00 00                        	add	byte ptr [rax], al
    6f3e: 00 00                        	add	byte ptr [rax], al
    6f40: 18 00                        	sbb	byte ptr [rax], al
    6f42: 00 00                        	add	byte ptr [rax], al
    6f44: 00 00                        	add	byte ptr [rax], al
    6f46: 00 00                        	add	byte ptr [rax], al
    6f48: fe ff                        	<unknown>
    6f4a: ff 6f 00                     	jmp	[rdi]
    6f4d: 00 00                        	add	byte ptr [rax], al
    6f4f: 00 70 11                     	add	byte ptr [rax + 17], dh
    6f52: 00 00                        	add	byte ptr [rax], al
    6f54: 00 00                        	add	byte ptr [rax], al
    6f56: 00 00                        	add	byte ptr [rax], al
    6f58: ff ff                        	<unknown>
    6f5a: ff 6f 00                     	jmp	[rdi]
    6f5d: 00 00                        	add	byte ptr [rax], al
    6f5f: 00 01                        	add	byte ptr [rcx], al
    6f61: 00 00                        	add	byte ptr [rax], al
    6f63: 00 00                        	add	byte ptr [rax], al
    6f65: 00 00                        	add	byte ptr [rax], al
    6f67: 00 f0                        	add	al, dh
    6f69: ff ff                        	<unknown>
    6f6b: 6f                           	outsd	dx, dword ptr [rsi]
    6f6c: 00 00                        	add	byte ptr [rax], al
    6f6e: 00 00                        	add	byte ptr [rax], al
    6f70: d0 10                        	rcl	byte ptr [rax]
    6f72: 00 00                        	add	byte ptr [rax], al
    6f74: 00 00                        	add	byte ptr [rax], al
    6f76: 00 00                        	add	byte ptr [rax], al
    6f78: f9                           	stc
    6f79: ff ff                        	<unknown>
    6f7b: 6f                           	outsd	dx, dword ptr [rsi]
    6f7c: 00 00                        	add	byte ptr [rax], al
    6f7e: 00 00                        	add	byte ptr [rax], al
    6f80: 09 00                        	or	dword ptr [rax], eax
		...
    6fd6: 00 00                        	add	byte ptr [rax], al

Disassembly of section .got:

0000000000006fd8 <.got>:
		...

Disassembly of section .got.plt:

0000000000007000 <_GLOBAL_OFFSET_TABLE_>:
    7000: e8 6d 00 00 00               	call	0x7072 <_GLOBAL_OFFSET_TABLE_+0x72>
		...
    7015: 00 00                        	add	byte ptr [rax], al
    7017: 00 36                        	add	byte ptr [rsi], dh
    7019: 20 00                        	and	byte ptr [rax], al
    701b: 00 00                        	add	byte ptr [rax], al
    701d: 00 00                        	add	byte ptr [rax], al
    701f: 00 46 20                     	add	byte ptr [rsi + 32], al
    7022: 00 00                        	add	byte ptr [rax], al
    7024: 00 00                        	add	byte ptr [rax], al
    7026: 00 00                        	add	byte ptr [rax], al
    7028: 56                           	push	rsi
    7029: 20 00                        	and	byte ptr [rax], al
    702b: 00 00                        	add	byte ptr [rax], al
    702d: 00 00                        	add	byte ptr [rax], al
    702f: 00 66 20                     	add	byte ptr [rsi + 32], ah
    7032: 00 00                        	add	byte ptr [rax], al
    7034: 00 00                        	add	byte ptr [rax], al
    7036: 00 00                        	add	byte ptr [rax], al
    7038: 76 20                        	jbe	0x705a <_GLOBAL_OFFSET_TABLE_+0x5a>
    703a: 00 00                        	add	byte ptr [rax], al
    703c: 00 00                        	add	byte ptr [rax], al
    703e: 00 00                        	add	byte ptr [rax], al
    7040: 86 20                        	xchg	byte ptr [rax], ah
    7042: 00 00                        	add	byte ptr [rax], al
    7044: 00 00                        	add	byte ptr [rax], al
    7046: 00 00                        	add	byte ptr [rax], al
    7048: 96                           	xchg	eax, esi
    7049: 20 00                        	and	byte ptr [rax], al
    704b: 00 00                        	add	byte ptr [rax], al
    704d: 00 00                        	add	byte ptr [rax], al
    704f: 00 a6 20 00 00 00            	add	byte ptr [rsi + 32], ah
    7055: 00 00                        	add	byte ptr [rax], al
    7057: 00 b6 20 00 00 00            	add	byte ptr [rsi + 32], dh
    705d: 00 00                        	add	byte ptr [rax], al
    705f: 00 c6                        	add	dh, al
    7061: 20 00                        	and	byte ptr [rax], al
    7063: 00 00                        	add	byte ptr [rax], al
    7065: 00 00                        	add	byte ptr [rax], al
    7067: 00 d6                        	add	dh, dl
    7069: 20 00                        	and	byte ptr [rax], al
    706b: 00 00                        	add	byte ptr [rax], al
    706d: 00 00                        	add	byte ptr [rax], al
    706f: 00 e6                        	add	dh, ah
    7071: 20 00                        	and	byte ptr [rax], al
    7073: 00 00                        	add	byte ptr [rax], al
    7075: 00 00                        	add	byte ptr [rax], al
    7077: 00 f6                        	add	dh, dh
    7079: 20 00                        	and	byte ptr [rax], al
    707b: 00 00                        	add	byte ptr [rax], al
    707d: 00 00                        	add	byte ptr [rax], al
    707f: 00 06                        	add	byte ptr [rsi], al
    7081: 21 00                        	and	dword ptr [rax], eax
    7083: 00 00                        	add	byte ptr [rax], al
    7085: 00 00                        	add	byte ptr [rax], al
    7087: 00 16                        	add	byte ptr [rsi], dl
    7089: 21 00                        	and	dword ptr [rax], eax
    708b: 00 00                        	add	byte ptr [rax], al
    708d: 00 00                        	add	byte ptr [rax], al
    708f: 00 26                        	add	byte ptr [rsi], ah
    7091: 21 00                        	and	dword ptr [rax], eax
    7093: 00 00                        	add	byte ptr [rax], al
    7095: 00 00                        	add	byte ptr [rax], al
    7097: 00 36                        	add	byte ptr [rsi], dh
    7099: 21 00                        	and	dword ptr [rax], eax
    709b: 00 00                        	add	byte ptr [rax], al
    709d: 00 00                        	add	byte ptr [rax], al
    709f: 00 46 21                     	add	byte ptr [rsi + 33], al
    70a2: 00 00                        	add	byte ptr [rax], al
    70a4: 00 00                        	add	byte ptr [rax], al
    70a6: 00 00                        	add	byte ptr [rax], al
    70a8: 56                           	push	rsi
    70a9: 21 00                        	and	dword ptr [rax], eax
    70ab: 00 00                        	add	byte ptr [rax], al
    70ad: 00 00                        	add	byte ptr [rax], al
    70af: 00 66 21                     	add	byte ptr [rsi + 33], ah
    70b2: 00 00                        	add	byte ptr [rax], al
    70b4: 00 00                        	add	byte ptr [rax], al
    70b6: 00 00                        	add	byte ptr [rax], al
    70b8: 76 21                        	jbe	0x70db <_GLOBAL_OFFSET_TABLE_+0xdb>
    70ba: 00 00                        	add	byte ptr [rax], al
    70bc: 00 00                        	add	byte ptr [rax], al
    70be: 00 00                        	add	byte ptr [rax], al
    70c0: 86 21                        	xchg	byte ptr [rcx], ah
    70c2: 00 00                        	add	byte ptr [rax], al
    70c4: 00 00                        	add	byte ptr [rax], al
    70c6: 00 00                        	add	byte ptr [rax], al
    70c8: 96                           	xchg	eax, esi
    70c9: 21 00                        	and	dword ptr [rax], eax
    70cb: 00 00                        	add	byte ptr [rax], al
    70cd: 00 00                        	add	byte ptr [rax], al
    70cf: 00 a6 21 00 00 00            	add	byte ptr [rsi + 33], ah
    70d5: 00 00                        	add	byte ptr [rax], al
    70d7: 00 b6 21 00 00 00            	add	byte ptr [rsi + 33], dh
    70dd: 00 00                        	add	byte ptr [rax], al
    70df: 00 c6                        	add	dh, al
    70e1: 21 00                        	and	dword ptr [rax], eax
    70e3: 00 00                        	add	byte ptr [rax], al
    70e5: 00 00                        	add	byte ptr [rax], al
    70e7: 00 d6                        	add	dh, dl
    70e9: 21 00                        	and	dword ptr [rax], eax
    70eb: 00 00                        	add	byte ptr [rax], al
    70ed: 00 00                        	add	byte ptr [rax], al
    70ef: 00 e6                        	add	dh, ah
    70f1: 21 00                        	and	dword ptr [rax], eax
    70f3: 00 00                        	add	byte ptr [rax], al
    70f5: 00 00                        	add	byte ptr [rax], al
    70f7: 00 f6                        	add	dh, dh
    70f9: 21 00                        	and	dword ptr [rax], eax
    70fb: 00 00                        	add	byte ptr [rax], al
    70fd: 00 00                        	add	byte ptr [rax], al
    70ff: 00 06                        	add	byte ptr [rsi], al
    7101: 22 00                        	and	al, byte ptr [rax]
    7103: 00 00                        	add	byte ptr [rax], al
    7105: 00 00                        	add	byte ptr [rax], al
    7107: 00 16                        	add	byte ptr [rsi], dl
    7109: 22 00                        	and	al, byte ptr [rax]
    710b: 00 00                        	add	byte ptr [rax], al
    710d: 00 00                        	add	byte ptr [rax], al
    710f: 00 26                        	add	byte ptr [rsi], ah
    7111: 22 00                        	and	al, byte ptr [rax]
    7113: 00 00                        	add	byte ptr [rax], al
    7115: 00 00                        	add	byte ptr [rax], al
    7117: 00 36                        	add	byte ptr [rsi], dh
    7119: 22 00                        	and	al, byte ptr [rax]
    711b: 00 00                        	add	byte ptr [rax], al
    711d: 00 00                        	add	byte ptr [rax], al
    711f: 00 46 22                     	add	byte ptr [rsi + 34], al
    7122: 00 00                        	add	byte ptr [rax], al
    7124: 00 00                        	add	byte ptr [rax], al
    7126: 00 00                        	add	byte ptr [rax], al
    7128: 56                           	push	rsi
    7129: 22 00                        	and	al, byte ptr [rax]
    712b: 00 00                        	add	byte ptr [rax], al
    712d: 00 00                        	add	byte ptr [rax], al
    712f: 00 66 22                     	add	byte ptr [rsi + 34], ah
    7132: 00 00                        	add	byte ptr [rax], al
    7134: 00 00                        	add	byte ptr [rax], al
    7136: 00 00                        	add	byte ptr [rax], al
    7138: 76 22                        	jbe	0x715c <_GLOBAL_OFFSET_TABLE_+0x15c>
    713a: 00 00                        	add	byte ptr [rax], al
    713c: 00 00                        	add	byte ptr [rax], al
    713e: 00 00                        	add	byte ptr [rax], al
    7140: 86 22                        	xchg	byte ptr [rdx], ah
    7142: 00 00                        	add	byte ptr [rax], al
    7144: 00 00                        	add	byte ptr [rax], al
    7146: 00 00                        	add	byte ptr [rax], al
    7148: 96                           	xchg	eax, esi
    7149: 22 00                        	and	al, byte ptr [rax]
    714b: 00 00                        	add	byte ptr [rax], al
    714d: 00 00                        	add	byte ptr [rax], al
    714f: 00 a6 22 00 00 00            	add	byte ptr [rsi + 34], ah
    7155: 00 00                        	add	byte ptr [rax], al
    7157: 00 b6 22 00 00 00            	add	byte ptr [rsi + 34], dh
    715d: 00 00                        	add	byte ptr [rax], al
    715f: 00 c6                        	add	dh, al
    7161: 22 00                        	and	al, byte ptr [rax]
    7163: 00 00                        	add	byte ptr [rax], al
    7165: 00 00                        	add	byte ptr [rax], al
    7167: 00 d6                        	add	dh, dl
    7169: 22 00                        	and	al, byte ptr [rax]
    716b: 00 00                        	add	byte ptr [rax], al
    716d: 00 00                        	add	byte ptr [rax], al
    716f: 00 e6                        	add	dh, ah
    7171: 22 00                        	and	al, byte ptr [rax]
    7173: 00 00                        	add	byte ptr [rax], al
    7175: 00 00                        	add	byte ptr [rax], al
    7177: 00 f6                        	add	dh, dh
    7179: 22 00                        	and	al, byte ptr [rax]
    717b: 00 00                        	add	byte ptr [rax], al
    717d: 00 00                        	add	byte ptr [rax], al
    717f: 00 06                        	add	byte ptr [rsi], al
    7181: 23 00                        	and	eax, dword ptr [rax]
    7183: 00 00                        	add	byte ptr [rax], al
    7185: 00 00                        	add	byte ptr [rax], al
    7187: 00 16                        	add	byte ptr [rsi], dl
    7189: 23 00                        	and	eax, dword ptr [rax]
    718b: 00 00                        	add	byte ptr [rax], al
    718d: 00 00                        	add	byte ptr [rax], al
    718f: 00 26                        	add	byte ptr [rsi], ah
    7191: 23 00                        	and	eax, dword ptr [rax]
    7193: 00 00                        	add	byte ptr [rax], al
    7195: 00 00                        	add	byte ptr [rax], al
    7197: 00 36                        	add	byte ptr [rsi], dh
    7199: 23 00                        	and	eax, dword ptr [rax]
    719b: 00 00                        	add	byte ptr [rax], al
    719d: 00 00                        	add	byte ptr [rax], al
    719f: 00 46 23                     	add	byte ptr [rsi + 35], al
    71a2: 00 00                        	add	byte ptr [rax], al
    71a4: 00 00                        	add	byte ptr [rax], al
    71a6: 00 00                        	add	byte ptr [rax], al
    71a8: 56                           	push	rsi
    71a9: 23 00                        	and	eax, dword ptr [rax]
    71ab: 00 00                        	add	byte ptr [rax], al
    71ad: 00 00                        	add	byte ptr [rax], al
    71af: 00 66 23                     	add	byte ptr [rsi + 35], ah
    71b2: 00 00                        	add	byte ptr [rax], al
    71b4: 00 00                        	add	byte ptr [rax], al
    71b6: 00 00                        	add	byte ptr [rax], al
    71b8: 76 23                        	jbe	0x71dd <__dso_handle+0xd>
    71ba: 00 00                        	add	byte ptr [rax], al
    71bc: 00 00                        	add	byte ptr [rax], al
    71be: 00 00                        	add	byte ptr [rax], al
    71c0: 86 23                        	xchg	byte ptr [rbx], ah
    71c2: 00 00                        	add	byte ptr [rax], al
    71c4: 00 00                        	add	byte ptr [rax], al
    71c6: 00 00                        	add	byte ptr [rax], al

Disassembly of section .data:

00000000000071d0 <__dso_handle>:
    71d0: d0 71 00                     	<unknown>
		...
    71df: 00 1b                        	add	byte ptr [rbx], bl

00000000000071e0 <validationLayers>:
    71e0: 1b 51 00                     	sbb	edx, dword ptr [rcx]
		...
    71ef: 00 37                        	add	byte ptr [rdi], dh

00000000000071f0 <enabledInstanceExtensions>:
    71f0: 37                           	<unknown>
    71f1: 51                           	push	rcx
    71f2: 00 00                        	add	byte ptr [rax], al
    71f4: 00 00                        	add	byte ptr [rax], al
    71f6: 00 00                        	add	byte ptr [rax], al
    71f8: 5e                           	pop	rsi
    71f9: 51                           	push	rcx
    71fa: 00 00                        	add	byte ptr [rax], al
    71fc: 00 00                        	add	byte ptr [rax], al
    71fe: 00 00                        	add	byte ptr [rax], al

0000000000007200 <enabledDeviceExtensions>:
    7200: 71 51                        	jno	0x7253 <completed.0+0x43>
    7202: 00 00                        	add	byte ptr [rax], al
    7204: 00 00                        	add	byte ptr [rax], al
    7206: 00 00                        	add	byte ptr [rax], al
    7208: 91                           	xchg	eax, ecx
    7209: 51                           	push	rcx
    720a: 00 00                        	add	byte ptr [rax], al
    720c: 00 00                        	add	byte ptr [rax], al
    720e: 00 00                        	add	byte ptr [rax], al

Disassembly of section .bss:

0000000000007210 <completed.0>:
...

Disassembly of section .comment:

0000000000000000 <.comment>:
       0: 47 43                        	<unknown>
       2: 43 3a 20                     	cmp	spl, byte ptr [r8]
       5: 28 55 62                     	sub	byte ptr [rbp + 98], dl
       8: 75 6e                        	jne	0x78 <.comment+0x78>
       a: 74 75                        	je	0x81 <.comment+0x81>
       c: 20 31                        	and	byte ptr [rcx], dh
       e: 33 2e                        	xor	ebp, dword ptr [rsi]
      10: 31 2e                        	xor	dword ptr [rsi], ebp
      12: 30 2d 38 75 62 75            	xor	byte ptr [rip + 1969386808], ch # 0x75627550 <completed.0+0x75620340>
      18: 6e                           	outsb	dx, byte ptr [rsi]
      19: 74 75                        	je	0x90 <.comment+0x90>
      1b: 31 7e 32                     	xor	dword ptr [rsi + 50], edi
      1e: 32 2e                        	xor	ch, byte ptr [rsi]
      20: 30 34 29                     	xor	byte ptr [rcx + rbp], dh
      23: 20 31                        	and	byte ptr [rcx], dh
      25: 33 2e                        	xor	ebp, dword ptr [rsi]
      27: 31 2e                        	xor	dword ptr [rsi], ebp
      29: 30 00                        	xor	byte ptr [rax], al
      2b: 55                           	push	rbp
      2c: 62 75 6e 74 75               	<unknown>
      31: 20 63 6c                     	and	byte ptr [rbx + 108], ah
      34: 61                           	<unknown>
      35: 6e                           	outsb	dx, byte ptr [rsi]
      36: 67 20 76 65                  	and	byte ptr [esi + 101], dh
      3a: 72 73                        	jb	0xaf <.comment+0xaf>
      3c: 69 6f 6e 20 31 34 2e         	imul	ebp, dword ptr [rdi + 110], 775172384
      43: 30 2e                        	xor	byte ptr [rsi], ch
      45: 30 2d 31 75 62 75            	xor	byte ptr [rip + 1969386801], ch # 0x7562757c <completed.0+0x7562036c>
      4b: 6e                           	outsb	dx, byte ptr [rsi]
      4c: 74 75                        	je	0xc3 <.comment+0xc3>
      4e: 31 2e                        	xor	dword ptr [rsi], ebp
      50: 31 00                        	xor	dword ptr [rax], eax

Disassembly of section .symtab:

0000000000000000 <.symtab>:
		...
      18: 01 00                        	add	dword ptr [rax], eax
      1a: 00 00                        	add	byte ptr [rax], al
      1c: 04 00                        	add	al, 0
      1e: f1                           	<unknown>
      1f: ff 00                        	inc	dword ptr [rax]
		...
      2d: 00 00                        	add	byte ptr [rax], al
      2f: 00 0c 00                     	add	byte ptr [rax + rax], cl
      32: 00 00                        	add	byte ptr [rax], al
      34: 02 00                        	add	al, byte ptr [rax]
      36: 0c 00                        	or	al, 0
      38: a0 23 00 00 00 00 00 00 00   	movabs	al, byte ptr [35]
      41: 00 00                        	add	byte ptr [rax], al
      43: 00 00                        	add	byte ptr [rax], al
      45: 00 00                        	add	byte ptr [rax], al
      47: 00 0e                        	add	byte ptr [rsi], cl
      49: 00 00                        	add	byte ptr [rax], al
      4b: 00 02                        	add	byte ptr [rdx], al
      4d: 00 0c 00                     	add	byte ptr [rax + rax], cl
      50: d0 23                        	shl	byte ptr [rbx]
		...
      5e: 00 00                        	add	byte ptr [rax], al
      60: 21 00                        	and	dword ptr [rax], eax
      62: 00 00                        	add	byte ptr [rax], al
      64: 02 00                        	add	al, byte ptr [rax]
      66: 0c 00                        	or	al, 0
      68: 10 24 00                     	adc	byte ptr [rax + rax], ah
		...
      77: 00 37                        	add	byte ptr [rdi], dh
      79: 00 00                        	add	byte ptr [rax], al
      7b: 00 01                        	add	byte ptr [rcx], al
      7d: 00 18                        	add	byte ptr [rax], bl
      7f: 00 10                        	add	byte ptr [rax], dl
      81: 72 00                        	jb	0x83 <.symtab+0x83>
      83: 00 00                        	add	byte ptr [rax], al
      85: 00 00                        	add	byte ptr [rax], al
      87: 00 01                        	add	byte ptr [rcx], al
      89: 00 00                        	add	byte ptr [rax], al
      8b: 00 00                        	add	byte ptr [rax], al
      8d: 00 00                        	add	byte ptr [rax], al
      8f: 00 43 00                     	add	byte ptr [rbx], al
      92: 00 00                        	add	byte ptr [rax], al
      94: 01 00                        	add	dword ptr [rax], eax
      96: 12 00                        	adc	al, byte ptr [rax]
      98: b0 6d                        	mov	al, 109
		...
      a6: 00 00                        	add	byte ptr [rax], al
      a8: 6a 00                        	push	0
      aa: 00 00                        	add	byte ptr [rax], al
      ac: 02 00                        	add	al, byte ptr [rax]
      ae: 0c 00                        	or	al, 0
      b0: 50                           	push	rax
      b1: 24 00                        	and	al, 0
		...
      bf: 00 76 00                     	add	byte ptr [rsi], dh
      c2: 00 00                        	add	byte ptr [rax], al
      c4: 01 00                        	add	dword ptr [rax], eax
      c6: 11 00                        	adc	dword ptr [rax], eax
      c8: a8 6d                        	test	al, 109
		...
      d6: 00 00                        	add	byte ptr [rax], al
      d8: 95                           	xchg	eax, ebp
      d9: 00 00                        	add	byte ptr [rax], al
      db: 00 04 00                     	add	byte ptr [rax + rax], al
      de: f1                           	<unknown>
      df: ff 00                        	inc	dword ptr [rax]
		...
      ed: 00 00                        	add	byte ptr [rax], al
      ef: 00 ab 00 00 00 04            	add	byte ptr [rbx + 67108864], ch
      f5: 00 f1                        	add	cl, dh
      f7: ff 00                        	inc	dword ptr [rax]
		...
     105: 00 00                        	add	byte ptr [rax], al
     107: 00 d0                        	add	al, dl
     109: 00 00                        	add	byte ptr [rax], al
     10b: 00 04 00                     	add	byte ptr [rax + rax], al
     10e: f1                           	<unknown>
     10f: ff 00                        	inc	dword ptr [rax]
		...
     11d: 00 00                        	add	byte ptr [rax], al
     11f: 00 e0                        	add	al, ah
     121: 00 00                        	add	byte ptr [rax], al
     123: 00 04 00                     	add	byte ptr [rax + rax], al
     126: f1                           	<unknown>
     127: ff 00                        	inc	dword ptr [rax]
		...
     135: 00 00                        	add	byte ptr [rax], al
     137: 00 ec                        	add	ah, ch
     139: 00 00                        	add	byte ptr [rax], al
     13b: 00 04 00                     	add	byte ptr [rax + rax], al
     13e: f1                           	<unknown>
     13f: ff 00                        	inc	dword ptr [rax]
		...
     14d: 00 00                        	add	byte ptr [rax], al
     14f: 00 f8                        	add	al, bh
     151: 00 00                        	add	byte ptr [rax], al
     153: 00 01                        	add	byte ptr [rcx], al
     155: 00 17                        	add	byte ptr [rdi], dl
     157: 00 e0                        	add	al, ah
     159: 71 00                        	jno	0x15b <.symtab+0x15b>
     15b: 00 00                        	add	byte ptr [rax], al
     15d: 00 00                        	add	byte ptr [rax], al
     15f: 00 08                        	add	byte ptr [rax], cl
     161: 00 00                        	add	byte ptr [rax], al
     163: 00 00                        	add	byte ptr [rax], al
     165: 00 00                        	add	byte ptr [rax], al
     167: 00 09                        	add	byte ptr [rcx], cl
     169: 01 00                        	add	dword ptr [rax], eax
     16b: 00 01                        	add	byte ptr [rcx], al
     16d: 00 17                        	add	byte ptr [rdi], dl
     16f: 00 f0                        	add	al, dh
     171: 71 00                        	jno	0x173 <.symtab+0x173>
     173: 00 00                        	add	byte ptr [rax], al
     175: 00 00                        	add	byte ptr [rax], al
     177: 00 10                        	add	byte ptr [rax], dl
     179: 00 00                        	add	byte ptr [rax], al
     17b: 00 00                        	add	byte ptr [rax], al
     17d: 00 00                        	add	byte ptr [rax], al
     17f: 00 23                        	add	byte ptr [rbx], ah
     181: 01 00                        	add	dword ptr [rax], eax
     183: 00 01                        	add	byte ptr [rcx], al
     185: 00 17                        	add	byte ptr [rdi], dl
     187: 00 00                        	add	byte ptr [rax], al
     189: 72 00                        	jb	0x18b <.symtab+0x18b>
     18b: 00 00                        	add	byte ptr [rax], al
     18d: 00 00                        	add	byte ptr [rax], al
     18f: 00 10                        	add	byte ptr [rax], dl
     191: 00 00                        	add	byte ptr [rax], al
     193: 00 00                        	add	byte ptr [rax], al
     195: 00 00                        	add	byte ptr [rax], al
     197: 00 3b                        	add	byte ptr [rbx], bh
     199: 01 00                        	add	dword ptr [rax], eax
     19b: 00 04 00                     	add	byte ptr [rax + rax], al
     19e: f1                           	<unknown>
     19f: ff 00                        	inc	dword ptr [rax]
		...
     1ad: 00 00                        	add	byte ptr [rax], al
     1af: 00 4d 01                     	add	byte ptr [rbp + 1], cl
     1b2: 00 00                        	add	byte ptr [rax], al
     1b4: 02 00                        	add	al, byte ptr [rax]
     1b6: 0c 00                        	or	al, 0
     1b8: 10 47 00                     	adc	byte ptr [rdi], al
     1bb: 00 00                        	add	byte ptr [rax], al
     1bd: 00 00                        	add	byte ptr [rax], al
     1bf: 00 64 00 00                  	add	byte ptr [rax + rax], ah
     1c3: 00 00                        	add	byte ptr [rax], al
     1c5: 00 00                        	add	byte ptr [rax], al
     1c7: 00 5b 01                     	add	byte ptr [rbx + 1], bl
     1ca: 00 00                        	add	byte ptr [rax], al
     1cc: 04 00                        	add	al, 0
     1ce: f1                           	<unknown>
     1cf: ff 00                        	inc	dword ptr [rax]
		...
     1dd: 00 00                        	add	byte ptr [rax], al
     1df: 00 01                        	add	byte ptr [rcx], al
     1e1: 00 00                        	add	byte ptr [rax], al
     1e3: 00 04 00                     	add	byte ptr [rax + rax], al
     1e6: f1                           	<unknown>
     1e7: ff 00                        	inc	dword ptr [rax]
		...
     1f5: 00 00                        	add	byte ptr [rax], al
     1f7: 00 70 01                     	add	byte ptr [rax + 1], dh
     1fa: 00 00                        	add	byte ptr [rax], al
     1fc: 01 00                        	add	dword ptr [rax], eax
     1fe: 10 00                        	adc	byte ptr [rax], al
     200: 2c 58                        	sub	al, 88
		...
     212: 00 00                        	add	byte ptr [rax], al
     214: 04 00                        	add	al, 0
     216: f1                           	<unknown>
     217: ff 00                        	inc	dword ptr [rax]
		...
     225: 00 00                        	add	byte ptr [rax], al
     227: 00 7e 01                     	add	byte ptr [rsi + 1], bh
     22a: 00 00                        	add	byte ptr [rax], al
     22c: 02 00                        	add	al, byte ptr [rax]
     22e: 0d 00 b0 4f 00               	or	eax, 5222400
		...
     23f: 00 84 01 00 00 01 00         	add	byte ptr [rcx + rax + 65536], al
     246: 17                           	<unknown>
     247: 00 d0                        	add	al, dl
     249: 71 00                        	jno	0x24b <.note.gnu.build-id+0x13>
		...
     257: 00 91 01 00 00 01            	add	byte ptr [rcx + 16777217], dl
     25d: 00 14 00                     	add	byte ptr [rax + rax], dl
     260: e8 6d 00 00 00               	call	0x2d2 <.gnu.hash+0x72>
		...
     26d: 00 00                        	add	byte ptr [rax], al
     26f: 00 9a 01 00 00 00            	add	byte ptr [rdx + 1], bl
     275: 00 0f                        	add	byte ptr [rdi], cl
     277: 00 d8                        	add	al, bl
     279: 52                           	push	rdx
		...
     286: 00 00                        	add	byte ptr [rax], al
     288: ad                           	lodsd	eax, dword ptr [rsi]
     289: 01 00                        	add	dword ptr [rax], eax
     28b: 00 01                        	add	byte ptr [rcx], al
     28d: 00 17                        	add	byte ptr [rdi], dl
     28f: 00 10                        	add	byte ptr [rax], dl
     291: 72 00                        	jb	0x293 <.gnu.hash+0x33>
		...
     29f: 00 b9 01 00 00 01            	add	byte ptr [rcx + 16777217], bh
     2a5: 00 16                        	add	byte ptr [rsi], dl
     2a7: 00 00                        	add	byte ptr [rax], al
     2a9: 70 00                        	jo	0x2ab <.gnu.hash+0x4b>
		...
     2b7: 00 cf                        	add	bh, cl
     2b9: 01 00                        	add	dword ptr [rax], eax
     2bb: 00 02                        	add	byte ptr [rdx], al
     2bd: 00 09                        	add	byte ptr [rcx], cl
     2bf: 00 00                        	add	byte ptr [rax], al
     2c1: 20 00                        	and	byte ptr [rax], al
		...
     2cf: 00 d5                        	add	ch, dl
     2d1: 01 00                        	add	dword ptr [rax], eax
     2d3: 00 12                        	add	byte ptr [rdx], dl
		...
     2e5: 00 00                        	add	byte ptr [rax], al
     2e7: 00 f0                        	add	al, dh
     2e9: 01 00                        	add	dword ptr [rax], eax
     2eb: 00 12                        	add	byte ptr [rdx], dl
     2ed: 00 0c 00                     	add	byte ptr [rax + rax], cl
     2f0: 60                           	<unknown>
     2f1: 24 00                        	and	al, 0
     2f3: 00 00                        	add	byte ptr [rax], al
     2f5: 00 00                        	add	byte ptr [rax], al
     2f7: 00 4f 0d                     	add	byte ptr [rdi + 13], cl
     2fa: 00 00                        	add	byte ptr [rax], al
     2fc: 00 00                        	add	byte ptr [rax], al
     2fe: 00 00                        	add	byte ptr [rax], al
     300: 0a 02                        	or	al, byte ptr [rdx]
     302: 00 00                        	add	byte ptr [rax], al
     304: 12 00                        	adc	al, byte ptr [rax]
		...
     316: 00 00                        	add	byte ptr [rax], al
     318: 26 02 00                     	add	al, byte ptr es:[rax]
     31b: 00 12                        	add	byte ptr [rdx], dl
		...
     32d: 00 00                        	add	byte ptr [rax], al
     32f: 00 37                        	add	byte ptr [rdi], dh
     331: 02 00                        	add	al, byte ptr [rax]
     333: 00 12                        	add	byte ptr [rdx], dl
		...
     345: 00 00                        	add	byte ptr [rax], al
     347: 00 4f 02                     	add	byte ptr [rdi + 2], cl
     34a: 00 00                        	add	byte ptr [rax], al
     34c: 12 00                        	adc	al, byte ptr [rax]
		...
     35e: 00 00                        	add	byte ptr [rax], al
     360: 5f                           	pop	rdi
     361: 02 00                        	add	al, byte ptr [rax]
     363: 00 12                        	add	byte ptr [rdx], dl
     365: 00 0c 00                     	add	byte ptr [rax + rax], cl
     368: c0 4e 00 00                  	ror	byte ptr [rsi], 0
     36c: 00 00                        	add	byte ptr [rax], al
     36e: 00 00                        	add	byte ptr [rax], al
     370: ef                           	out	dx, eax
     371: 00 00                        	add	byte ptr [rax], al
     373: 00 00                        	add	byte ptr [rax], al
     375: 00 00                        	add	byte ptr [rax], al
     377: 00 75 02                     	add	byte ptr [rbp + 2], dh
     37a: 00 00                        	add	byte ptr [rax], al
     37c: 12 00                        	adc	al, byte ptr [rax]
     37e: 0c 00                        	or	al, 0
     380: 20 45 00                     	and	byte ptr [rbp], al
     383: 00 00                        	add	byte ptr [rax], al
     385: 00 00                        	add	byte ptr [rax], al
     387: 00 41 00                     	add	byte ptr [rcx], al
     38a: 00 00                        	add	byte ptr [rax], al
     38c: 00 00                        	add	byte ptr [rax], al
     38e: 00 00                        	add	byte ptr [rax], al
     390: 8c 02                        	mov	word ptr [rdx], es
     392: 00 00                        	add	byte ptr [rax], al
     394: 20 00                        	and	byte ptr [rax], al
		...
     3a6: 00 00                        	add	byte ptr [rax], al
     3a8: a8 02                        	test	al, 2
     3aa: 00 00                        	add	byte ptr [rax], al
     3ac: 12 00                        	adc	al, byte ptr [rax]
		...
     3be: 00 00                        	add	byte ptr [rax], al
     3c0: ba 02 00 00 12               	mov	edx, 301989890
		...
     3d5: 00 00                        	add	byte ptr [rax], al
     3d7: 00 cc                        	add	ah, cl
     3d9: 02 00                        	add	al, byte ptr [rax]
     3db: 00 12                        	add	byte ptr [rdx], dl
		...
     3ed: 00 00                        	add	byte ptr [rax], al
     3ef: 00 f5                        	add	ch, dh
     3f1: 02 00                        	add	al, byte ptr [rax]
     3f3: 00 12                        	add	byte ptr [rdx], dl
		...
     405: 00 00                        	add	byte ptr [rax], al
     407: 00 1a                        	add	byte ptr [rdx], bl
     409: 03 00                        	add	eax, dword ptr [rax]
     40b: 00 12                        	add	byte ptr [rdx], dl
		...
     41d: 00 00                        	add	byte ptr [rax], al
     41f: 00 2d 03 00 00 12            	add	byte ptr [rip + 301989891], ch # 0x12000428 <completed.0+0x11ff9218>
		...
     435: 00 00                        	add	byte ptr [rax], al
     437: 00 43 03                     	add	byte ptr [rbx + 3], al
     43a: 00 00                        	add	byte ptr [rax], al
     43c: 12 00                        	adc	al, byte ptr [rax]
     43e: 0c 00                        	or	al, 0
     440: 30 42 00                     	xor	byte ptr [rdx], al
     443: 00 00                        	add	byte ptr [rax], al
     445: 00 00                        	add	byte ptr [rax], al
     447: 00 72 01                     	add	byte ptr [rdx + 1], dh
     44a: 00 00                        	add	byte ptr [rax], al
     44c: 00 00                        	add	byte ptr [rax], al
     44e: 00 00                        	add	byte ptr [rax], al
     450: 6d                           	insd	dword ptr es:[rdi], dx
     451: 03 00                        	add	eax, dword ptr [rax]
     453: 00 12                        	add	byte ptr [rdx], dl
		...
     465: 00 00                        	add	byte ptr [rax], al
     467: 00 81 03 00 00 12            	add	byte ptr [rcx + 301989891], al
     46d: 00 0c 00                     	add	byte ptr [rax + rax], cl
     470: 90                           	nop
     471: 4b 00 00                     	add	byte ptr [r8], al
     474: 00 00                        	add	byte ptr [rax], al
     476: 00 00                        	add	byte ptr [rax], al
     478: 2c 03                        	sub	al, 3
     47a: 00 00                        	add	byte ptr [rax], al
     47c: 00 00                        	add	byte ptr [rax], al
     47e: 00 00                        	add	byte ptr [rax], al
     480: ab                           	stosd	dword ptr es:[rdi], eax
     481: 03 00                        	add	eax, dword ptr [rax]
     483: 00 12                        	add	byte ptr [rdx], dl
     485: 00 0c 00                     	add	byte ptr [rax + rax], cl
     488: 50                           	push	rax
     489: 44 00 00                     	add	byte ptr [rax], r8b
     48c: 00 00                        	add	byte ptr [rax], al
     48e: 00 00                        	add	byte ptr [rax], al
     490: 89 00                        	mov	dword ptr [rax], eax
     492: 00 00                        	add	byte ptr [rax], al
     494: 00 00                        	add	byte ptr [rax], al
     496: 00 00                        	add	byte ptr [rax], al
     498: 0c 05                        	or	al, 5
     49a: 00 00                        	add	byte ptr [rax], al
     49c: 12 00                        	adc	al, byte ptr [rax]
		...
     4ae: 00 00                        	add	byte ptr [rax], al
     4b0: c4 03 00 00                  	<unknown>
     4b4: 12 00                        	adc	al, byte ptr [rax]
		...
     4c6: 00 00                        	add	byte ptr [rax], al
     4c8: d7                           	xlatb
     4c9: 03 00                        	add	eax, dword ptr [rax]
     4cb: 00 12                        	add	byte ptr [rdx], dl
		...
     4dd: 00 00                        	add	byte ptr [rax], al
     4df: 00 e8                        	add	al, ch
     4e1: 03 00                        	add	eax, dword ptr [rax]
     4e3: 00 12                        	add	byte ptr [rdx], dl
		...
     4f5: 00 00                        	add	byte ptr [rax], al
     4f7: 00 06                        	add	byte ptr [rsi], al
     4f9: 04 00                        	add	al, 0
     4fb: 00 12                        	add	byte ptr [rdx], dl
		...
     50d: 00 00                        	add	byte ptr [rax], al
     50f: 00 14 04                     	add	byte ptr [rsp + rax], dl
     512: 00 00                        	add	byte ptr [rax], al
     514: 12 00                        	adc	al, byte ptr [rax]
     516: 0c 00                        	or	al, 0
     518: 70 45                        	jo	0x55f <.dynsym+0x23f>
     51a: 00 00                        	add	byte ptr [rax], al
     51c: 00 00                        	add	byte ptr [rax], al
     51e: 00 00                        	add	byte ptr [rax], al
     520: d7                           	xlatb
     521: 00 00                        	add	byte ptr [rax], al
     523: 00 00                        	add	byte ptr [rax], al
     525: 00 00                        	add	byte ptr [rax], al
     527: 00 25 04 00 00 12            	add	byte ptr [rip + 301989892], ah # 0x12000531 <completed.0+0x11ff9321>
     52d: 00 0c 00                     	add	byte ptr [rax + rax], cl
     530: 80 47 00 00                  	add	byte ptr [rdi], 0
     534: 00 00                        	add	byte ptr [rax], al
     536: 00 00                        	add	byte ptr [rax], al
     538: 23 00                        	and	eax, dword ptr [rax]
     53a: 00 00                        	add	byte ptr [rax], al
     53c: 00 00                        	add	byte ptr [rax], al
     53e: 00 00                        	add	byte ptr [rax], al
     540: 57                           	push	rdi
     541: 04 00                        	add	al, 0
     543: 00 12                        	add	byte ptr [rdx], dl
		...
     555: 00 00                        	add	byte ptr [rax], al
     557: 00 6d 04                     	add	byte ptr [rbp + 4], ch
     55a: 00 00                        	add	byte ptr [rax], al
     55c: 12 00                        	adc	al, byte ptr [rax]
		...
     56e: 00 00                        	add	byte ptr [rax], al
     570: 84 04 00                     	test	byte ptr [rax + rax], al
     573: 00 12                        	add	byte ptr [rdx], dl
		...
     585: 00 00                        	add	byte ptr [rax], al
     587: 00 92 04 00 00 12            	add	byte ptr [rdx + 301989892], dl
		...
     59d: 00 00                        	add	byte ptr [rax], al
     59f: 00 a5 04 00 00 12            	add	byte ptr [rbp + 301989892], ah
		...
     5b5: 00 00                        	add	byte ptr [rax], al
     5b7: 00 b7 04 00 00 12            	add	byte ptr [rdi + 301989892], dh
     5bd: 00 0c 00                     	add	byte ptr [rax + rax], cl
     5c0: 70 3e                        	jo	0x600 <.dynsym+0x2e0>
     5c2: 00 00                        	add	byte ptr [rax], al
     5c4: 00 00                        	add	byte ptr [rax], al
     5c6: 00 00                        	add	byte ptr [rax], al
     5c8: a3 00 00 00 00 00 00 00 c8   	movabs	dword ptr [-4035225266123964416], eax
     5d1: 04 00                        	add	al, 0
     5d3: 00 12                        	add	byte ptr [rdx], dl
     5d5: 00 0c 00                     	add	byte ptr [rax + rax], cl
     5d8: a0 3f 00 00 00 00 00 00 f0   	movabs	al, byte ptr [-1152921504606846913]
     5e1: 01 00                        	add	dword ptr [rax], eax
     5e3: 00 00                        	add	byte ptr [rax], al
     5e5: 00 00                        	add	byte ptr [rax], al
     5e7: 00 e2                        	add	dl, ah
     5e9: 04 00                        	add	al, 0
     5eb: 00 12                        	add	byte ptr [rdx], dl
		...
     5fd: 00 00                        	add	byte ptr [rax], al
     5ff: 00 f5                        	add	ch, dh
     601: 04 00                        	add	al, 0
     603: 00 12                        	add	byte ptr [rdx], dl
		...
     615: 00 00                        	add	byte ptr [rax], al
     617: 00 0b                        	add	byte ptr [rbx], cl
     619: 05 00 00 12 00               	add	eax, 1179648
		...
     62e: 00 00                        	add	byte ptr [rax], al
     630: 1f                           	<unknown>
     631: 05 00 00 12 00               	add	eax, 1179648
		...
     646: 00 00                        	add	byte ptr [rax], al
     648: 31 05 00 00 12 00            	xor	dword ptr [rip + 1179648], eax # 0x12064e <completed.0+0x11943e>
		...
     65e: 00 00                        	add	byte ptr [rax], al
     660: 4a 05 00 00 20 00            	add	rax, 2097152
		...
     676: 00 00                        	add	byte ptr [rax], al
     678: 59                           	pop	rcx
     679: 05 00 00 12 00               	add	eax, 1179648
     67e: 0c 00                        	or	al, 0
     680: 50                           	push	rax
     681: 46 00 00                     	add	byte ptr [rax], r8b
     684: 00 00                        	add	byte ptr [rax], al
     686: 00 00                        	add	byte ptr [rax], al
     688: 11 00                        	adc	dword ptr [rax], eax
     68a: 00 00                        	add	byte ptr [rax], al
     68c: 00 00                        	add	byte ptr [rax], al
     68e: 00 00                        	add	byte ptr [rax], al
     690: 6c                           	insb	byte ptr es:[rdi], dx
     691: 05 00 00 12 00               	add	eax, 1179648
		...
     6a6: 00 00                        	add	byte ptr [rax], al
     6a8: 7e 05                        	jle	0x6af <.dynsym+0x38f>
     6aa: 00 00                        	add	byte ptr [rax], al
     6ac: 12 00                        	adc	al, byte ptr [rax]
		...
     6be: 00 00                        	add	byte ptr [rax], al
     6c0: a2 05 00 00 12 00 0c 00 b0   	movabs	byte ptr [-5764594328592711675], al
     6c9: 46 00 00                     	add	byte ptr [rax], r8b
     6cc: 00 00                        	add	byte ptr [rax], al
     6ce: 00 00                        	add	byte ptr [rax], al
     6d0: 5f                           	pop	rdi
     6d1: 00 00                        	add	byte ptr [rax], al
     6d3: 00 00                        	add	byte ptr [rax], al
     6d5: 00 00                        	add	byte ptr [rax], al
     6d7: 00 c0                        	add	al, al
     6d9: 05 00 00 12 00               	add	eax, 1179648
     6de: 0c 00                        	or	al, 0
     6e0: 90                           	nop
     6e1: 3f                           	<unknown>
     6e2: 00 00                        	add	byte ptr [rax], al
     6e4: 00 00                        	add	byte ptr [rax], al
     6e6: 00 00                        	add	byte ptr [rax], al
     6e8: 05 00 00 00 00               	add	eax, 0
     6ed: 00 00                        	add	byte ptr [rax], al
     6ef: 00 cd                        	add	ch, cl
     6f1: 05 00 00 12 00               	add	eax, 1179648
     6f6: 0c 00                        	or	al, 0
     6f8: 60                           	<unknown>
     6f9: 48 00 00                     	add	byte ptr [rax], al
     6fc: 00 00                        	add	byte ptr [rax], al
     6fe: 00 00                        	add	byte ptr [rax], al
     700: 26 03 00                     	add	eax, dword ptr es:[rax]
     703: 00 00                        	add	byte ptr [rax], al
     705: 00 00                        	add	byte ptr [rax], al
     707: 00 f9                        	add	cl, bh
     709: 05 00 00 12 00               	add	eax, 1179648
     70e: 0c 00                        	or	al, 0
     710: 90                           	nop
     711: 41 00 00                     	add	byte ptr [r8], al
     714: 00 00                        	add	byte ptr [rax], al
     716: 00 00                        	add	byte ptr [rax], al
     718: 96                           	xchg	eax, esi
     719: 00 00                        	add	byte ptr [rax], al
     71b: 00 00                        	add	byte ptr [rax], al
     71d: 00 00                        	add	byte ptr [rax], al
     71f: 00 0e                        	add	byte ptr [rsi], cl
     721: 06                           	<unknown>
     722: 00 00                        	add	byte ptr [rax], al
     724: 12 00                        	adc	al, byte ptr [rax]
		...
     736: 00 00                        	add	byte ptr [rax], al
     738: 1f                           	<unknown>
     739: 06                           	<unknown>
     73a: 00 00                        	add	byte ptr [rax], al
     73c: 12 00                        	adc	al, byte ptr [rax]
		...
     74e: 00 00                        	add	byte ptr [rax], al
     750: 32 06                        	xor	al, byte ptr [rsi]
     752: 00 00                        	add	byte ptr [rax], al
     754: 12 00                        	adc	al, byte ptr [rax]
		...
     766: 00 00                        	add	byte ptr [rax], al
     768: 3e 06                        	<unknown>
     76a: 00 00                        	add	byte ptr [rax], al
     76c: 12 00                        	adc	al, byte ptr [rax]
		...
     77e: 00 00                        	add	byte ptr [rax], al
     780: 57                           	push	rdi
     781: 06                           	<unknown>
     782: 00 00                        	add	byte ptr [rax], al
     784: 12 00                        	adc	al, byte ptr [rax]
		...
     796: 00 00                        	add	byte ptr [rax], al
     798: 66 06                        	<unknown>
     79a: 00 00                        	add	byte ptr [rax], al
     79c: 12 00                        	adc	al, byte ptr [rax]
		...
     7ae: 00 00                        	add	byte ptr [rax], al
     7b0: 7d 06                        	jge	0x7b8 <.dynsym+0x498>
     7b2: 00 00                        	add	byte ptr [rax], al
     7b4: 12 00                        	adc	al, byte ptr [rax]
		...
     7c6: 00 00                        	add	byte ptr [rax], al
     7c8: 8f 06                        	pop	qword ptr [rsi]
     7ca: 00 00                        	add	byte ptr [rax], al
     7cc: 12 00                        	adc	al, byte ptr [rax]
		...
     7de: 00 00                        	add	byte ptr [rax], al
     7e0: 9e                           	sahf
     7e1: 06                           	<unknown>
     7e2: 00 00                        	add	byte ptr [rax], al
     7e4: 12 00                        	adc	al, byte ptr [rax]
     7e6: 0c 00                        	or	al, 0
     7e8: e0 44                        	loopne	0x82e <.dynsym+0x50e>
     7ea: 00 00                        	add	byte ptr [rax], al
     7ec: 00 00                        	add	byte ptr [rax], al
     7ee: 00 00                        	add	byte ptr [rax], al
     7f0: 3b 00                        	cmp	eax, dword ptr [rax]
     7f2: 00 00                        	add	byte ptr [rax], al
     7f4: 00 00                        	add	byte ptr [rax], al
     7f6: 00 00                        	add	byte ptr [rax], al
     7f8: b4 06                        	mov	ah, 6
     7fa: 00 00                        	add	byte ptr [rax], al
     7fc: 12 00                        	adc	al, byte ptr [rax]
		...
     80e: 00 00                        	add	byte ptr [rax], al
     810: c9                           	leave
     811: 06                           	<unknown>
     812: 00 00                        	add	byte ptr [rax], al
     814: 12 00                        	adc	al, byte ptr [rax]
		...
     826: 00 00                        	add	byte ptr [rax], al
     828: e2 06                        	loop	0x830 <.dynsym+0x510>
     82a: 00 00                        	add	byte ptr [rax], al
     82c: 12 00                        	adc	al, byte ptr [rax]
		...
     83e: 00 00                        	add	byte ptr [rax], al
     840: f0                           	lock
     841: 06                           	<unknown>
     842: 00 00                        	add	byte ptr [rax], al
     844: 12 00                        	adc	al, byte ptr [rax]
		...
     856: 00 00                        	add	byte ptr [rax], al
     858: 07                           	<unknown>
     859: 07                           	<unknown>
     85a: 00 00                        	add	byte ptr [rax], al
     85c: 12 00                        	adc	al, byte ptr [rax]
		...
     86e: 00 00                        	add	byte ptr [rax], al
     870: 19 07                        	sbb	dword ptr [rdi], eax
     872: 00 00                        	add	byte ptr [rax], al
     874: 12 00                        	adc	al, byte ptr [rax]
		...
     886: 00 00                        	add	byte ptr [rax], al
     888: 30 07                        	xor	byte ptr [rdi], al
     88a: 00 00                        	add	byte ptr [rax], al
     88c: 12 00                        	adc	al, byte ptr [rax]
     88e: 0c 00                        	or	al, 0
     890: b0 43                        	mov	al, 67
     892: 00 00                        	add	byte ptr [rax], al
     894: 00 00                        	add	byte ptr [rax], al
     896: 00 00                        	add	byte ptr [rax], al
     898: 96                           	xchg	eax, esi
     899: 00 00                        	add	byte ptr [rax], al
     89b: 00 00                        	add	byte ptr [rax], al
     89d: 00 00                        	add	byte ptr [rax], al
     89f: 00 47 07                     	add	byte ptr [rdi + 7], al
     8a2: 00 00                        	add	byte ptr [rax], al
     8a4: 12 00                        	adc	al, byte ptr [rax]
     8a6: 0c 00                        	or	al, 0
     8a8: b0 31                        	mov	al, 49
     8aa: 00 00                        	add	byte ptr [rax], al
     8ac: 00 00                        	add	byte ptr [rax], al
     8ae: 00 00                        	add	byte ptr [rax], al
     8b0: a9 01 00 00 00               	test	eax, 1
     8b5: 00 00                        	add	byte ptr [rax], al
     8b7: 00 62 07                     	add	byte ptr [rdx + 7], ah
     8ba: 00 00                        	add	byte ptr [rax], al
     8bc: 12 00                        	adc	al, byte ptr [rax]
     8be: 0c 00                        	or	al, 0
     8c0: 20 3f                        	and	byte ptr [rdi], bh
     8c2: 00 00                        	add	byte ptr [rax], al
     8c4: 00 00                        	add	byte ptr [rax], al
     8c6: 00 00                        	add	byte ptr [rax], al
     8c8: 70 00                        	jo	0x8ca <.dynsym+0x5aa>
     8ca: 00 00                        	add	byte ptr [rax], al
     8cc: 00 00                        	add	byte ptr [rax], al
     8ce: 00 00                        	add	byte ptr [rax], al
     8d0: 74 07                        	je	0x8d9 <.dynsym+0x5b9>
     8d2: 00 00                        	add	byte ptr [rax], al
     8d4: 12 00                        	adc	al, byte ptr [rax]
		...
     8e6: 00 00                        	add	byte ptr [rax], al
     8e8: 85 07                        	test	dword ptr [rdi], eax
     8ea: 00 00                        	add	byte ptr [rax], al
     8ec: 12 00                        	adc	al, byte ptr [rax]
		...
     8fe: 00 00                        	add	byte ptr [rax], al
     900: 96                           	xchg	eax, esi
     901: 07                           	<unknown>
     902: 00 00                        	add	byte ptr [rax], al
     904: 12 00                        	adc	al, byte ptr [rax]
		...
     916: 00 00                        	add	byte ptr [rax], al
     918: ad                           	lodsd	eax, dword ptr [rsi]
     919: 07                           	<unknown>
     91a: 00 00                        	add	byte ptr [rax], al
     91c: 12 00                        	adc	al, byte ptr [rax]
		...
     92e: 00 00                        	add	byte ptr [rax], al
     930: c0 07 00                     	rol	byte ptr [rdi], 0
     933: 00 12                        	add	byte ptr [rdx], dl
		...
     945: 00 00                        	add	byte ptr [rax], al
     947: 00 d5                        	add	ch, dl
     949: 07                           	<unknown>
     94a: 00 00                        	add	byte ptr [rax], al
     94c: 12 00                        	adc	al, byte ptr [rax]
		...
     95e: 00 00                        	add	byte ptr [rax], al
     960: f8                           	clc
     961: 07                           	<unknown>
     962: 00 00                        	add	byte ptr [rax], al
     964: 20 00                        	and	byte ptr [rax], al
		...
     976: 00 00                        	add	byte ptr [rax], al
     978: 12 08                        	adc	cl, byte ptr [rax]
     97a: 00 00                        	add	byte ptr [rax], al
     97c: 12 00                        	adc	al, byte ptr [rax]
		...
     98e: 00 00                        	add	byte ptr [rax], al
     990: 25 08 00 00 12               	and	eax, 301989896
     995: 00 0c 00                     	add	byte ptr [rax + rax], cl
     998: 60                           	<unknown>
     999: 33 00                        	xor	eax, dword ptr [rax]
     99b: 00 00                        	add	byte ptr [rax], al
     99d: 00 00                        	add	byte ptr [rax], al
     99f: 00 02                        	add	byte ptr [rdx], al
     9a1: 0b 00                        	or	eax, dword ptr [rax]
     9a3: 00 00                        	add	byte ptr [rax], al
     9a5: 00 00                        	add	byte ptr [rax], al
     9a7: 00 40 08                     	add	byte ptr [rax + 8], al
     9aa: 00 00                        	add	byte ptr [rax], al
     9ac: 12 00                        	adc	al, byte ptr [rax]
     9ae: 0c 00                        	or	al, 0
     9b0: 70 46                        	jo	0x9f8 <.dynsym+0x6d8>
     9b2: 00 00                        	add	byte ptr [rax], al
     9b4: 00 00                        	add	byte ptr [rax], al
     9b6: 00 00                        	add	byte ptr [rax], al
     9b8: 35 00 00 00 00               	xor	eax, 0
     9bd: 00 00                        	add	byte ptr [rax], al
     9bf: 00 5e 08                     	add	byte ptr [rsi + 8], bl
     9c2: 00 00                        	add	byte ptr [rax], al
     9c4: 22 00                        	and	al, byte ptr [rax]
		...
     9d6: 00 00                        	add	byte ptr [rax], al
     9d8: 79 08                        	jns	0x9e2 <.dynsym+0x6c2>
     9da: 00 00                        	add	byte ptr [rax], al
     9dc: 12 00                        	adc	al, byte ptr [rax]
     9de: 0c 00                        	or	al, 0
     9e0: b0 47                        	mov	al, 71
     9e2: 00 00                        	add	byte ptr [rax], al
     9e4: 00 00                        	add	byte ptr [rax], al
     9e6: 00 00                        	add	byte ptr [rax], al
     9e8: a2 00 00 00 00 00 00 00 91   	movabs	byte ptr [-7998392938210000896], al
     9f1: 08 00                        	or	byte ptr [rax], al
     9f3: 00 11                        	add	byte ptr [rcx], dl
		...
     a05: 00 00                        	add	byte ptr [rax], al
     a07: 00                           	<unknown>

Disassembly of section .strtab:

0000000000000000 <.strtab>:
       0: 00 63 72                     	add	byte ptr [rbx + 114], ah
       3: 74 73                        	je	0x78 <.symtab+0x78>
       5: 74 75                        	je	0x7c <.symtab+0x7c>
       7: 66 66 2e 63 00               	movsxd	ax, dword ptr cs:[rax]
       c: 64 65 72 65                  	jb	0x75 <.symtab+0x75>
      10: 67 69 73 74 65 72 5f 74      	imul	esi, dword ptr [ebx + 116], 1952412261
      18: 6d                           	insd	dword ptr es:[rdi], dx
      19: 5f                           	pop	rdi
      1a: 63 6c 6f 6e                  	movsxd	ebp, dword ptr [rdi + 2*rbp + 110]
      1e: 65 73 00                     	jae	0x21 <.symtab+0x21>
      21: 5f                           	pop	rdi
      22: 5f                           	pop	rdi
      23: 64 6f                        	outsd	dx, dword ptr fs:[rsi]
      25: 5f                           	pop	rdi
      26: 67 6c                        	insb	byte ptr es:[edi], dx
      28: 6f                           	outsd	dx, dword ptr [rsi]
      29: 62 61 6c 5f 64               	<unknown>
      2e: 74 6f                        	je	0x9f <.symtab+0x9f>
      30: 72 73                        	jb	0xa5 <.symtab+0xa5>
      32: 5f                           	pop	rdi
      33: 61                           	<unknown>
      34: 75 78                        	jne	0xae <.symtab+0xae>
      36: 00 63 6f                     	add	byte ptr [rbx + 111], ah
      39: 6d                           	insd	dword ptr es:[rdi], dx
      3a: 70 6c                        	jo	0xa8 <.symtab+0xa8>
      3c: 65 74 65                     	je	0xa4 <.symtab+0xa4>
      3f: 64 2e 30 00                  	xor	byte ptr cs:[rax], al
      43: 5f                           	pop	rdi
      44: 5f                           	pop	rdi
      45: 64 6f                        	outsd	dx, dword ptr fs:[rsi]
      47: 5f                           	pop	rdi
      48: 67 6c                        	insb	byte ptr es:[edi], dx
      4a: 6f                           	outsd	dx, dword ptr [rsi]
      4b: 62 61 6c 5f 64               	<unknown>
      50: 74 6f                        	je	0xc1 <.symtab+0xc1>
      52: 72 73                        	jb	0xc7 <.symtab+0xc7>
      54: 5f                           	pop	rdi
      55: 61                           	<unknown>
      56: 75 78                        	jne	0xd0 <.symtab+0xd0>
      58: 5f                           	pop	rdi
      59: 66 69 6e 69 5f 61            	imul	bp, word ptr [rsi + 105], 24927
      5f: 72 72                        	jb	0xd3 <.symtab+0xd3>
      61: 61                           	<unknown>
      62: 79 5f                        	jns	0xc3 <.symtab+0xc3>
      64: 65 6e                        	outsb	dx, byte ptr gs:[rsi]
      66: 74 72                        	je	0xda <.symtab+0xda>
      68: 79 00                        	jns	0x6a <.symtab+0x6a>
      6a: 66 72 61                     	jb	0xce <.symtab+0xce>
      6d: 6d                           	insd	dword ptr es:[rdi], dx
      6e: 65 5f                        	pop	rdi
      70: 64 75 6d                     	jne	0xe0 <.symtab+0xe0>
      73: 6d                           	insd	dword ptr es:[rdi], dx
      74: 79 00                        	jns	0x76 <.symtab+0x76>
      76: 5f                           	pop	rdi
      77: 5f                           	pop	rdi
      78: 66 72 61                     	jb	0xdc <.symtab+0xdc>
      7b: 6d                           	insd	dword ptr es:[rdi], dx
      7c: 65 5f                        	pop	rdi
      7e: 64 75 6d                     	jne	0xee <.symtab+0xee>
      81: 6d                           	insd	dword ptr es:[rdi], dx
      82: 79 5f                        	jns	0xe3 <.symtab+0xe3>
      84: 69 6e 69 74 5f 61 72         	imul	ebp, dword ptr [rsi + 105], 1918984052
      8b: 72 61                        	jb	0xee <.symtab+0xee>
      8d: 79 5f                        	jns	0xee <.symtab+0xee>
      8f: 65 6e                        	outsb	dx, byte ptr gs:[rsi]
      91: 74 72                        	je	0x105 <.symtab+0x105>
      93: 79 00                        	jns	0x95 <.symtab+0x95>
      95: 6e                           	outsb	dx, byte ptr [rsi]
      96: 6e                           	outsb	dx, byte ptr [rsi]
      97: 5f                           	pop	rdi
      98: 63 6f 6d                     	movsxd	ebp, dword ptr [rdi + 109]
      9b: 70 75                        	jo	0x112 <.symtab+0x112>
      9d: 74 65                        	je	0x104 <.symtab+0x104>
      9f: 5f                           	pop	rdi
      a0: 33 6c 61 79                  	xor	ebp, dword ptr [rcx + 2*riz + 121]
      a4: 6f                           	outsd	dx, dword ptr [rsi]
      a5: 75 74                        	jne	0x11b <.symtab+0x11b>
      a7: 73 2e                        	jae	0xd7 <.symtab+0xd7>
      a9: 63 00                        	movsxd	eax, dword ptr [rax]
      ab: 6e                           	outsb	dx, byte ptr [rsi]
      ac: 6e                           	outsb	dx, byte ptr [rsi]
      ad: 5f                           	pop	rdi
      ae: 63 6f 6d                     	movsxd	ebp, dword ptr [rdi + 109]
      b1: 70 75                        	jo	0x128 <.symtab+0x128>
      b3: 74 65                        	je	0x11a <.symtab+0x11a>
      b5: 5f                           	pop	rdi
      b6: 76 61                        	jbe	0x119 <.symtab+0x119>
      b8: 6c                           	insb	byte ptr es:[rdi], dx
      b9: 69 64 5f 63 72 6f 73 73      	imul	esp, dword ptr [rdi + 2*rbx + 99], 1936945010
      c1: 5f                           	pop	rdi
      c2: 63 6f 72                     	movsxd	ebp, dword ptr [rdi + 114]
      c5: 72 65                        	jb	0x12c <.symtab+0x12c>
      c7: 6c                           	insb	byte ptr es:[rdi], dx
      c8: 61                           	<unknown>
      c9: 74 69                        	je	0x134 <.symtab+0x134>
      cb: 6f                           	outsd	dx, dword ptr [rsi]
      cc: 6e                           	outsb	dx, byte ptr [rsi]
      cd: 2e 63 00                     	movsxd	eax, dword ptr cs:[rax]
      d0: 6e                           	outsb	dx, byte ptr [rsi]
      d1: 6e                           	outsb	dx, byte ptr [rsi]
      d2: 5f                           	pop	rdi
      d3: 66 69 6c 65 73 79 73         	imul	bp, word ptr [rbp + 2*riz + 115], 29561
      da: 74 65                        	je	0x141 <.symtab+0x141>
      dc: 6d                           	insd	dword ptr es:[rdi], dx
      dd: 2e 63 00                     	movsxd	eax, dword ptr cs:[rax]
      e0: 6e                           	outsb	dx, byte ptr [rsi]
      e1: 6e                           	outsb	dx, byte ptr [rsi]
      e2: 5f                           	pop	rdi
      e3: 6d                           	insd	dword ptr es:[rdi], dx
      e4: 65 6d                        	insd	dword ptr es:[rdi], dx
      e6: 6f                           	outsd	dx, dword ptr [rsi]
      e7: 72 79                        	jb	0x162 <.symtab+0x162>
      e9: 2e 63 00                     	movsxd	eax, dword ptr cs:[rax]
      ec: 6e                           	outsb	dx, byte ptr [rsi]
      ed: 6e                           	outsb	dx, byte ptr [rsi]
      ee: 5f                           	pop	rdi
      ef: 76 75                        	jbe	0x166 <.symtab+0x166>
      f1: 6c                           	insb	byte ptr es:[rdi], dx
      f2: 6b 61 6e 2e                  	imul	esp, dword ptr [rcx + 110], 46
      f6: 63 00                        	movsxd	eax, dword ptr [rax]
      f8: 76 61                        	jbe	0x15b <.symtab+0x15b>
      fa: 6c                           	insb	byte ptr es:[rdi], dx
      fb: 69 64 61 74 69 6f 6e 4c      	imul	esp, dword ptr [rcx + 2*riz + 116], 1282305897
     103: 61                           	<unknown>
     104: 79 65                        	jns	0x16b <.symtab+0x16b>
     106: 72 73                        	jb	0x17b <.symtab+0x17b>
     108: 00 65 6e                     	add	byte ptr [rbp + 110], ah
     10b: 61                           	<unknown>
     10c: 62                           	<unknown>
     10d: 6c                           	insb	byte ptr es:[rdi], dx
     10e: 65 64 49 6e                  	outsb	dx, byte ptr fs:[rsi]
     112: 73 74                        	jae	0x188 <.symtab+0x188>
     114: 61                           	<unknown>
     115: 6e                           	outsb	dx, byte ptr [rsi]
     116: 63 65 45                     	movsxd	esp, dword ptr [rbp + 69]
     119: 78 74                        	js	0x18f <.symtab+0x18f>
     11b: 65 6e                        	outsb	dx, byte ptr gs:[rsi]
     11d: 73 69                        	jae	0x188 <.symtab+0x188>
     11f: 6f                           	outsd	dx, dword ptr [rsi]
     120: 6e                           	outsb	dx, byte ptr [rsi]
     121: 73 00                        	jae	0x123 <.symtab+0x123>
     123: 65 6e                        	outsb	dx, byte ptr gs:[rsi]
     125: 61                           	<unknown>
     126: 62                           	<unknown>
     127: 6c                           	insb	byte ptr es:[rdi], dx
     128: 65 64 44 65                  	gs
     12c: 76 69                        	jbe	0x197 <.symtab+0x197>
     12e: 63 65 45                     	movsxd	esp, dword ptr [rbp + 69]
     131: 78 74                        	js	0x1a7 <.symtab+0x1a7>
     133: 65 6e                        	outsb	dx, byte ptr gs:[rsi]
     135: 73 69                        	jae	0x1a0 <.symtab+0x1a0>
     137: 6f                           	outsd	dx, dword ptr [rsi]
     138: 6e                           	outsb	dx, byte ptr [rsi]
     139: 73 00                        	jae	0x13b <.symtab+0x13b>
     13b: 6e                           	outsb	dx, byte ptr [rsi]
     13c: 6e                           	outsb	dx, byte ptr [rsi]
     13d: 5f                           	pop	rdi
     13e: 76 75                        	jbe	0x1b5 <.symtab+0x1b5>
     140: 6c                           	insb	byte ptr es:[rdi], dx
     141: 6b 61 6e 5f                  	imul	esp, dword ptr [rcx + 110], 95
     145: 64 65 62 75 67 2e 63         	<unknown>
     14c: 00 64 65 62                  	add	byte ptr [rbp + 2*riz + 98], ah
     150: 75 67                        	jne	0x1b9 <.symtab+0x1b9>
     152: 43 61                        	<unknown>
     154: 6c                           	insb	byte ptr es:[rdi], dx
     155: 6c                           	insb	byte ptr es:[rdi], dx
     156: 62                           	<unknown>
     157: 61                           	<unknown>
     158: 63 6b 00                     	movsxd	ebp, dword ptr [rbx]
     15b: 6e                           	outsb	dx, byte ptr [rsi]
     15c: 6e                           	outsb	dx, byte ptr [rsi]
     15d: 5f                           	pop	rdi
     15e: 76 75                        	jbe	0x1d5 <.symtab+0x1d5>
     160: 6c                           	insb	byte ptr es:[rdi], dx
     161: 6b 61 6e 5f                  	imul	esp, dword ptr [rcx + 110], 95
     165: 70 69                        	jo	0x1d0 <.symtab+0x1d0>
     167: 70 65                        	jo	0x1ce <.symtab+0x1ce>
     169: 6c                           	insb	byte ptr es:[rdi], dx
     16a: 69 6e 65 2e 63 00 5f         	imul	ebp, dword ptr [rsi + 101], 1593860910
     171: 5f                           	pop	rdi
     172: 46 52                        	push	rdx
     174: 41 4d                        	<unknown>
     176: 45 5f                        	pop	r15
     178: 45 4e                        	<unknown>
     17a: 44 5f                        	pop	rdi
     17c: 5f                           	pop	rdi
     17d: 00 5f 66                     	add	byte ptr [rdi + 102], bl
     180: 69 6e 69 00 5f 5f 64         	imul	ebp, dword ptr [rsi + 105], 1683971840
     187: 73 6f                        	jae	0x1f8 <.symtab+0x1f8>
     189: 5f                           	pop	rdi
     18a: 68 61 6e 64 6c               	push	1818521185
     18f: 65 00 5f 44                  	add	byte ptr gs:[rdi + 68], bl
     193: 59                           	pop	rcx
     194: 4e 41                        	<unknown>
     196: 4d 49                        	<unknown>
     198: 43 00 5f 5f                  	add	byte ptr [r15 + 95], bl
     19c: 47 4e                        	<unknown>
     19e: 55                           	push	rbp
     19f: 5f                           	pop	rdi
     1a0: 45 48                        	rex64
     1a2: 5f                           	pop	rdi
     1a3: 46 52                        	push	rdx
     1a5: 41 4d                        	<unknown>
     1a7: 45 5f                        	pop	r15
     1a9: 48 44                        	<unknown>
     1ab: 52                           	push	rdx
     1ac: 00 5f 5f                     	add	byte ptr [rdi + 95], bl
     1af: 54                           	push	rsp
     1b0: 4d 43                        	<unknown>
     1b2: 5f                           	pop	rdi
     1b3: 45 4e                        	<unknown>
     1b5: 44 5f                        	pop	rdi
     1b7: 5f                           	pop	rdi
     1b8: 00 5f 47                     	add	byte ptr [rdi + 71], bl
     1bb: 4c 4f                        	<unknown>
     1bd: 42 41                        	<unknown>
     1bf: 4c 5f                        	pop	rdi
     1c1: 4f 46                        	<unknown>
     1c3: 46 53                        	push	rbx
     1c5: 45 54                        	push	r12
     1c7: 5f                           	pop	rdi
     1c8: 54                           	push	rsp
     1c9: 41 42                        	<unknown>
     1cb: 4c 45                        	<unknown>
     1cd: 5f                           	pop	rdi
     1ce: 00 5f 69                     	add	byte ptr [rdi + 105], bl
     1d1: 6e                           	outsb	dx, byte ptr [rsi]
     1d2: 69 74 00 76 6b 45 6e 75      	imul	esi, dword ptr [rax + rax + 118], 1970161003
     1da: 6d                           	insd	dword ptr es:[rdi], dx
     1db: 65 72 61                     	jb	0x23f <.note.gnu.build-id+0x7>
     1de: 74 65                        	je	0x245 <.note.gnu.build-id+0xd>
     1e0: 50                           	push	rax
     1e1: 68 79 73 69 63               	push	1667855225
     1e6: 61                           	<unknown>
     1e7: 6c                           	insb	byte ptr es:[rdi], dx
     1e8: 44 65                        	gs
     1ea: 76 69                        	jbe	0x255 <.note.gnu.build-id+0x1d>
     1ec: 63 65 73                     	movsxd	esp, dword ptr [rbp + 115]
     1ef: 00 6e 6e                     	add	byte ptr [rsi + 110], ch
     1f2: 52                           	push	rdx
     1f3: 75 6e                        	jne	0x263 <.gnu.hash+0x3>
     1f5: 54                           	push	rsp
     1f6: 77 6f                        	ja	0x267 <.gnu.hash+0x7>
     1f8: 4d 61                        	<unknown>
     1fa: 74 72                        	je	0x26e <.gnu.hash+0xe>
     1fc: 69 63 65 73 41 6e 64         	imul	esp, dword ptr [rbx + 101], 1684947315
     203: 4f 75 74                     	jne	0x27a <.gnu.hash+0x1a>
     206: 70 75                        	jo	0x27d <.gnu.hash+0x1d>
     208: 74 00                        	je	0x20a <.symtab+0x20a>
     20a: 76 6b                        	jbe	0x277 <.gnu.hash+0x17>
     20c: 43 72 65                     	jb	0x274 <.gnu.hash+0x14>
     20f: 61                           	<unknown>
     210: 74 65                        	je	0x277 <.gnu.hash+0x17>
     212: 44 65                        	gs
     214: 73 63                        	jae	0x279 <.gnu.hash+0x19>
     216: 72 69                        	jb	0x281 <.gnu.hash+0x21>
     218: 70 74                        	jo	0x28e <.gnu.hash+0x2e>
     21a: 6f                           	outsd	dx, dword ptr [rsi]
     21b: 72 53                        	jb	0x270 <.gnu.hash+0x10>
     21d: 65 74 4c                     	je	0x26c <.gnu.hash+0xc>
     220: 61                           	<unknown>
     221: 79 6f                        	jns	0x292 <.gnu.hash+0x32>
     223: 75 74                        	jne	0x299 <.gnu.hash+0x39>
     225: 00 66 72                     	add	byte ptr [rsi + 114], ah
     228: 65 65 40 47                  	<unknown>
     22c: 4c 49                        	<unknown>
     22e: 42 43                        	<unknown>
     230: 5f                           	pop	rdi
     231: 32 2e                        	xor	ch, byte ptr [rsi]
     233: 32 2e                        	xor	ch, byte ptr [rsi]
     235: 35 00 76 6b 43               	xor	eax, 1131116032
     23a: 6d                           	insd	dword ptr es:[rdi], dx
     23b: 64 42 69 6e 64 44 65 73 63   	imul	ebp, dword ptr fs:[rsi + 100], 1668506948
     244: 72 69                        	jb	0x2af <.gnu.hash+0x4f>
     246: 70 74                        	jo	0x2bc <.gnu.hash+0x5c>
     248: 6f                           	outsd	dx, dword ptr [rsi]
     249: 72 53                        	jb	0x29e <.gnu.hash+0x3e>
     24b: 65 74 73                     	je	0x2c1 <.gnu.hash+0x61>
     24e: 00 76 6b                     	add	byte ptr [rsi + 107], dh
     251: 51                           	push	rcx
     252: 75 65                        	jne	0x2b9 <.gnu.hash+0x59>
     254: 75 65                        	jne	0x2bb <.gnu.hash+0x5b>
     256: 57                           	push	rdi
     257: 61                           	<unknown>
     258: 69 74 49 64 6c 65 00 6e      	imul	esi, dword ptr [rcx + 2*rcx + 100], 1845519724
     260: 6e                           	outsb	dx, byte ptr [rsi]
     261: 53                           	push	rbx
     262: 61                           	<unknown>
     263: 76 65                        	jbe	0x2ca <.gnu.hash+0x6a>
     265: 56                           	push	rsi
     266: 6b 50 69 70                  	imul	edx, dword ptr [rax + 105], 112
     26a: 65 6c                        	insb	byte ptr es:[rdi], dx
     26c: 69 6e 65 43 61 63 68         	imul	ebp, dword ptr [rsi + 101], 1751343427
     273: 65 00 6e 6e                  	add	byte ptr gs:[rsi + 110], ch
     277: 46 69 6e 64 4d 65 6d 6f      	imul	r13d, dword ptr [rsi + 100], 1869440333
     27f: 72 79                        	jb	0x2fa <.gnu.hash+0x9a>
     281: 50                           	push	rax
     282: 72 6f                        	jb	0x2f3 <.gnu.hash+0x93>
     284: 70 65                        	jo	0x2eb <.gnu.hash+0x8b>
     286: 72 74                        	jb	0x2fc <.gnu.hash+0x9c>
     288: 69 65 73 00 5f 49 54         	imul	esp, dword ptr [rbp + 115], 1414094592
     28f: 4d 5f                        	pop	r15
     291: 64 65 72 65                  	jb	0x2fa <.gnu.hash+0x9a>
     295: 67 69 73 74 65 72 54 4d      	imul	esi, dword ptr [ebx + 116], 1297379941
     29d: 43 6c                        	insb	byte ptr es:[rdi], dx
     29f: 6f                           	outsd	dx, dword ptr [rsi]
     2a0: 6e                           	outsb	dx, byte ptr [rsi]
     2a1: 65 54                        	push	rsp
     2a3: 61                           	<unknown>
     2a4: 62                           	<unknown>
     2a5: 6c                           	insb	byte ptr es:[rdi], dx
     2a6: 65 00 66 72                  	add	byte ptr gs:[rsi + 114], ah
     2aa: 65 61                        	<unknown>
     2ac: 64 40 47                     	<unknown>
     2af: 4c 49                        	<unknown>
     2b1: 42 43                        	<unknown>
     2b3: 5f                           	pop	rdi
     2b4: 32 2e                        	xor	ch, byte ptr [rsi]
     2b6: 32 2e                        	xor	ch, byte ptr [rsi]
     2b8: 35 00 76 6b 43               	xor	eax, 1131116032
     2bd: 6d                           	insd	dword ptr es:[rdi], dx
     2be: 64 42 69 6e 64 50 69 70 65   	imul	ebp, dword ptr fs:[rsi + 100], 1701865808
     2c7: 6c                           	insb	byte ptr es:[rdi], dx
     2c8: 69 6e 65 00 76 6b 47         	imul	ebp, dword ptr [rsi + 101], 1198224896
     2cf: 65 74 50                     	je	0x322 <.dynsym+0x2>
     2d2: 68 79 73 69 63               	push	1667855225
     2d7: 61                           	<unknown>
     2d8: 6c                           	insb	byte ptr es:[rdi], dx
     2d9: 44 65                        	gs
     2db: 76 69                        	jbe	0x346 <.dynsym+0x26>
     2dd: 63 65 51                     	movsxd	esp, dword ptr [rbp + 81]
     2e0: 75 65                        	jne	0x347 <.dynsym+0x27>
     2e2: 75 65                        	jne	0x349 <.dynsym+0x29>
     2e4: 46 61                        	<unknown>
     2e6: 6d                           	insd	dword ptr es:[rdi], dx
     2e7: 69 6c 79 50 72 6f 70 65      	imul	ebp, dword ptr [rcx + 2*rdi + 80], 1701867378
     2ef: 72 74                        	jb	0x365 <.dynsym+0x45>
     2f1: 69 65 73 00 76 6b 45         	imul	esp, dword ptr [rbp + 115], 1164670464
     2f8: 6e                           	outsb	dx, byte ptr [rsi]
     2f9: 75 6d                        	jne	0x368 <.dynsym+0x48>
     2fb: 65 72 61                     	jb	0x35f <.dynsym+0x3f>
     2fe: 74 65                        	je	0x365 <.dynsym+0x45>
     300: 44 65                        	gs
     302: 76 69                        	jbe	0x36d <.dynsym+0x4d>
     304: 63 65 45                     	movsxd	esp, dword ptr [rbp + 69]
     307: 78 74                        	js	0x37d <.dynsym+0x5d>
     309: 65 6e                        	outsb	dx, byte ptr gs:[rsi]
     30b: 73 69                        	jae	0x376 <.dynsym+0x56>
     30d: 6f                           	outsd	dx, dword ptr [rsi]
     30e: 6e                           	outsb	dx, byte ptr [rsi]
     30f: 50                           	push	rax
     310: 72 6f                        	jb	0x381 <.dynsym+0x61>
     312: 70 65                        	jo	0x379 <.dynsym+0x59>
     314: 72 74                        	jb	0x38a <.dynsym+0x6a>
     316: 69 65 73 00 66 63 6c         	imul	esp, dword ptr [rbp + 115], 1818453504
     31d: 6f                           	outsd	dx, dword ptr [rsi]
     31e: 73 65                        	jae	0x385 <.dynsym+0x65>
     320: 40 47                        	<unknown>
     322: 4c 49                        	<unknown>
     324: 42 43                        	<unknown>
     326: 5f                           	pop	rdi
     327: 32 2e                        	xor	ch, byte ptr [rsi]
     329: 32 2e                        	xor	ch, byte ptr [rsi]
     32b: 35 00 76 6b 43               	xor	eax, 1131116032
     330: 72 65                        	jb	0x397 <.dynsym+0x77>
     332: 61                           	<unknown>
     333: 74 65                        	je	0x39a <.dynsym+0x7a>
     335: 50                           	push	rax
     336: 69 70 65 6c 69 6e 65         	imul	esi, dword ptr [rax + 101], 1701734764
     33d: 43 61                        	<unknown>
     33f: 63 68 65                     	movsxd	ebp, dword ptr [rax + 101]
     342: 00 6e 6e                     	add	byte ptr [rsi + 110], ch
     345: 47 65                        	gs
     347: 74 56                        	je	0x39f <.dynsym+0x7f>
     349: 6b 50 68 79                  	imul	edx, dword ptr [rax + 104], 121
     34d: 73 69                        	jae	0x3b8 <.dynsym+0x98>
     34f: 63 61 6c                     	movsxd	esp, dword ptr [rcx + 108]
     352: 44 65                        	gs
     354: 76 69                        	jbe	0x3bf <.dynsym+0x9f>
     356: 63 65 49                     	movsxd	esp, dword ptr [rbp + 73]
     359: 6e                           	outsb	dx, byte ptr [rsi]
     35a: 64 65 78 42                  	js	0x3a0 <.dynsym+0x80>
     35e: 79 45                        	jns	0x3a5 <.dynsym+0x85>
     360: 78 74                        	js	0x3d6 <.dynsym+0xb6>
     362: 65 6e                        	outsb	dx, byte ptr gs:[rsi]
     364: 73 69                        	jae	0x3cf <.dynsym+0xaf>
     366: 6f                           	outsd	dx, dword ptr [rsi]
     367: 6e                           	outsb	dx, byte ptr [rsi]
     368: 4e 61                        	<unknown>
     36a: 6d                           	insd	dword ptr es:[rdi], dx
     36b: 65 00 76 6b                  	add	byte ptr gs:[rsi + 107], dh
     36f: 43 72 65                     	jb	0x3d7 <.dynsym+0xb7>
     372: 61                           	<unknown>
     373: 74 65                        	je	0x3da <.dynsym+0xba>
     375: 43 6f                        	outsd	dx, dword ptr [rsi]
     377: 6d                           	insd	dword ptr es:[rdi], dx
     378: 6d                           	insd	dword ptr es:[rdi], dx
     379: 61                           	<unknown>
     37a: 6e                           	outsb	dx, byte ptr [rsi]
     37b: 64 50                        	push	rax
     37d: 6f                           	outsd	dx, dword ptr [rsi]
     37e: 6f                           	outsd	dx, dword ptr [rsi]
     37f: 6c                           	insb	byte ptr es:[rdi], dx
     380: 00 6e 6e                     	add	byte ptr [rsi + 110], ch
     383: 43 72 65                     	jb	0x3eb <.dynsym+0xcb>
     386: 61                           	<unknown>
     387: 74 65                        	je	0x3ee <.dynsym+0xce>
     389: 56                           	push	rsi
     38a: 6b 43 6f 6d                  	imul	eax, dword ptr [rbx + 111], 109
     38e: 70 75                        	jo	0x405 <.dynsym+0xe5>
     390: 74 65                        	je	0x3f7 <.dynsym+0xd7>
     392: 50                           	push	rax
     393: 69 70 65 6c 69 6e 65         	imul	esi, dword ptr [rax + 101], 1701734764
     39a: 43 6f                        	outsd	dx, dword ptr [rsi]
     39c: 72 72                        	jb	0x410 <.dynsym+0xf0>
     39e: 65 6c                        	insb	byte ptr es:[rdi], dx
     3a0: 61                           	<unknown>
     3a1: 74 65                        	je	0x408 <.dynsym+0xe8>
     3a3: 32 64 56 61                  	xor	ah, byte ptr [rsi + 2*rdx + 97]
     3a7: 6c                           	insb	byte ptr es:[rdi], dx
     3a8: 69 64 00 6e 6e 47 65 74      	imul	esp, dword ptr [rax + rax + 110], 1952794478
     3b0: 56                           	push	rsi
     3b1: 6b 51 75 65                  	imul	edx, dword ptr [rcx + 117], 101
     3b5: 75 65                        	jne	0x41c <.dynsym+0xfc>
     3b7: 43 6f                        	outsd	dx, dword ptr [rsi]
     3b9: 6d                           	insd	dword ptr es:[rdi], dx
     3ba: 70 75                        	jo	0x431 <.dynsym+0x111>
     3bc: 74 65                        	je	0x423 <.dynsym+0x103>
     3be: 49 6e                        	outsb	dx, byte ptr [rsi]
     3c0: 64 65 78 00                  	js	0x3c4 <.dynsym+0xa4>
     3c4: 72 65                        	jb	0x42b <.dynsym+0x10b>
     3c6: 77 69                        	ja	0x431 <.dynsym+0x111>
     3c8: 6e                           	outsb	dx, byte ptr [rsi]
     3c9: 64 40 47                     	<unknown>
     3cc: 4c 49                        	<unknown>
     3ce: 42 43                        	<unknown>
     3d0: 5f                           	pop	rdi
     3d1: 32 2e                        	xor	ch, byte ptr [rsi]
     3d3: 32 2e                        	xor	ch, byte ptr [rsi]
     3d5: 35 00 76 6b 47               	xor	eax, 1198224896
     3da: 65 74 44                     	je	0x421 <.dynsym+0x101>
     3dd: 65 76 69                     	jbe	0x449 <.dynsym+0x129>
     3e0: 63 65 51                     	movsxd	esp, dword ptr [rbp + 81]
     3e3: 75 65                        	jne	0x44a <.dynsym+0x12a>
     3e5: 75 65                        	jne	0x44c <.dynsym+0x12c>
     3e7: 00 76 6b                     	add	byte ptr [rsi + 107], dh
     3ea: 47 65                        	gs
     3ec: 74 42                        	je	0x430 <.dynsym+0x110>
     3ee: 75 66                        	jne	0x456 <.dynsym+0x136>
     3f0: 66 65 72 4d                  	jb	0x441 <.dynsym+0x121>
     3f4: 65 6d                        	insd	dword ptr es:[rdi], dx
     3f6: 6f                           	outsd	dx, dword ptr [rsi]
     3f7: 72 79                        	jb	0x472 <.dynsym+0x152>
     3f9: 52                           	push	rdx
     3fa: 65 71 75                     	jno	0x472 <.dynsym+0x152>
     3fd: 69 72 65 6d 65 6e 74         	imul	esi, dword ptr [rdx + 101], 1953391981
     404: 73 00                        	jae	0x406 <.dynsym+0xe6>
     406: 76 6b                        	jbe	0x473 <.dynsym+0x153>
     408: 55                           	push	rbp
     409: 6e                           	outsb	dx, byte ptr [rsi]
     40a: 6d                           	insd	dword ptr es:[rdi], dx
     40b: 61                           	<unknown>
     40c: 70 4d                        	jo	0x45b <.dynsym+0x13b>
     40e: 65 6d                        	insd	dword ptr es:[rdi], dx
     410: 6f                           	outsd	dx, dword ptr [rsi]
     411: 72 79                        	jb	0x48c <.dynsym+0x16c>
     413: 00 6e 6e                     	add	byte ptr [rsi + 110], ch
     416: 43 72 65                     	jb	0x47e <.dynsym+0x15e>
     419: 61                           	<unknown>
     41a: 74 65                        	je	0x481 <.dynsym+0x161>
     41c: 56                           	push	rsi
     41d: 6b 44 65 76 69               	imul	eax, dword ptr [rbp + 2*riz + 118], 105
     422: 63 65 00                     	movsxd	esp, dword ptr [rbp]
     425: 6e                           	outsb	dx, byte ptr [rsi]
     426: 6e                           	outsb	dx, byte ptr [rsi]
     427: 43 72 65                     	jb	0x48f <.dynsym+0x16f>
     42a: 61                           	<unknown>
     42b: 74 65                        	je	0x492 <.dynsym+0x172>
     42d: 56                           	push	rsi
     42e: 6b 44 65 73 63               	imul	eax, dword ptr [rbp + 2*riz + 115], 99
     433: 72 69                        	jb	0x49e <.dynsym+0x17e>
     435: 70 74                        	jo	0x4ab <.dynsym+0x18b>
     437: 6f                           	outsd	dx, dword ptr [rsi]
     438: 72 53                        	jb	0x48d <.dynsym+0x16d>
     43a: 65 74 4c                     	je	0x489 <.dynsym+0x169>
     43d: 61                           	<unknown>
     43e: 79 6f                        	jns	0x4af <.dynsym+0x18f>
     440: 75 74                        	jne	0x4b6 <.dynsym+0x196>
     442: 42 69 6e 64 69 6e 67 53      	imul	ebp, dword ptr [rsi + 100], 1399287401
     44a: 74 6f                        	je	0x4bb <.dynsym+0x19b>
     44c: 72 61                        	jb	0x4af <.dynsym+0x18f>
     44e: 67 65 42 75 66               	jne	0x4b9 <.dynsym+0x199>
     453: 66 65 72 00                  	jb	0x457 <.dynsym+0x137>
     457: 76 6b                        	jbe	0x4c4 <.dynsym+0x1a4>
     459: 47 65                        	gs
     45b: 74 49                        	je	0x4a6 <.dynsym+0x186>
     45d: 6e                           	outsb	dx, byte ptr [rsi]
     45e: 73 74                        	jae	0x4d4 <.dynsym+0x1b4>
     460: 61                           	<unknown>
     461: 6e                           	outsb	dx, byte ptr [rsi]
     462: 63 65 50                     	movsxd	esp, dword ptr [rbp + 80]
     465: 72 6f                        	jb	0x4d6 <.dynsym+0x1b6>
     467: 63 41 64                     	movsxd	eax, dword ptr [rcx + 100]
     46a: 64 72 00                     	jb	0x46d <.dynsym+0x14d>
     46d: 76 6b                        	jbe	0x4da <.dynsym+0x1ba>
     46f: 44 65                        	gs
     471: 73 74                        	jae	0x4e7 <.dynsym+0x1c7>
     473: 72 6f                        	jb	0x4e4 <.dynsym+0x1c4>
     475: 79 50                        	jns	0x4c7 <.dynsym+0x1a7>
     477: 69 70 65 6c 69 6e 65         	imul	esi, dword ptr [rax + 101], 1701734764
     47e: 43 61                        	<unknown>
     480: 63 68 65                     	movsxd	ebp, dword ptr [rax + 101]
     483: 00 76 6b                     	add	byte ptr [rsi + 107], dh
     486: 51                           	push	rcx
     487: 75 65                        	jne	0x4ee <.dynsym+0x1ce>
     489: 75 65                        	jne	0x4f0 <.dynsym+0x1d0>
     48b: 53                           	push	rbx
     48c: 75 62                        	jne	0x4f0 <.dynsym+0x1d0>
     48e: 6d                           	insd	dword ptr es:[rdi], dx
     48f: 69 74 00 76 6b 45 6e 64      	imul	esi, dword ptr [rax + rax + 118], 1684948331
     497: 43 6f                        	outsd	dx, dword ptr [rsi]
     499: 6d                           	insd	dword ptr es:[rdi], dx
     49a: 6d                           	insd	dword ptr es:[rdi], dx
     49b: 61                           	<unknown>
     49c: 6e                           	outsb	dx, byte ptr [rsi]
     49d: 64 42 75 66                  	jne	0x507 <.dynsym+0x1e7>
     4a1: 66 65 72 00                  	jb	0x4a5 <.dynsym+0x185>
     4a5: 66 70 75                     	jo	0x51d <.dynsym+0x1fd>
     4a8: 74 63                        	je	0x50d <.dynsym+0x1ed>
     4aa: 40 47                        	<unknown>
     4ac: 4c 49                        	<unknown>
     4ae: 42 43                        	<unknown>
     4b0: 5f                           	pop	rdi
     4b1: 32 2e                        	xor	ch, byte ptr [rsi]
     4b3: 32 2e                        	xor	ch, byte ptr [rsi]
     4b5: 35 00 6e 6e 52               	xor	eax, 1382968832
     4ba: 65 61                        	<unknown>
     4bc: 64 42 69 6e 61 72 79 46 69   	imul	ebp, dword ptr fs:[rsi + 97], 1766226290
     4c5: 6c                           	insb	byte ptr es:[rdi], dx
     4c6: 65 00 6e 6e                  	add	byte ptr gs:[rsi + 110], ch
     4ca: 43 72 65                     	jb	0x532 <.dynsym+0x212>
     4cd: 61                           	<unknown>
     4ce: 74 65                        	je	0x535 <.dynsym+0x215>
     4d0: 44 65                        	gs
     4d2: 66 61                        	<unknown>
     4d4: 75 6c                        	jne	0x542 <.dynsym+0x222>
     4d6: 74 56                        	je	0x52e <.dynsym+0x20e>
     4d8: 6b 49 6e 73                  	imul	ecx, dword ptr [rcx + 110], 115
     4dc: 74 61                        	je	0x53f <.dynsym+0x21f>
     4de: 6e                           	outsb	dx, byte ptr [rsi]
     4df: 63 65 00                     	movsxd	esp, dword ptr [rbp]
     4e2: 73 74                        	jae	0x558 <.dynsym+0x238>
     4e4: 72 63                        	jb	0x549 <.dynsym+0x229>
     4e6: 6d                           	insd	dword ptr es:[rdi], dx
     4e7: 70 40                        	jo	0x529 <.dynsym+0x209>
     4e9: 47 4c                        	<unknown>
     4eb: 49 42                        	<unknown>
     4ed: 43 5f                        	pop	r15
     4ef: 32 2e                        	xor	ch, byte ptr [rsi]
     4f1: 32 2e                        	xor	ch, byte ptr [rsi]
     4f3: 35 00 76 6b 44               	xor	eax, 1147893248
     4f8: 65 73 74                     	jae	0x56f <.dynsym+0x24f>
     4fb: 72 6f                        	jb	0x56c <.dynsym+0x24c>
     4fd: 79 53                        	jns	0x552 <.dynsym+0x232>
     4ff: 68 61 64 65 72               	push	1919247457
     504: 4d 6f                        	outsd	dx, dword ptr [rsi]
     506: 64 75 6c                     	jne	0x575 <.dynsym+0x255>
     509: 65 00 66 70                  	add	byte ptr gs:[rsi + 112], ah
     50d: 72 69                        	jb	0x578 <.dynsym+0x258>
     50f: 6e                           	outsb	dx, byte ptr [rsi]
     510: 74 66                        	je	0x578 <.dynsym+0x258>
     512: 40 47                        	<unknown>
     514: 4c 49                        	<unknown>
     516: 42 43                        	<unknown>
     518: 5f                           	pop	rdi
     519: 32 2e                        	xor	ch, byte ptr [rsi]
     51b: 32 2e                        	xor	ch, byte ptr [rsi]
     51d: 35 00 66 74 65               	xor	eax, 1702127104
     522: 6c                           	insb	byte ptr es:[rdi], dx
     523: 6c                           	insb	byte ptr es:[rdi], dx
     524: 40 47                        	<unknown>
     526: 4c 49                        	<unknown>
     528: 42 43                        	<unknown>
     52a: 5f                           	pop	rdi
     52b: 32 2e                        	xor	ch, byte ptr [rsi]
     52d: 32 2e                        	xor	ch, byte ptr [rsi]
     52f: 35 00 76 6b 43               	xor	eax, 1131116032
     534: 72 65                        	jb	0x59b <.dynsym+0x27b>
     536: 61                           	<unknown>
     537: 74 65                        	je	0x59e <.dynsym+0x27e>
     539: 43 6f                        	outsd	dx, dword ptr [rsi]
     53b: 6d                           	insd	dword ptr es:[rdi], dx
     53c: 70 75                        	jo	0x5b3 <.dynsym+0x293>
     53e: 74 65                        	je	0x5a5 <.dynsym+0x285>
     540: 50                           	push	rax
     541: 69 70 65 6c 69 6e 65         	imul	esi, dword ptr [rax + 101], 1701734764
     548: 73 00                        	jae	0x54a <.dynsym+0x22a>
     54a: 5f                           	pop	rdi
     54b: 5f                           	pop	rdi
     54c: 67 6d                        	insd	dword ptr es:[edi], dx
     54e: 6f                           	outsd	dx, dword ptr [rsi]
     54f: 6e                           	outsb	dx, byte ptr [rsi]
     550: 5f                           	pop	rdi
     551: 73 74                        	jae	0x5c7 <.dynsym+0x2a7>
     553: 61                           	<unknown>
     554: 72 74                        	jb	0x5ca <.dynsym+0x2aa>
     556: 5f                           	pop	rdi
     557: 5f                           	pop	rdi
     558: 00 6e 6e                     	add	byte ptr [rsi + 110], ch
     55b: 47 65                        	gs
     55d: 74 56                        	je	0x5b5 <.dynsym+0x295>
     55f: 6b 44 65 76 69               	imul	eax, dword ptr [rbp + 2*riz + 118], 105
     564: 63 65 51                     	movsxd	esp, dword ptr [rbp + 81]
     567: 75 65                        	jne	0x5ce <.dynsym+0x2ae>
     569: 75 65                        	jne	0x5d0 <.dynsym+0x2b0>
     56b: 00 6d 65                     	add	byte ptr [rbp + 101], ch
     56e: 6d                           	insd	dword ptr es:[rdi], dx
     56f: 63 70 79                     	movsxd	esi, dword ptr [rax + 121]
     572: 40 47                        	<unknown>
     574: 4c 49                        	<unknown>
     576: 42 43                        	<unknown>
     578: 5f                           	pop	rdi
     579: 32 2e                        	xor	ch, byte ptr [rsi]
     57b: 31 34 00                     	xor	dword ptr [rax + rax], esi
     57e: 76 6b                        	jbe	0x5eb <.dynsym+0x2cb>
     580: 47 65                        	gs
     582: 74 50                        	je	0x5d4 <.dynsym+0x2b4>
     584: 68 79 73 69 63               	push	1667855225
     589: 61                           	<unknown>
     58a: 6c                           	insb	byte ptr es:[rdi], dx
     58b: 44 65                        	gs
     58d: 76 69                        	jbe	0x5f8 <.dynsym+0x2d8>
     58f: 63 65 4d                     	movsxd	esp, dword ptr [rbp + 77]
     592: 65 6d                        	insd	dword ptr es:[rdi], dx
     594: 6f                           	outsd	dx, dword ptr [rsi]
     595: 72 79                        	jb	0x610 <.dynsym+0x2f0>
     597: 50                           	push	rax
     598: 72 6f                        	jb	0x609 <.dynsym+0x2e9>
     59a: 70 65                        	jo	0x601 <.dynsym+0x2e1>
     59c: 72 74                        	jb	0x612 <.dynsym+0x2f2>
     59e: 69 65 73 00 6e 6e 43         	imul	esp, dword ptr [rbp + 115], 1131310592
     5a5: 72 65                        	jb	0x60c <.dynsym+0x2ec>
     5a7: 61                           	<unknown>
     5a8: 74 65                        	je	0x60f <.dynsym+0x2ef>
     5aa: 56                           	push	rsi
     5ab: 6b 44 65 62 75               	imul	eax, dword ptr [rbp + 2*riz + 98], 117
     5b0: 67 55                        	push	rbp
     5b2: 74 69                        	je	0x61d <.dynsym+0x2fd>
     5b4: 6c                           	insb	byte ptr es:[rdi], dx
     5b5: 73 4d                        	jae	0x604 <.dynsym+0x2e4>
     5b7: 65 73 73                     	jae	0x62d <.dynsym+0x30d>
     5ba: 65 6e                        	outsb	dx, byte ptr gs:[rsi]
     5bc: 67 65 72 00                  	jb	0x5c0 <.dynsym+0x2a0>
     5c0: 6e                           	outsb	dx, byte ptr [rsi]
     5c1: 6e                           	outsb	dx, byte ptr [rsi]
     5c2: 4d 65                        	gs
     5c4: 6d                           	insd	dword ptr es:[rdi], dx
     5c5: 6f                           	outsd	dx, dword ptr [rsi]
     5c6: 72 79                        	jb	0x641 <.dynsym+0x321>
     5c8: 43 6f                        	outsd	dx, dword ptr [rsi]
     5ca: 70 79                        	jo	0x645 <.dynsym+0x325>
     5cc: 00 6e 6e                     	add	byte ptr [rsi + 110], ch
     5cf: 43 72 65                     	jb	0x637 <.dynsym+0x317>
     5d2: 61                           	<unknown>
     5d3: 74 65                        	je	0x63a <.dynsym+0x31a>
     5d5: 56                           	push	rsi
     5d6: 6b 43 6f 6d                  	imul	eax, dword ptr [rbx + 111], 109
     5da: 70 75                        	jo	0x651 <.dynsym+0x331>
     5dc: 74 65                        	je	0x643 <.dynsym+0x323>
     5de: 50                           	push	rax
     5df: 69 70 65 6c 69 6e 65         	imul	esi, dword ptr [rax + 101], 1701734764
     5e6: 32 4d 61                     	xor	cl, byte ptr [rbp + 97]
     5e9: 74 72                        	je	0x65d <.dynsym+0x33d>
     5eb: 69 63 65 73 41 6e 64         	imul	esp, dword ptr [rbx + 101], 1684947315
     5f2: 4f 75 74                     	jne	0x669 <.dynsym+0x349>
     5f5: 70 75                        	jo	0x66c <.dynsym+0x34c>
     5f7: 74 00                        	je	0x5f9 <.dynsym+0x2d9>
     5f9: 76 6b                        	jbe	0x666 <.dynsym+0x346>
     5fb: 47 65                        	gs
     5fd: 74 50                        	je	0x64f <.dynsym+0x32f>
     5ff: 68 79 73 69 63               	push	1667855225
     604: 61                           	<unknown>
     605: 6c                           	insb	byte ptr es:[rdi], dx
     606: 44 65                        	gs
     608: 76 69                        	jbe	0x673 <.dynsym+0x353>
     60a: 63 65 73                     	movsxd	esp, dword ptr [rbp + 115]
     60d: 00 76 6b                     	add	byte ptr [rsi + 107], dh
     610: 41 6c                        	insb	byte ptr es:[rdi], dx
     612: 6c                           	insb	byte ptr es:[rdi], dx
     613: 6f                           	outsd	dx, dword ptr [rsi]
     614: 63 61 74                     	movsxd	esp, dword ptr [rcx + 116]
     617: 65 4d 65                     	gs
     61a: 6d                           	insd	dword ptr es:[rdi], dx
     61b: 6f                           	outsd	dx, dword ptr [rsi]
     61c: 72 79                        	jb	0x697 <.dynsym+0x377>
     61e: 00 6d 61                     	add	byte ptr [rbp + 97], ch
     621: 6c                           	insb	byte ptr es:[rdi], dx
     622: 6c                           	insb	byte ptr es:[rdi], dx
     623: 6f                           	outsd	dx, dword ptr [rsi]
     624: 63 40 47                     	movsxd	eax, dword ptr [rax + 71]
     627: 4c 49                        	<unknown>
     629: 42 43                        	<unknown>
     62b: 5f                           	pop	rdi
     62c: 32 2e                        	xor	ch, byte ptr [rsi]
     62e: 32 2e                        	xor	ch, byte ptr [rsi]
     630: 35 00 76 6b 4d               	xor	eax, 1298888192
     635: 61                           	<unknown>
     636: 70 4d                        	jo	0x685 <.dynsym+0x365>
     638: 65 6d                        	insd	dword ptr es:[rdi], dx
     63a: 6f                           	outsd	dx, dword ptr [rsi]
     63b: 72 79                        	jb	0x6b6 <.dynsym+0x396>
     63d: 00 76 6b                     	add	byte ptr [rsi + 107], dh
     640: 41 6c                        	insb	byte ptr es:[rdi], dx
     642: 6c                           	insb	byte ptr es:[rdi], dx
     643: 6f                           	outsd	dx, dword ptr [rsi]
     644: 63 61 74                     	movsxd	esp, dword ptr [rcx + 116]
     647: 65 44 65                     	gs
     64a: 73 63                        	jae	0x6af <.dynsym+0x38f>
     64c: 72 69                        	jb	0x6b7 <.dynsym+0x397>
     64e: 70 74                        	jo	0x6c4 <.dynsym+0x3a4>
     650: 6f                           	outsd	dx, dword ptr [rsi]
     651: 72 53                        	jb	0x6a6 <.dynsym+0x386>
     653: 65 74 73                     	je	0x6c9 <.dynsym+0x3a9>
     656: 00 76 6b                     	add	byte ptr [rsi + 107], dh
     659: 43 72 65                     	jb	0x6c1 <.dynsym+0x3a1>
     65c: 61                           	<unknown>
     65d: 74 65                        	je	0x6c4 <.dynsym+0x3a4>
     65f: 42 75 66                     	jne	0x6c8 <.dynsym+0x3a8>
     662: 66 65 72 00                  	jb	0x666 <.dynsym+0x346>
     666: 76 6b                        	jbe	0x6d3 <.dynsym+0x3b3>
     668: 43 72 65                     	jb	0x6d0 <.dynsym+0x3b0>
     66b: 61                           	<unknown>
     66c: 74 65                        	je	0x6d3 <.dynsym+0x3b3>
     66e: 50                           	push	rax
     66f: 69 70 65 6c 69 6e 65         	imul	esi, dword ptr [rax + 101], 1701734764
     676: 4c 61                        	<unknown>
     678: 79 6f                        	jns	0x6e9 <.dynsym+0x3c9>
     67a: 75 74                        	jne	0x6f0 <.dynsym+0x3d0>
     67c: 00 66 73                     	add	byte ptr [rsi + 115], ah
     67f: 65 65 6b 40 47 4c            	imul	eax, dword ptr gs:[rax + 71], 76
     685: 49 42                        	<unknown>
     687: 43 5f                        	pop	r15
     689: 32 2e                        	xor	ch, byte ptr [rsi]
     68b: 32 2e                        	xor	ch, byte ptr [rsi]
     68d: 35 00 76 6b 43               	xor	eax, 1131116032
     692: 72 65                        	jb	0x6f9 <.dynsym+0x3d9>
     694: 61                           	<unknown>
     695: 74 65                        	je	0x6fc <.dynsym+0x3dc>
     697: 44 65                        	gs
     699: 76 69                        	jbe	0x704 <.dynsym+0x3e4>
     69b: 63 65 00                     	movsxd	esp, dword ptr [rbp]
     69e: 6e                           	outsb	dx, byte ptr [rsi]
     69f: 6e                           	outsb	dx, byte ptr [rsi]
     6a0: 47 65                        	gs
     6a2: 74 4d                        	je	0x6f1 <.dynsym+0x3d1>
     6a4: 65 6d                        	insd	dword ptr es:[rdi], dx
     6a6: 6f                           	outsd	dx, dword ptr [rsi]
     6a7: 72 79                        	jb	0x722 <.dynsym+0x402>
     6a9: 50                           	push	rax
     6aa: 72 6f                        	jb	0x71b <.dynsym+0x3fb>
     6ac: 70 65                        	jo	0x713 <.dynsym+0x3f3>
     6ae: 72 74                        	jb	0x724 <.dynsym+0x404>
     6b0: 69 65 73 00 76 6b 43         	imul	esp, dword ptr [rbp + 115], 1131116032
     6b7: 72 65                        	jb	0x71e <.dynsym+0x3fe>
     6b9: 61                           	<unknown>
     6ba: 74 65                        	je	0x721 <.dynsym+0x401>
     6bc: 53                           	push	rbx
     6bd: 68 61 64 65 72               	push	1919247457
     6c2: 4d 6f                        	outsd	dx, dword ptr [rsi]
     6c4: 64 75 6c                     	jne	0x733 <.dynsym+0x413>
     6c7: 65 00 76 6b                  	add	byte ptr gs:[rsi + 107], dh
     6cb: 41 6c                        	insb	byte ptr es:[rdi], dx
     6cd: 6c                           	insb	byte ptr es:[rdi], dx
     6ce: 6f                           	outsd	dx, dword ptr [rsi]
     6cf: 63 61 74                     	movsxd	esp, dword ptr [rcx + 116]
     6d2: 65 43 6f                     	outsd	dx, dword ptr gs:[rsi]
     6d5: 6d                           	insd	dword ptr es:[rdi], dx
     6d6: 6d                           	insd	dword ptr es:[rdi], dx
     6d7: 61                           	<unknown>
     6d8: 6e                           	outsb	dx, byte ptr [rsi]
     6d9: 64 42 75 66                  	jne	0x743 <.dynsym+0x423>
     6dd: 66 65 72 73                  	jb	0x754 <.dynsym+0x434>
     6e1: 00 76 6b                     	add	byte ptr [rsi + 107], dh
     6e4: 43 6d                        	insd	dword ptr es:[rdi], dx
     6e6: 64 44 69 73 70 61 74 63 68   	imul	r14d, dword ptr fs:[rbx + 112], 1751348321
     6ef: 00 76 6b                     	add	byte ptr [rsi + 107], dh
     6f2: 55                           	push	rbp
     6f3: 70 64                        	jo	0x759 <.dynsym+0x439>
     6f5: 61                           	<unknown>
     6f6: 74 65                        	je	0x75d <.dynsym+0x43d>
     6f8: 44 65                        	gs
     6fa: 73 63                        	jae	0x75f <.dynsym+0x43f>
     6fc: 72 69                        	jb	0x767 <.dynsym+0x447>
     6fe: 70 74                        	jo	0x774 <.dynsym+0x454>
     700: 6f                           	outsd	dx, dword ptr [rsi]
     701: 72 53                        	jb	0x756 <.dynsym+0x436>
     703: 65 74 73                     	je	0x779 <.dynsym+0x459>
     706: 00 66 6f                     	add	byte ptr [rsi + 111], ah
     709: 70 65                        	jo	0x770 <.dynsym+0x450>
     70b: 6e                           	outsb	dx, byte ptr [rsi]
     70c: 40 47                        	<unknown>
     70e: 4c 49                        	<unknown>
     710: 42 43                        	<unknown>
     712: 5f                           	pop	rdi
     713: 32 2e                        	xor	ch, byte ptr [rsi]
     715: 32 2e                        	xor	ch, byte ptr [rsi]
     717: 35 00 76 6b 47               	xor	eax, 1198224896
     71c: 65 74 50                     	je	0x76f <.dynsym+0x44f>
     71f: 69 70 65 6c 69 6e 65         	imul	esi, dword ptr [rax + 101], 1701734764
     726: 43 61                        	<unknown>
     728: 63 68 65                     	movsxd	ebp, dword ptr [rax + 101]
     72b: 44 61                        	<unknown>
     72d: 74 61                        	je	0x790 <.dynsym+0x470>
     72f: 00 6e 6e                     	add	byte ptr [rsi + 110], ch
     732: 47 65                        	gs
     734: 74 56                        	je	0x78c <.dynsym+0x46c>
     736: 6b 50 68 79                  	imul	edx, dword ptr [rax + 104], 121
     73a: 73 69                        	jae	0x7a5 <.dynsym+0x485>
     73c: 63 61 6c                     	movsxd	esp, dword ptr [rcx + 108]
     73f: 44 65                        	gs
     741: 76 69                        	jbe	0x7ac <.dynsym+0x48c>
     743: 63 65 73                     	movsxd	esp, dword ptr [rbp + 115]
     746: 00 6e 6e                     	add	byte ptr [rsi + 110], ch
     749: 56                           	push	rsi
     74a: 61                           	<unknown>
     74b: 6c                           	insb	byte ptr es:[rdi], dx
     74c: 69 64 43 72 6f 73 73 43      	imul	esp, dword ptr [rbx + 2*rax + 114], 1131639663
     754: 6f                           	outsd	dx, dword ptr [rsi]
     755: 72 72                        	jb	0x7c9 <.dynsym+0x4a9>
     757: 65 6c                        	insb	byte ptr es:[rdi], dx
     759: 61                           	<unknown>
     75a: 74 69                        	je	0x7c5 <.dynsym+0x4a5>
     75c: 6f                           	outsd	dx, dword ptr [rsi]
     75d: 6e                           	outsb	dx, byte ptr [rsi]
     75e: 43 70 75                     	jo	0x7d6 <.dynsym+0x4b6>
     761: 00 6e 6e                     	add	byte ptr [rsi + 110], ch
     764: 57                           	push	rdi
     765: 72 69                        	jb	0x7d0 <.dynsym+0x4b0>
     767: 74 65                        	je	0x7ce <.dynsym+0x4ae>
     769: 42 69 6e 61 72 79 46 69      	imul	ebp, dword ptr [rsi + 97], 1766226290
     771: 6c                           	insb	byte ptr es:[rdi], dx
     772: 65 00 76 6b                  	add	byte ptr gs:[rsi + 107], dh
     776: 43 72 65                     	jb	0x7de <.dynsym+0x4be>
     779: 61                           	<unknown>
     77a: 74 65                        	je	0x7e1 <.dynsym+0x4c1>
     77c: 49 6e                        	outsb	dx, byte ptr [rsi]
     77e: 73 74                        	jae	0x7f4 <.dynsym+0x4d4>
     780: 61                           	<unknown>
     781: 6e                           	outsb	dx, byte ptr [rsi]
     782: 63 65 00                     	movsxd	esp, dword ptr [rbp]
     785: 65 78 69                     	js	0x7f1 <.dynsym+0x4d1>
     788: 74 40                        	je	0x7ca <.dynsym+0x4aa>
     78a: 47 4c                        	<unknown>
     78c: 49 42                        	<unknown>
     78e: 43 5f                        	pop	r15
     790: 32 2e                        	xor	ch, byte ptr [rsi]
     792: 32 2e                        	xor	ch, byte ptr [rsi]
     794: 35 00 76 6b 43               	xor	eax, 1131116032
     799: 72 65                        	jb	0x800 <.dynsym+0x4e0>
     79b: 61                           	<unknown>
     79c: 74 65                        	je	0x803 <.dynsym+0x4e3>
     79e: 44 65                        	gs
     7a0: 73 63                        	jae	0x805 <.dynsym+0x4e5>
     7a2: 72 69                        	jb	0x80d <.dynsym+0x4ed>
     7a4: 70 74                        	jo	0x81a <.dynsym+0x4fa>
     7a6: 6f                           	outsd	dx, dword ptr [rsi]
     7a7: 72 50                        	jb	0x7f9 <.dynsym+0x4d9>
     7a9: 6f                           	outsd	dx, dword ptr [rsi]
     7aa: 6f                           	outsd	dx, dword ptr [rsi]
     7ab: 6c                           	insb	byte ptr es:[rdi], dx
     7ac: 00 66 77                     	add	byte ptr [rsi + 119], ah
     7af: 72 69                        	jb	0x81a <.dynsym+0x4fa>
     7b1: 74 65                        	je	0x818 <.dynsym+0x4f8>
     7b3: 40 47                        	<unknown>
     7b5: 4c 49                        	<unknown>
     7b7: 42 43                        	<unknown>
     7b9: 5f                           	pop	rdi
     7ba: 32 2e                        	xor	ch, byte ptr [rsi]
     7bc: 32 2e                        	xor	ch, byte ptr [rsi]
     7be: 35 00 76 6b 42               	xor	eax, 1114338816
     7c3: 65 67 69 6e 43 6f 6d 6d 61   	imul	ebp, dword ptr gs:[esi + 67], 1634561391
     7cc: 6e                           	outsb	dx, byte ptr [rsi]
     7cd: 64 42 75 66                  	jne	0x837 <.dynsym+0x517>
     7d1: 66 65 72 00                  	jb	0x7d5 <.dynsym+0x4b5>
     7d5: 76 6b                        	jbe	0x842 <.dynsym+0x522>
     7d7: 45 6e                        	outsb	dx, byte ptr [rsi]
     7d9: 75 6d                        	jne	0x848 <.dynsym+0x528>
     7db: 65 72 61                     	jb	0x83f <.dynsym+0x51f>
     7de: 74 65                        	je	0x845 <.dynsym+0x525>
     7e0: 49 6e                        	outsb	dx, byte ptr [rsi]
     7e2: 73 74                        	jae	0x858 <.dynsym+0x538>
     7e4: 61                           	<unknown>
     7e5: 6e                           	outsb	dx, byte ptr [rsi]
     7e6: 63 65 4c                     	movsxd	esp, dword ptr [rbp + 76]
     7e9: 61                           	<unknown>
     7ea: 79 65                        	jns	0x851 <.dynsym+0x531>
     7ec: 72 50                        	jb	0x83e <.dynsym+0x51e>
     7ee: 72 6f                        	jb	0x85f <.dynsym+0x53f>
     7f0: 70 65                        	jo	0x857 <.dynsym+0x537>
     7f2: 72 74                        	jb	0x868 <.dynsym+0x548>
     7f4: 69 65 73 00 5f 49 54         	imul	esp, dword ptr [rbp + 115], 1414094592
     7fb: 4d 5f                        	pop	r15
     7fd: 72 65                        	jb	0x864 <.dynsym+0x544>
     7ff: 67 69 73 74 65 72 54 4d      	imul	esi, dword ptr [ebx + 116], 1297379941
     807: 43 6c                        	insb	byte ptr es:[rdi], dx
     809: 6f                           	outsd	dx, dword ptr [rsi]
     80a: 6e                           	outsb	dx, byte ptr [rsi]
     80b: 65 54                        	push	rsp
     80d: 61                           	<unknown>
     80e: 62                           	<unknown>
     80f: 6c                           	insb	byte ptr es:[rdi], dx
     810: 65 00 76 6b                  	add	byte ptr gs:[rsi + 107], dh
     814: 42 69 6e 64 42 75 66 66      	imul	ebp, dword ptr [rsi + 100], 1717990722
     81c: 65 72 4d                     	jb	0x86c <.dynsym+0x54c>
     81f: 65 6d                        	insd	dword ptr es:[rdi], dx
     821: 6f                           	outsd	dx, dword ptr [rsi]
     822: 72 79                        	jb	0x89d <.dynsym+0x57d>
     824: 00 6e 6e                     	add	byte ptr [rsi + 110], ch
     827: 56                           	push	rsi
     828: 61                           	<unknown>
     829: 6c                           	insb	byte ptr es:[rdi], dx
     82a: 69 64 43 72 6f 73 73 43      	imul	esp, dword ptr [rbx + 2*rax + 114], 1131639663
     832: 6f                           	outsd	dx, dword ptr [rsi]
     833: 72 72                        	jb	0x8a7 <.dynsym+0x587>
     835: 65 6c                        	insb	byte ptr es:[rdi], dx
     837: 61                           	<unknown>
     838: 74 69                        	je	0x8a3 <.dynsym+0x583>
     83a: 6f                           	outsd	dx, dword ptr [rsi]
     83b: 6e                           	outsb	dx, byte ptr [rsi]
     83c: 47 70 75                     	jo	0x8b4 <.dynsym+0x594>
     83f: 00 44 65 73                  	add	byte ptr [rbp + 2*riz + 115], al
     843: 74 72                        	je	0x8b7 <.dynsym+0x597>
     845: 6f                           	outsd	dx, dword ptr [rsi]
     846: 79 44                        	jns	0x88c <.dynsym+0x56c>
     848: 65 62 75 67 55 74            	<unknown>
     84e: 69 6c 73 4d 65 73 73 65      	imul	ebp, dword ptr [rbx + 2*rsi + 77], 1702064997
     856: 6e                           	outsb	dx, byte ptr [rsi]
     857: 67 65 72 45                  	jb	0x8a0 <.dynsym+0x580>
     85b: 58                           	pop	rax
     85c: 54                           	push	rsp
     85d: 00 5f 5f                     	add	byte ptr [rdi + 95], bl
     860: 63 78 61                     	movsxd	edi, dword ptr [rax + 97]
     863: 5f                           	pop	rdi
     864: 66 69 6e 61 6c 69            	imul	bp, word ptr [rsi + 97], 26988
     86a: 7a 65                        	jp	0x8d1 <.dynsym+0x5b1>
     86c: 40 47                        	<unknown>
     86e: 4c 49                        	<unknown>
     870: 42 43                        	<unknown>
     872: 5f                           	pop	rdi
     873: 32 2e                        	xor	ch, byte ptr [rsi]
     875: 32 2e                        	xor	ch, byte ptr [rsi]
     877: 35 00 6e 6e 43               	xor	eax, 1131310592
     87c: 72 65                        	jb	0x8e3 <.dynsym+0x5c3>
     87e: 61                           	<unknown>
     87f: 74 65                        	je	0x8e6 <.dynsym+0x5c6>
     881: 56                           	push	rsi
     882: 6b 50 69 70                  	imul	edx, dword ptr [rax + 105], 112
     886: 65 6c                        	insb	byte ptr es:[rdi], dx
     888: 69 6e 65 43 61 63 68         	imul	ebp, dword ptr [rsi + 101], 1751343427
     88f: 65 00 73 74                  	add	byte ptr gs:[rbx + 116], dh
     893: 64 65 72 72                  	jb	0x909 <.dynsym+0x5e9>
     897: 40 47                        	<unknown>
     899: 4c 49                        	<unknown>
     89b: 42 43                        	<unknown>
     89d: 5f                           	pop	rdi
     89e: 32 2e                        	xor	ch, byte ptr [rsi]
     8a0: 32 2e                        	xor	ch, byte ptr [rsi]
     8a2: 35                           	<unknown>
     8a3: 00                           	<unknown>

Disassembly of section .shstrtab:

0000000000000000 <.shstrtab>:
       0: 00 2e                        	add	byte ptr [rsi], ch
       2: 73 79                        	jae	0x7d <.symtab+0x7d>
       4: 6d                           	insd	dword ptr es:[rdi], dx
       5: 74 61                        	je	0x68 <.symtab+0x68>
       7: 62 00 2e 73                  	<unknown>
       b: 74 72                        	je	0x7f <.symtab+0x7f>
       d: 74 61                        	je	0x70 <.symtab+0x70>
       f: 62 00 2e 73                  	<unknown>
      13: 68 73 74 72 74               	push	1953657971
      18: 61                           	<unknown>
      19: 62 00 2e 6e                  	<unknown>
      1d: 6f                           	outsd	dx, dword ptr [rsi]
      1e: 74 65                        	je	0x85 <.symtab+0x85>
      20: 2e 67 6e                     	outsb	dx, byte ptr cs:[esi]
      23: 75 2e                        	jne	0x53 <.symtab+0x53>
      25: 62                           	<unknown>
      26: 75 69                        	jne	0x91 <.symtab+0x91>
      28: 6c                           	insb	byte ptr es:[rdi], dx
      29: 64 2d 69 64 00 2e            	sub	eax, 771777641
      2f: 67 6e                        	outsb	dx, byte ptr [esi]
      31: 75 2e                        	jne	0x61 <.symtab+0x61>
      33: 68 61 73 68 00               	push	6845281
      38: 2e 64 79 6e                  	jns	0xaa <.symtab+0xaa>
      3c: 73 79                        	jae	0xb7 <.symtab+0xb7>
      3e: 6d                           	insd	dword ptr es:[rdi], dx
      3f: 00 2e                        	add	byte ptr [rsi], ch
      41: 64 79 6e                     	jns	0xb2 <.symtab+0xb2>
      44: 73 74                        	jae	0xba <.symtab+0xba>
      46: 72 00                        	jb	0x48 <.symtab+0x48>
      48: 2e 67 6e                     	outsb	dx, byte ptr cs:[esi]
      4b: 75 2e                        	jne	0x7b <.symtab+0x7b>
      4d: 76 65                        	jbe	0xb4 <.symtab+0xb4>
      4f: 72 73                        	jb	0xc4 <.symtab+0xc4>
      51: 69 6f 6e 00 2e 67 6e         	imul	ebp, dword ptr [rdi + 110], 1852255744
      58: 75 2e                        	jne	0x88 <.symtab+0x88>
      5a: 76 65                        	jbe	0xc1 <.symtab+0xc1>
      5c: 72 73                        	jb	0xd1 <.symtab+0xd1>
      5e: 69 6f 6e 5f 72 00 2e         	imul	ebp, dword ptr [rdi + 110], 771781215
      65: 72 65                        	jb	0xcc <.symtab+0xcc>
      67: 6c                           	insb	byte ptr es:[rdi], dx
      68: 61                           	<unknown>
      69: 2e 64 79 6e                  	jns	0xdb <.symtab+0xdb>
      6d: 00 2e                        	add	byte ptr [rsi], ch
      6f: 72 65                        	jb	0xd6 <.symtab+0xd6>
      71: 6c                           	insb	byte ptr es:[rdi], dx
      72: 61                           	<unknown>
      73: 2e 70 6c                     	jo	0xe2 <.symtab+0xe2>
      76: 74 00                        	je	0x78 <.symtab+0x78>
      78: 2e 69 6e 69 74 00 2e 70      	imul	ebp, dword ptr cs:[rsi + 105], 1882062964
      80: 6c                           	insb	byte ptr es:[rdi], dx
      81: 74 2e                        	je	0xb1 <.symtab+0xb1>
      83: 67 6f                        	outsd	dx, dword ptr [esi]
      85: 74 00                        	je	0x87 <.symtab+0x87>
      87: 2e 74 65                     	je	0xef <.symtab+0xef>
      8a: 78 74                        	js	0x100 <.symtab+0x100>
      8c: 00 2e                        	add	byte ptr [rsi], ch
      8e: 66 69 6e 69 00 2e            	imul	bp, word ptr [rsi + 105], 11776
      94: 72 6f                        	jb	0x105 <.symtab+0x105>
      96: 64 61                        	<unknown>
      98: 74 61                        	je	0xfb <.symtab+0xfb>
      9a: 00 2e                        	add	byte ptr [rsi], ch
      9c: 65 68 5f 66 72 61            	push	1634887263
      a2: 6d                           	insd	dword ptr es:[rdi], dx
      a3: 65 5f                        	pop	rdi
      a5: 68 64 72 00 2e               	push	771781220
      aa: 65 68 5f 66 72 61            	push	1634887263
      b0: 6d                           	insd	dword ptr es:[rdi], dx
      b1: 65 00 2e                     	add	byte ptr gs:[rsi], ch
      b4: 69 6e 69 74 5f 61 72         	imul	ebp, dword ptr [rsi + 105], 1918984052
      bb: 72 61                        	jb	0x11e <.symtab+0x11e>
      bd: 79 00                        	jns	0xbf <.symtab+0xbf>
      bf: 2e 66 69 6e 69 5f 61         	imul	bp, word ptr cs:[rsi + 105], 24927
      c6: 72 72                        	jb	0x13a <.symtab+0x13a>
      c8: 61                           	<unknown>
      c9: 79 00                        	jns	0xcb <.symtab+0xcb>
      cb: 2e 64 61                     	<unknown>
      ce: 74 61                        	je	0x131 <.symtab+0x131>
      d0: 2e 72 65                     	jb	0x138 <.symtab+0x138>
      d3: 6c                           	insb	byte ptr es:[rdi], dx
      d4: 2e 72 6f                     	jb	0x146 <.symtab+0x146>
      d7: 00 2e                        	add	byte ptr [rsi], ch
      d9: 64 79 6e                     	jns	0x14a <.symtab+0x14a>
      dc: 61                           	<unknown>
      dd: 6d                           	insd	dword ptr es:[rdi], dx
      de: 69 63 00 2e 67 6f 74         	imul	esp, dword ptr [rbx], 1953457966
      e5: 2e 70 6c                     	jo	0x154 <.symtab+0x154>
      e8: 74 00                        	je	0xea <.symtab+0xea>
      ea: 2e 64 61                     	<unknown>
      ed: 74 61                        	je	0x150 <.symtab+0x150>
      ef: 00 2e                        	add	byte ptr [rsi], ch
      f1: 62                           	<unknown>
      f2: 73 73                        	jae	0x167 <.symtab+0x167>
      f4: 00 2e                        	add	byte ptr [rsi], ch
      f6: 63 6f 6d                     	movsxd	ebp, dword ptr [rdi + 109]
      f9: 6d                           	insd	dword ptr es:[rdi], dx
      fa: 65 6e                        	outsb	dx, byte ptr gs:[rsi]
      fc: 74 00                        	je	0xfe <.symtab+0xfe>
